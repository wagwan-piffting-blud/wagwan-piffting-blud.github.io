!function (e, t) {
  'object' == typeof exports &&
  'object' == typeof module ? module.exports = t() : 'function' == typeof define &&
  define.amd ? define([], t) : 'object' == typeof exports ? exports.TheBeat = t() : e.TheBeat = t()
}(
  this,
  function () {
    return function (e) {
      function t(n) {
        if (r[n]) return r[n].exports;
        var a = r[n] = {
          exports: {
          },
          id: n,
          loaded: !1
        };
        return e[n].call(a.exports, a, a.exports, t),
        a.loaded = !0,
        a.exports
      }
      var n = window.webpackJsonpTheBeat;
      window.webpackJsonpTheBeat = function (r, i) {
        for (var o, s, c = 0, l = []; c < r.length; c++) s = r[c],
        a[s] &&
        l.push.apply(l, a[s]),
        a[s] = 0;
        for (o in i) {
          var u = i[o];
          switch (typeof u) {
            case 'object':
              e[o] = function (t) {
                var n = t.slice(1),
                r = t[0];
                return function (t, a, i) {
                  e[r].apply(this, [
                    t,
                    a,
                    i
                  ].concat(n))
                }
              }(u);
              break;
            case 'function':
              e[o] = u;
              break;
            default:
              e[o] = e[u]
          }
        }
        for (n && n(r, i); l.length; ) l.shift().call(null, t)
      };
      var r = {},
      a = {
        0: 0
      };
      return t.e = function (e, n) {
        if (0 === a[e]) return n.call(null, t);
        if (void 0 !== a[e]) a[e].push(n);
         else {
          a[e] = [
            n
          ];
          var r = document.getElementsByTagName('head') [0],
          i = document.createElement('script');
          i.type = 'text/javascript',
          i.charset = 'utf-8',
          i.async = !0,
          i.src = t.p + '' + e + '.4a0bb9.bundle.js',
          r.appendChild(i)
        }
      },
      t.m = e,
      t.c = r,
      t.p = '',
      t(0)
    }(
      function (e) {
        for (var t in e) if (Object.prototype.hasOwnProperty.call(e, t)) switch (typeof e[t]) {
          case 'function':
            break;
          case 'object':
            e[t] = function (t) {
              var n = t.slice(1),
              r = e[t[0]];
              return function (e, t, a) {
                r.apply(this, [
                  e,
                  t,
                  a
                ].concat(n))
              }
            }(e[t]);
            break;
          default:
            e[t] = e[e[t]]
        }
        return e
      }(
        [function (e, t, n) {
          e.exports = n(646)
        },
        function (e, t, n) {
          'use strict';
          var r = n(60);
          e.exports = function (e) {
            return r.translate(e)
          }
        },
        function (e, t, n) {
          'use strict';
          e.exports = n(118)
        },
        function (e, t, n) {
          e.exports = {
            'default': n(735),
            __esModule: !0
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a() {
            try {
              JSON.parse(window.localStorage.getItem('pamplona-version')) === y &&
              (
                S = JSON.parse(window.localStorage.getItem('pamplona-session')),
                C = JSON.parse(window.localStorage.getItem('pamplona-is-guest')),
                D = JSON.parse(window.localStorage.getItem('pamplona-accepted-sharing')),
                A = JSON.parse(window.localStorage.getItem('pamplona-dismissed-welcome'))
              )
            } catch (e) {
              console.error('Failed to load session from LocalStorage')
            }
          }
          function i() {
            try {
              window.localStorage.setItem('pamplona-version', (0, f['default']) (y)),
              window.localStorage.setItem('pamplona-session', (0, f['default']) (S)),
              window.localStorage.setItem('pamplona-is-guest', (0, f['default']) (C)),
              window.localStorage.setItem('pamplona-accepted-sharing', (0, f['default']) (D)),
              window.localStorage.setItem('pamplona-dismissed-welcome', (0, f['default']) (A))
            } catch (e) {
              console.error('Failed to set session to LocalStorage', e)
            }
          }
          function o(e) {
            S = e,
            i()
          }
          function s(e) {
            S &&
            (S.acceptedToS = e, i())
          }
          function c(e) {
            S &&
            (D = e, i())
          }
          function l(e) {
            A = e,
            i()
          }
          function u(e) {
            C = e,
            i()
          }
          function p() {
            S = null,
            C = null,
            D = null,
            A = null
          }
          var d = n(39),
          f = r(d),
          m = n(3),
          h = r(m),
          _ = n(16),
          g = n(12),
          v = n(10),
          E = n(134),
          I = n(14),
          b = n(6).ActionTypes,
          y = 5,
          T = !1,
          S = null,
          C = null,
          D = null,
          A = null,
          O = (0, h['default']) ({
          }, g, {
            getIsReady: function () {
              return T
            },
            getIsLoggedIn: function () {
              return !!S
            },
            getIsGuest: function () {
              return !!C
            },
            getHasAcceptedToS: function () {
              return window.cordova ? this.getIsLoggedIn() &&
              !!S.acceptedToS : !0
            },
            getHasAcceptedSharing: function () {
              return window.cordova ? !!D : !0
            },
            getHasDismissedWelcome: function () {
              return A
            },
            getSession: function () {
              return S
            },
            getSessionId: function () {
              return S &&
              S.sessionId.sessionId
            },
            getNucleusId: function () {
              return S &&
              S.nucleusId
            },
            getCurrentPlatform: function () {
              return S &&
              S.platform
            },
            getCurrentPersonaId: function () {
              return S &&
              S.personaId
            },
            getCurrentPersona: function () {
              return S &&
              _(
                S.personas,
                function (e) {
                  return e.platform === S.platform &&
                  e.personaId === S.personaId
                }
              )
            },
            getPersonas: function () {
              return S &&
              S.personas
            }
          });
          O.setMaxListeners(30),
          O.dispatchToken = v.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case b.APP_START:
                  p(),
                  a(),
                  O.emitChange();
                  break;
                case b.ORIGIN_ACCEPT_TOS:
                  s(!0),
                  O.emitChange();
                  break;
                case b.ORIGIN_SET_GUEST:
                  u(t.data),
                  O.emitChange();
                  break;
                case b.SESSION_LOGIN_GUEST:
                  u(!0),
                  O.emitChange();
                  break;
                case b.SESSION_LOGOUT_GUEST:
                  u(!1),
                  O.emitChange();
                  break;
                case b.SESSION_ACCEPT_SHARING:
                  c(!0),
                  O.emitChange();
                  break;
                case b.SESSION_DISMISS_WELCOME:
                  l(!0),
                  O.emitChange()
              }
            }
          ),
          O.sessionDispatchToken = E.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case b.SESSION_VALIDATED:
                  T = !0,
                  O.emitChange();
                  break;
                case b.SESSION_INVALIDATED:
                  T = !0,
                  p(),
                  i(),
                  O.emitChange()
              }
            }
          ),
          O.gatewayDispatchToken = I.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                  T = !0,
                  o(t.data),
                  i(),
                  O.emitChange();
                  break;
                case 'BeatAuthentication.selectPersona':
                  T = !0,
                  o(t.data),
                  i(),
                  O.emitChange();
                  break;
                case 'BeatAuthentication.logout_REQUEST':
                  T = !0,
                  p(),
                  i(),
                  O.emitChange()
              }
            }
          ),
          e.exports = O
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r, a, i, o, s) {
            if (!e) {
              var c;
              if (void 0 === t) c = new Error(
                'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.'
              );
               else {
                var l = [
                  n,
                  r,
                  a,
                  i,
                  o,
                  s
                ],
                u = 0;
                c = new Error(t.replace(/%s/g, function () {
                  return l[u++]
                })),
                c.name = 'Invariant Violation'
              }
              throw c.framesToPop = 1,
              c
            }
          }
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = {
            PayloadSources: n(655),
            ActionTypes: n(323),
            RecommendationReasons: n(656)
          };
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            if (null == e) throw new TypeError('Object.assign target cannot be null or undefined');
            for (
              var n = Object(e),
              r = Object.prototype.hasOwnProperty,
              a = 1;
              a < arguments.length;
              a++
            ) {
              var i = arguments[a];
              if (null != i) {
                var o = Object(i);
                for (var s in o) r.call(o, s) &&
                (n[s] = o[s])
              }
            }
            return n
          }
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          var r = n(1450);
          t.create = function () {
            var e = Array.prototype.slice.call(arguments);
            return {
              componentWillUnmount: function () {
                var t = this;
                e.forEach(function (e) {
                  e.removeChangeListener(t._onChange)
                })
              },
              getInitialState: function () {
                return r(
                  this.getStateFromStore,
                  'FluxListenerMixin used in component ' + this.constructor.displayName + ' but ' + this.constructor.displayName + ' does not define a method named getStateFromStore.'
                ),
                this.getStateFromStore()
              },
              _onChange: function () {
                this.setState(this.getStateFromStore())
              },
              componentWillMount: function () {
                var t = this;
                e.forEach(function (e) {
                  e.addChangeListener(t._onChange)
                })
              }
            }
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(36),
          a = r;
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(100).Dispatcher,
          s = n(6),
          c = (0, i['default']) (
            new o,
            {
              handleViewAction: function (e) {
                var t = {
                  source: s.PayloadSources.VIEW_ACTION,
                  action: e
                };
                this.dispatch(t)
              }
            }
          );
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(85),
          i = n(19),
          o = n(54),
          s = n(31);
          n(783);
          var c = r.createClass({
            displayName: 'Panel',
            propTypes: {
              position: r.PropTypes.oneOf(['left',
              'right',
              'bottom']),
              title: r.PropTypes.string,
              noScroll: r.PropTypes.bool
            },
            contextTypes: {
              router: r.PropTypes.func.isRequired,
              depth: r.PropTypes.number,
              count: r.PropTypes.number,
              currentState: r.PropTypes.object
            },
            getInitialState: function () {
              return {
                isVisible: !1
              }
            },
            getDefaultProps: function () {
              return {
                position: 'right',
                title: null
              }
            },
            componentDidMount: function () {
              var e = this;
              setTimeout(function () {
                e.setState({
                  isVisible: !0
                })
              }, 220)
            },
            onBackButtonClick: function () {
              s.back()
            },
            onCloseButtonClick: function () {
              s.closePanel(this.context.depth)
            },
            render: function () {
              var e,
              t = 'panel-pos-' + this.props.position;
              null !== this.context.depth &&
              this.context.count > 1 &&
              (
                this.context.depth < this.context.count - 1 ? e = 'panel-sidebyside-outer' : this.context.depth === this.context.count - 1 &&
                (e = 'panel-sidebyside-inner')
              );
              var n,
              s;
              this.context.depth === this.context.count - 1 &&
              (
                n = r.createElement(
                  'button',
                  {
                    input: 'button',
                    className: 'panel-close-button',
                    onClick: this.onCloseButtonClick
                  }
                ),
                this.context.depth >= 1 &&
                (
                  s = r.createElement(
                    'button',
                    {
                      input: 'button',
                      className: 'panel-hidden-button',
                      onClick: this.onBackButtonClick
                    }
                  )
                )
              );
              var c,
              l;
              this.props.title &&
              (
                this.context.currentState.disableBack ||
                (
                  l = r.createElement(
                    'button',
                    {
                      onClick: this.onBackButtonClick
                    },
                    r.createElement(
                      'i',
                      {
                        className: i(
                          'fa',
                          'bottom' === this.props.position ? 'fa-close' : 'fa-chevron-left'
                        )
                      }
                    )
                  )
                ),
                c = r.createElement(
                  'div',
                  {
                    className: 'panel-navbar'
                  },
                  r.createElement('div', {
                    className: 'panel-navbar-left'
                  }, l),
                  r.createElement('div', {
                    className: 'panel-navbar-title'
                  }, this.props.title),
                  r.createElement('div', {
                    className: 'panel-navbar-right'
                  })
                )
              );
              var u;
              return this.state.isVisible &&
              (
                u = r.createElement('div', {
                  className: 'panel-content'
                }, this.props.children),
                this.props.noScroll ||
                (u = r.createElement(o, null, u))
              ),
              r.createElement(
                'div',
                {
                  className: i('panel', t, e, this.props.className)
                },
                s,
                c,
                n,
                r.createElement(
                  a,
                  {
                    component: 'div',
                    className: 'panel-content-container',
                    transitionName: 'fade',
                    transitionEnterTimeout: 100,
                    transitionLeaveTimeout: 100
                  },
                  u
                )
              )
            }
          });
          e.exports = c
        },
        function (e, t, n) {
          var r = n(91).EventEmitter,
          a = n(1449),
          i = 'change',
          o = a({
          }, r.prototype, {
            emitChange: function () {
              this.emit(i)
            },
            addChangeListener: function (e) {
              this.on(i, e)
            },
            removeChangeListener: function (e) {
              this.removeListener(i, e)
            }
          });
          e.exports = o
        },
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(100).Dispatcher,
          s = n(6),
          c = (0, i['default']) (
            new o,
            {
              handleServerAction: function (e) {
                var t = {
                  source: s.PayloadSources.SERVER_ACTION,
                  action: e
                };
                this.dispatch(t)
              }
            }
          );
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(39),
          i = r(a),
          o = n(55),
          s = r(o),
          c = n(109),
          l = n(14),
          u = n(134),
          p = n(649),
          d = n(60),
          f = n(6).ActionTypes,
          m = n(31),
          h = n(73),
          _ = n(4),
          g = n(17),
          v = n(45),
          E = n(38),
          I = n(44),
          b = - 1940918635,
          y = {
            iOS: 'ios',
            Android: 'android',
            windows: 'windowsphone'
          },
          T = {
            request: function (e, t, n) {
              t ||
              (t = {});
              var r = e.split('.') [0];
              return void 0 === n &&
              (
                n = 'BeatAuthentication' === r ? window.cordova ? 'mobile' : 'web' : _.getCurrentPlatform()
              ),
              c(
                function () {
                  return l.handleServerAction({
                    type: e + '_REQUEST',
                    params: t,
                    platform: n
                  })
                }
              ),
              new s['default'](
                function (r, a) {
                  p.request(e, t, n).then(
                    function (a) {
                      l.handleServerAction({
                        type: e,
                        params: t,
                        platform: n,
                        data: a
                      }),
                      r(a)
                    },
                    function (r) {
                      l.handleServerAction({
                        type: e + '_ERROR',
                        params: t,
                        platform: n,
                        error: r
                      }),
                      a(r)
                    }
                  )
                }
              )
            },
            ugcRequest: function (e, t, n) {
              var r = {
                ugcType: e,
                ugcId: t,
                ugcUrl: n
              };
              return l.handleServerAction({
                type: f.UGCDATA_REQUEST,
                params: r
              }),
              new s['default'](
                function (e, t) {
                  p.ugcRequest(n).then(
                    function (t) {
                      l.handleServerAction({
                        type: f.UGCDATA,
                        params: r,
                        data: t
                      }),
                      e(t)
                    },
                    function (e) {
                      l.handleServerAction({
                        type: f.UGCDATA_ERROR,
                        params: r,
                        error: e
                      }),
                      t(e)
                    }
                  )
                }
              )
            },
            init: function () {
              var e = this;
              _.getSessionId() ? this.request(
                'PamplonaAuthenticated.getInitialGameData',
                {
                  levelIds: [
                    b
                  ]
                },
                _.getCurrentPlatform()
              ).then(
                function () {
                  u.handleAction({
                    type: f.SESSION_VALIDATED
                  }),
                  e.getInitialUserData()
                },
                function () {
                  u.handleAction({
                    type: f.SESSION_INVALIDATED
                  })
                }
              ) : u.handleAction({
                type: f.SESSION_VALIDATED
              })
            },
            login: function (e, t, n) {
              var r = this,
              a = {
                authCode: e,
                redirectUri: t
              };
              window.cordova &&
              window.device &&
              (
                a.mobileUserAgent = {
                  device: window.matchMedia('(min-width: 769px)').matches ? 'tablet' : 'phone',
                  mobilePlatform: y[window.device.platform] ||
                  null
                }
              );
              var i = this.request('BeatAuthentication.viaAuthCode', a);
              return i.then(
                function () {
                  r.request('PamplonaAuthenticated.getInitialGameData', {
                    levelIds: [
                      b
                    ]
                  }).then(function () {
                    r.getInitialUserData()
                  })
                }
              ),
              i['catch'](function (e) {
                701 === e.code &&
                n &&
                h.loginAsGuest()
              }),
              i
            },
            logout: function () {
              return this.request('BeatAuthentication.logout')
            },
            selectPersona: function (e) {
              var t = this.request('BeatAuthentication.selectPersona', {
                personaId: e
              });
              return t.then(function () {
                m.navigate('home'),
                window.location.reload()
              }),
              t
            },
            setAcceptedToSFlag: function (e) {
              return this.request('BeatAuthentication.setAcceptedToSFlag', {
                accepted: e
              })
            },
            getPlayerInfo: function (e, t) {
              return e ? this.request('Pamplona.getPlayerInfo', {
                personaId: e
              }, t) : _.getIsLoggedIn() ? (
                e = _.getCurrentPersona().personaId,
                this.request('Pamplona.getPlayerInfo', {
                  personaId: e
                })
              ) : void console.error(
                'Missing personaIds parameter or valid session for GatewayActions.getPlayerInfo'
              )
            },
            getPlayerTag: function (e, t) {
              return e ? this.request('Pamplona.getPlayerTag', {
                personaId: e
              }, t) : _.getIsLoggedIn() ? (
                e = _.getCurrentPersona().personaId,
                this.request('Pamplona.getPlayerTag', {
                  personaId: e
                })
              ) : void console.error(
                'Missing personaIds parameter or valid session for GatewayActions.getPlayerTag'
              )
            },
            getPlayerTags: function (e, t) {
              if (e) return this.request('Pamplona.getPlayerTags', {
                personaIds: e
              }, t);
              if (_.getIsLoggedIn()) {
                var n = _.getCurrentPersona().personaId;
                return this.request('Pamplona.getPlayerTags', {
                  personaIds: [
                    n
                  ]
                })
              }
              console.error(
                'Missing personaIds parameter or valid session for GatewayActions.getPlayerTags'
              )
            },
            getPlayerLocation: function (e, t) {
              var n = this;
              return e ? s['default'].all(
                e.map(
                  function (e) {
                    n.request('Pamplona.getPlayerLocation', {
                      personaId: e
                    }, t)
                  }
                )
              ) : _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.getPlayerLocation') : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getPlayerLocation'
              )
            },
            getPersonaStats: function (e, t) {
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? this.request('PamplonaAuthenticated.getPersonaStats') : e ? this.request('Pamplona.getPersonaStats', {
                personaId: e
              }, t) : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getPersonaStats'
              )
            },
            getBookmarks: function (e, t) {
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? this.request('PamplonaAuthenticated.getBookmarks', {
                levelIds: [
                  b
                ]
              }) : e ? this.request('Pamplona.getBookmarks', {
                levelIds: [
                  b
                ],
                personaId: e
              }, t) : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getBookmarks'
              )
            },
            getFriends: function (e, t) {
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? this.request('PamplonaAuthenticated.getFriends') : e ? this.request('Pamplona.getFriends', {
                personaId: e
              }, t) : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getFriends'
              )
            },
            getFollowed: function (e, t) {
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? this.request('PamplonaAuthenticated.getFollowed') : e ? this.request('Pamplona.getFollowed', {
                personaId: e
              }, t) : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getFollowed'
              )
            },
            getPlayerUGC: function (e, t) {
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? this.request('PamplonaAuthenticated.getPlayerUGC') : e ? this.request('Pamplona.getPlayerUGC', {
                personaId: e
              }, t) : void console.error(
                'Missing personaId parameter or valid session for GatewayActions.getPlayerUGC'
              )
            },
            getNotifications: function () {
              return _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.getNotifications') : void console.error(
                'Missing valid session for GatewayActions.getNotifications OR notification settings are turned off'
              )
            },
            updateLastReadNotificationTimestamp: function () {
              return _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.updateLastReadNotificationTimestamp') : void console.error(
                'Missing valid session for GatewayActions.updateLastReadNotificationTimestamp'
              )
            },
            getInitialUserData: function () {
              var e = this;
              this.getPlayerTags(),
              this.getFriends(_.getCurrentPersona().personaId),
              this.getFollowed(_.getCurrentPersona().personaId),
              this.getNotifications(),
              this.getRunnersRouteData(
                v.getAll().map(function (e) {
                  return e.meta.id
                }),
                [
                  'STATS',
                  'USER_STATS'
                ]
              ),
              this.getInventory(),
              this.getPlayerUGC(_.getCurrentPersona().personaId).then(
                function (t) {
                  var n = [],
                  r = [];
                  t.playerReachThis.forEach(
                    function (e) {
                      var t = I.get(e.meta.ugcId);
                      void 0 !== t &&
                      n.push(e.meta.ugcId)
                    }
                  ),
                  t.playerTimeTrials.forEach(
                    function (e) {
                      var t = E.get(e.meta.ugcId);
                      void 0 !== t &&
                      r.push(e.meta.ugcId)
                    }
                  ),
                  n.length > 0 &&
                  e.getReachThisData(
                    n,
                    [
                      'META',
                      'STATS',
                      'USER_STATS'
                    ],
                    _.getCurrentPersona().personaId
                  ),
                  r.length > 0 &&
                  e.getTimeTrialData(
                    r,
                    [
                      'META',
                      'STATS',
                      'USER_STATS'
                    ],
                    _.getCurrentPersona().personaId
                  )
                }
              )
            },
            getProfile: function (e, t) {
              var n = this;
              return s['default'].all(
                [this.getPlayerInfo,
                this.getFriends,
                this.getFollowed,
                this.getPlayerTag,
                this.getPersonaStats,
                this.getLatestPlayed,
                this.getPlayerUGC].map(function (r) {
                  return r.call(n, e, t)
                })
              )
            },
            _updateLatestPlayed: function (e, t) {
              var n = [],
              r = [];
              g.getLatestPlayed(e).forEach(
                function (e) {
                  var t;
                  null !== e.time &&
                  (
                    'TimeTrial' === e.type ? (t = E.get(e.id), t && t.meta.name || n.push(e.id)) : 'ReachThis' === e.type &&
                    (t = I.get(e.id), t && t.meta.name || r.push(e.id))
                  )
                }
              ),
              n.length > 0 &&
              this.getTimeTrialData(n, [
                'META',
                'STATS',
                'USERS_STATS'
              ], e, t),
              r.length > 0 &&
              this.getReachThisData(r, [
                'META',
                'STATS',
                'USERS_STATS'
              ], e, t)
            },
            getLatestPlayed: function (e, t) {
              var n,
              r = this;
              return _.getIsLoggedIn() &&
              e === _.getCurrentPersona().personaId ? n = this.request('PamplonaAuthenticated.getLatestPlayed') : e ? n = this.request('Pamplona.getLatestPlayed', {
                personaId: e
              }, t) : console.error(
                'Missing valid session for GatewayActions.getPlayedChallenges'
              ),
              n ? (n.then(function () {
                return r._updateLatestPlayed(e, t)
              }), n) : void 0
            },
            setPlayerTag: function (e) {
              return _.getIsLoggedIn() ? (
                g.setEmblem(e),
                this.request('PamplonaAuthenticated.setPlayerTag', {
                  tagData: e
                })
              ) : void console.error('Cannot call setPlayerTag when not logged in')
            },
            setPlayerLocation: function (e) {
              var t = this;
              if (_.getIsLoggedIn()) {
                var n = this.request('PamplonaAuthenticated.setPlayerLocation', {
                  areaId: e
                });
                return n.then(function () {
                  t.getPlayerLocation()
                }),
                n
              }
              console.error('Cannot call setPlayerLocation when not logged in')
            },
            clearPlayerLocation: function () {
              var e = this;
              if (_.getIsLoggedIn()) {
                var t = this.request('PamplonaAuthenticated.clearPlayerLocation');
                return t.then(function () {
                  e.getPlayerLocation()
                }),
                t
              }
              console.error('Cannot call clearPlayerLocation when not logged in')
            },
            setUgcPublishedFlag: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.setUgcPublishedFlag',
                {
                  ugcType: e,
                  ugcId: t,
                  published: n
                }
              ) : void console.error('Cannot call setUgcPublishedFlag when not logged in')
            },
            setUgcName: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.setUgcName',
                {
                  ugcType: e,
                  ugcId: t,
                  name: n
                }
              ) : void console.error('Cannot call setUgcName when not logged in')
            },
            deleteUGC: function (e, t) {
              return _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.deleteUGC', {
                ugcId: t,
                ugcType: e
              }) : void console.error('Cannot call deleteUgc when not logged in')
            },
            getRunnersRouteData: function (e, t, n, r) {
              return _.getIsLoggedIn() &&
              null == n ? this.request(
                'PamplonaAuthenticated.getRunnersRouteData',
                {
                  challengeIds: e,
                  dataTypes: t
                },
                r
              ) : this.request(
                'Pamplona.getRunnersRouteData',
                {
                  challengeIds: e,
                  dataTypes: t,
                  personaId: n
                },
                r
              )
            },
            getOverviewRunnersRouteLeaderboard: function (e, t, n) {
              var r = this,
              a = {
                challengeId: e,
                radius: t
              };
              _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.getOverviewRunnersRouteLeaderboard',
                a,
                n
              ).then(
                function (e) {
                  var t = [];
                  if (e.globalLeader) {
                    var a = g.getLocation(e.globalLeader.personaId);
                    null === a &&
                    t.push(e.globalLeader.personaId)
                  }
                  if (e.leaderboard && e.leaderboard.users) {
                    var i = e.leaderboard.users;
                    i.forEach(
                      function (e) {
                        var n = g.getLocation(e.personaId);
                        null === n &&
                        t.push(e.personaId)
                      }
                    )
                  }
                  t.forEach(function (e) {
                    r.getPlayerInfo(e, n)
                  })
                }
              ) : this.request('Pamplona.getOverviewRunnersRouteLeaderboard', a)
            },
            getRunnersRouteLeaderboard: function (e, t, n, r) {
              var a = this,
              i = {
                challengeId: e,
                offset: t,
                count: n
              };
              if (_.getIsLoggedIn()) {
                var o = this.request('PamplonaAuthenticated.getRunnersRouteLeaderboard', i, r);
                return o.then(
                  function (e) {
                    var t = [],
                    n = e.leaderboard.users;
                    n.forEach(
                      function (e) {
                        var n = g.getLocation(e.personaId);
                        null === n &&
                        t.push(e.personaId)
                      }
                    ),
                    t.forEach(function (e) {
                      a.getPlayerInfo(e, r)
                    })
                  }
                ),
                o
              }
              return this.request('Pamplona.getRunnersRouteLeaderboard', i, r)
            },
            getRunnersRouteFriendsLeaderboard: function (e) {
              var t = this;
              if (_.getIsLoggedIn()) {
                var n = this.request(
                  'PamplonaAuthenticated.getRunnersRouteFriendsLeaderboard',
                  {
                    challengeId: e
                  }
                );
                return n.then(
                  function (e) {
                    var n = [],
                    r = e.leaderboard.users;
                    r.forEach(
                      function (e) {
                        var t = g.getLocation(e.personaId);
                        null === t &&
                        n.push(e.personaId)
                      }
                    ),
                    n.forEach(function (e) {
                      t.getPlayerInfo(e)
                    })
                  }
                ),
                n
              }
              console.error(
                'Cannot call getRunnersRouteFriendsLeaderboard when not logged in'
              )
            },
            getRunnersRouteGeoLeaderboard: function (e, t, n, r, a) {
              var i = this;
              if (_.getIsLoggedIn()) {
                var o = this.request(
                  'PamplonaAuthenticated.getRunnersRouteGeoLeaderboard',
                  {
                    challengeId: e,
                    geoId: t,
                    offset: n,
                    count: r
                  },
                  a
                );
                return o.then(
                  function (e) {
                    var t = [],
                    n = e.leaderboard.users;
                    n.forEach(
                      function (e) {
                        var n = g.getLocation(e.personaId);
                        null === n &&
                        t.push(e.personaId)
                      }
                    ),
                    t.forEach(function (e) {
                      i.getPlayerInfo(e, a)
                    })
                  }
                ),
                o
              }
              console.error(
                'Cannot call getRunnersRouteGeoLeaderboard when not logged in'
              )
            },
            reportCheatRunnersRoute: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.reportCheatRunnersRoute',
                {
                  challengeId: e,
                  comment: t,
                  runnerPersonaId: n
                }
              ) : void console.error('Cannot call reportCheatRunnersRoute when not logged in')
            },
            getPlayerRunnersRoutePercentiles: function (e, t) {
              return e ? this.request('Pamplona.getPlayerRunnersRoutePercentiles', {
                personaId: e
              }, t) : void console.error(
                'Missing personaIds parameter for GatewayActions.getPlayerRunnersRoutePercentiles'
              )
            },
            getTimeTrialData: function (e, t, n, r) {
              return _.getIsLoggedIn() &&
              null == n ? this.request(
                'PamplonaAuthenticated.getTimeTrialData',
                {
                  ugcIds: e,
                  dataTypes: t
                },
                r
              ) : this.request(
                'Pamplona.getTimeTrialData',
                {
                  ugcIds: e,
                  dataTypes: t,
                  personaId: n
                },
                r
              )
            },
            getTimeTrialCheckpoints: function (e, t) {
              return this.ugcRequest('TimeTrial', e, t)
            },
            getOverviewTimeTrialLeaderboard: function (e, t, n) {
              var r = this;
              if (_.getIsLoggedIn()) {
                var a = this.request(
                  'PamplonaAuthenticated.getOverviewTimeTrialLeaderboard',
                  {
                    ugcId: e,
                    radius: t
                  },
                  n
                );
                return a.then(
                  function (e) {
                    var t = [];
                    if (e.globalLeader) {
                      var a = g.getLocation(e.globalLeader.personaId);
                      null === a &&
                      t.push(e.globalLeader.personaId)
                    }
                    if (e.leaderboard && e.leaderboard.users) {
                      var i = e.leaderboard.users;
                      i.forEach(
                        function (e) {
                          var n = g.getLocation(e.personaId);
                          null === n &&
                          t.push(e.personaId)
                        }
                      )
                    }
                    t.forEach(function (e) {
                      r.getPlayerInfo(e, n)
                    })
                  }
                ),
                a
              }
              console.error(
                'Missing valid session for GatewayActions.getOverviewTimeTrialLeaderboard'
              )
            },
            getTimeTrialLeaderboard: function (e, t, n, r) {
              var a,
              i = this;
              return _.getIsLoggedIn() ? (
                a = this.request(
                  'PamplonaAuthenticated.getTimeTrialLeaderboard',
                  {
                    ugcId: e,
                    offset: t,
                    count: n
                  },
                  r
                ),
                a.then(
                  function (e) {
                    var t = [],
                    n = e.leaderboard.users;
                    n.forEach(
                      function (e) {
                        var n = g.getLocation(e.personaId);
                        null === n &&
                        t.push(e.personaId)
                      }
                    ),
                    t.forEach(function (e) {
                      i.getPlayerInfo(e, r)
                    })
                  }
                )
              ) : a = this.request(
                'Pamplona.getTimeTrialLeaderboard',
                {
                  ugcId: e,
                  offset: t,
                  count: n
                },
                r
              ),
              a
            },
            getTimeTrialFriendsLeaderboard: function (e) {
              var t = this;
              if (_.getIsLoggedIn()) {
                var n = this.request(
                  'PamplonaAuthenticated.getTimeTrialFriendsLeaderboard',
                  {
                    ugcId: e
                  }
                );
                return n.then(
                  function (e) {
                    var n = [],
                    r = e.leaderboard.users;
                    r.forEach(
                      function (e) {
                        var t = g.getLocation(e.personaId);
                        null === t &&
                        n.push(e.personaId)
                      }
                    ),
                    n.forEach(function (e) {
                      t.getPlayerInfo(e)
                    })
                  }
                ),
                n
              }
              console.error(
                'Cannot call getTimeTrialFriendsLeaderboard when not logged in'
              )
            },
            reportTimeTrial: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.reportTimeTrial',
                {
                  complaintType: e,
                  petitionDetail: t,
                  ugcId: n
                }
              ) : void console.error('Cannot call reportTimeTrial when not logged in')
            },
            reportCheatTimeTrial: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.reportCheatTimeTrial',
                {
                  comment: e,
                  runnerPersonaId: t,
                  ugcId: n
                }
              ) : void console.error('Cannot call reportCheatTimeTrial when not logged in')
            },
            getReachThisData: function (e, t, n, r) {
              return _.getIsLoggedIn() &&
              null == n ? this.request(
                'PamplonaAuthenticated.getReachThisData',
                {
                  ugcIds: e,
                  dataTypes: t
                },
                r
              ) : this.request(
                'Pamplona.getReachThisData',
                {
                  ugcIds: e,
                  dataTypes: t,
                  personaId: n
                },
                r
              )
            },
            getOverviewReachThisLeaderboard: function (e, t, n) {
              var r = this;
              if (_.getIsLoggedIn()) {
                var a = this.request(
                  'PamplonaAuthenticated.getOverviewReachThisLeaderboard',
                  {
                    ugcId: e,
                    radius: t
                  },
                  n
                );
                return a.then(
                  function (e) {
                    var t = [];
                    if (e.globalLeader) {
                      var a = g.getLocation(e.globalLeader.personaId);
                      null === a &&
                      t.push(e.globalLeader.personaId)
                    }
                    if (e.leaderboard && e.leaderboard.users) {
                      var i = e.leaderboard.users;
                      i.forEach(
                        function (e) {
                          var n = g.getLocation(e.personaId);
                          null === n &&
                          t.push(e.personaId)
                        }
                      )
                    }
                    t.forEach(function (e) {
                      r.getPlayerInfo(e, n)
                    })
                  }
                ),
                a
              }
              console.error(
                'Missing valid session for GatewayActions.getOverviewReachThisLeaderboard'
              )
            },
            getReachThisLeaderboard: function (e, t, n, r) {
              var a,
              i = this;
              return _.getIsLoggedIn() ? (
                a = this.request(
                  'PamplonaAuthenticated.getReachThisLeaderboard',
                  {
                    ugcId: e,
                    offset: t,
                    count: n
                  },
                  r
                ),
                a.then(
                  function (e) {
                    var t = [],
                    n = e.leaderboard.users;
                    n.forEach(
                      function (e) {
                        var n = g.getLocation(e.personaId);
                        null === n &&
                        t.push(e.personaId)
                      }
                    ),
                    t.forEach(function (e) {
                      i.getPlayerInfo(e, r)
                    })
                  }
                )
              ) : a = this.request(
                'Pamplona.getReachThisLeaderboard',
                {
                  ugcId: e,
                  offset: t,
                  count: n
                },
                r
              ),
              a
            },
            getReachThisFriendsLeaderboard: function (e) {
              var t = this;
              if (_.getIsLoggedIn()) {
                var n = this.request(
                  'PamplonaAuthenticated.getReachThisFriendsLeaderboard',
                  {
                    ugcId: e
                  }
                );
                return n.then(
                  function (e) {
                    var n = [],
                    r = e.leaderboard.users;
                    r.forEach(
                      function (e) {
                        var t = g.getLocation(e.personaId);
                        null === t &&
                        n.push(e.personaId)
                      }
                    ),
                    n.forEach(function (e) {
                      t.getPlayerInfo(e)
                    })
                  }
                ),
                n
              }
              console.error(
                'Cannot call getReachThisFriendsLeaderboard when not logged in'
              )
            },
            reportReachThis: function (e, t, n) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.reportReachThis',
                {
                  complaintType: e,
                  petitionDetail: t,
                  ugcId: n
                }
              ) : void console.error('Cannot call reportReachThis when not logged in')
            },
            addUGCBookmark: function (e, t) {
              return _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.addUGCBookmark', {
                ugcType: e,
                ugcId: t
              }) : void console.error('Cannot call addUGCBookmark when not logged in')
            },
            removeUGCBookmark: function (e, t) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.removeUGCBookmark',
                {
                  ugcType: e,
                  ugcId: t
                }
              ) : void console.error('Cannot call removeUGCBookmark when not logged in')
            },
            addChallengeBookmark: function (e, t) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.addChallengeBookmark',
                {
                  challengeType: e,
                  challengeId: t
                }
              ) : void console.error('Cannot call addChallengeBookmark when not logged in')
            },
            removeChallengeBookmark: function (e, t) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.removeChallengeBookmark',
                {
                  challengeType: e,
                  challengeId: t
                }
              ) : void console.error('Cannot call removeChallengeBookmark when not logged in')
            },
            followPlayer: function (e, t) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.followPlayer',
                {
                  toFollow: {
                    name: e,
                    personaId: t
                  }
                }
              ) : void console.error('Cannot call followPlayer when not logged in')
            },
            unfollowPlayer: function (e, t) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.unfollowPlayer',
                {
                  toUnfollow: {
                    name: e,
                    personaId: t
                  }
                }
              ) : void console.error('Cannot call unfollowPlayer when not logged in')
            },
            sendTelemetry: function (e) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.sendTelemetry',
                {
                  eventJson: (0, i['default']) (e)
                }
              ) : void console.error('Cannot call sendTelemetry when not logged in')
            },
            getBillboardData: function (e) {
              return _.getIsLoggedIn() ? this.request(
                'PamplonaAuthenticated.getHackableBillboardFriendsLeaderboard',
                {
                  challengeId: e
                }
              ) : void console.error('Cannot call billboardData when not logged in')
            },
            getInventory: function () {
              return _.getIsLoggedIn() ? this.request('PamplonaAuthenticated.getInventory') : void console.error('Cannot call getInventory when not logged in')
            },
            getLatestNewsArticles: function (e) {
              return this.request(
                'Pamplona.getLatestNewsArticles',
                {
                  language: d.getCMSLanguage(),
                  region: d.getCMSRegion(),
                  pageSize: 8,
                  page: e
                }
              )
            },
            getNewsArticle: function (e) {
              return this.request(
                'Pamplona.getNewsArticle',
                {
                  language: d.getCMSLanguage(),
                  region: d.getCMSRegion(),
                  friendlyId: e
                }
              )
            },
            getIntel: function (e) {
              return this.request(
                'Pamplona.getIntel',
                {
                  language: d.getCMSLanguage(),
                  region: d.getCMSRegion(),
                  friendlyId: e
                }
              )
            }
          };
          e.exports = T
        },
        function (e, t, n) {
          function r(e, t) {
            if (t = s(t, 3), c(e)) {
              var n = o(e, t);
              return n > - 1 ? e[n] : void 0
            }
            return i(e, t, a)
          }
          var a = n(278),
          i = n(1521),
          o = n(468),
          s = n(83),
          c = n(25);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            S[e] ||
            (S[e] = h(T), S[e].personaId = e),
            (0, f['default']) (S[e], t)
          }
          function i(e, t) {
            var n = m(S, function (t) {
              return S[e] ? t.name === S[e].name : void 0
            });
            n &&
            (0, f['default']) (n.stats, t)
          }
          function o() {
            C = (0, f['default']) ({
            }, S[p()].profileEmblem)
          }
          function s(e) {
            S[p()].profileEmblem = e
          }
          function c() {
            S[p()].profileEmblem = C
          }
          function l(e) {
            var t = {};
            if (e.bg && e.bg.tag) {
              var n = m(b.layers, function (e) {
                return 'bg' === e.name
              }),
              r = m(n.tags, function (t) {
                return t.hash === e.bg.tag
              }).name;
              t.bg = r
            }
            if (e.detail && e.detail.tag) {
              var a = m(b.layers, function (e) {
                return 'detail' === e.name
              }),
              i = m(a.tags, function (t) {
                return t.hash === e.detail.tag
              }).name;
              t.detail = i
            }
            if (e.frame && e.frame.tag) {
              var o = m(b.layers, function (e) {
                return 'frame' === e.name
              }),
              s = m(o.tags, function (t) {
                return t.hash === e.frame.tag
              }).name;
              t.frame = s
            }
            S[p()].profileEmblem = {
              bg: t.bg,
              frame: t.frame,
              detail: t.detail
            }
          }
          function u() {
            S = {}
          }
          function p() {
            return E.getCurrentPersonaId()
          }
          var d = n(3),
          f = r(d),
          m = n(16),
          h = n(1584),
          _ = n(12),
          g = n(10),
          v = n(14),
          E = n(4),
          I = n(6).ActionTypes,
          b = n(454),
          y = n(272),
          T = {
            personaId: null,
            name: null,
            location: [
              {
                cc: null,
                name: null,
                id: null
              }
            ],
            stats: {
              division: null,
              latestPlayed: null,
              runnersRoutePercentiles: null
            },
            profileEmblem: (0, f['default']) ({
            }, y),
            friends: null,
            transform: {
              x: - 3.70166,
              y: 48.0135,
              z: 322.284
            }
          },
          S = {},
          C = {},
          D = (0, f['default']) ({
          }, _, {
            getAllAccounts: function () {
              return S
            },
            getAccountDetails: function (e) {
              return e ||
              (e = p()),
              S[e] ? S[e] : (a(e, h(T)), S[e])
            },
            getPlayerName: function (e) {
              return e ||
              (e = p()),
              S[e] ? S[e].name : (a(e, h(T)), S[e].name)
            },
            getPlayerEmblem: function (e) {
              return e ||
              (e = p()),
              S[e] ? S[e].profileEmblem : (a(e, h(T)), S[e].profileEmblem)
            },
            getLatestPlayed: function (e) {
              return e ||
              (e = p()),
              S[e] &&
              null !== S[e].stats.latestPlayed ? S[e].stats.latestPlayed : []
            },
            getDivision: function (e) {
              return e ||
              (e = p()),
              S[e] &&
              null !== S[e].stats.division ? S[e].stats.division : []
            },
            getRunnersRoutePercentiles: function (e) {
              return e ||
              (e = p()),
              S[e] ? S[e].stats.runnersRoutePercentiles : null
            },
            getAllEmblems: function () {
              return b
            },
            getLocation: function (e) {
              return e ||
              (e = p()),
              S[e] ? S[e].location : null
            },
            getTransform: function (e) {
              return S[e].transform
            },
            getFriends: function (e) {
              return S[e].friends
            },
            setEmblem: function (e) {
              l(e),
              o()
            },
            reset: function () {
              u()
            }
          });
          D.dispatchToken = g.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case I.EMBLEM_SET:
                  o(),
                  D.emitChange();
                  break;
                case I.EMBLEM_EDIT:
                  s(t.temp),
                  D.emitChange();
                  break;
                case I.EMBLEM_RESET:
                  c(),
                  D.emitChange()
              }
            }
          ),
          D.gatewayDispatchToken = v.register(
            function (e) {
              var t,
              n,
              r,
              s,
              c,
              l,
              d,
              _,
              g = e.action;
              switch (g.type) {
                case 'BeatAuthentication.viaAuthCode':
                  v.waitFor([E.gatewayDispatchToken]),
                  u(),
                  t = p(),
                  t &&
                  (S[t] = h(T)),
                  D.emitChange();
                  break;
                case 'PamplonaAuthenticated.getInitialGameData':
                  t = p(),
                  g.data.playerInfo &&
                  g.data.userStats &&
                  (
                    n = {
                      personaId: t,
                      name: g.data.playerInfo.name,
                      location: g.data.playerInfo.location
                    },
                    a(t, n),
                    i(t, {
                      division: g.data.playerInfo.division
                    }),
                    D.emitChange()
                  );
                  break;
                case 'Pamplona.getPlayerInfo':
                  t = p(),
                  g.data.name &&
                  g.data.location &&
                  (
                    n = g.data.location.length > 0 ? {
                      personaId: t,
                      name: g.data.name,
                      location: g.data.location
                    }
                     : {
                      personaId: t,
                      name: g.data.name
                    },
                    a(g.params.personaId || t, n),
                    i(g.params.personaId || t, {
                      division: g.data.division
                    }),
                    D.emitChange()
                  );
                  break;
                case 'Pamplona.getPlayerRunnersRoutePercentiles':
                  t = p(),
                  i(g.params.personaId || t, {
                    runnersRoutePercentiles: g.data
                  }),
                  D.emitChange();
                  break;
                case 'Pamplona.getPlayerTag':
                case 'Pamplona.getPlayerTags':
                  t = p();
                  var I = Array.isArray(g.data) ? g.data : [
                    g.data
                  ];
                  I.forEach(
                    function (e) {
                      var n = (0, f['default']) ({
                      }, y);
                      e.tagData &&
                      (
                        e.tagData.bg &&
                        e.tagData.bg.tag &&
                        (
                          r = m(b.layers, function (e) {
                            return 'bg' === e.name
                          }),
                          s = m(r.tags, function (t) {
                            return t.hash === e.tagData.bg.tag
                          }) ||
                          {
                            name: y.bg
                          },
                          n.bg = s.name
                        ),
                        e.tagData.detail &&
                        e.tagData.detail.tag &&
                        (
                          c = m(b.layers, function (e) {
                            return 'detail' === e.name
                          }),
                          l = m(c.tags, function (t) {
                            return t.hash === e.tagData.detail.tag
                          }) ||
                          {
                            name: y.detail
                          },
                          n.detail = l.name
                        ),
                        e.tagData.frame &&
                        e.tagData.frame.tag &&
                        (
                          d = m(b.layers, function (e) {
                            return 'frame' === e.name
                          }),
                          _ = m(d.tags, function (t) {
                            return t.hash === e.tagData.frame.tag
                          }) ||
                          {
                            name: y.frame
                          },
                          n.frame = _.name
                        )
                      ),
                      a(e.personaId, {
                        profileEmblem: n
                      }),
                      e.personaId === t &&
                      o()
                    }
                  ),
                  D.emitChange();
                  break;
                case 'PamplonaAuthenticated.getPlayerLocation':
                case 'Pamplona.getPlayerLocation':
                  t = p(),
                  Array.isArray(g.data) &&
                  (a(g.params.personaId || t, {
                    location: g.data
                  }), D.emitChange());
                  break;
                case 'PamplonaAuthenticated.getFriends':
                case 'Pamplona.getFriends':
                  t = p(),
                  Array.isArray(g.data) &&
                  (
                    g.data.forEach(
                      function (e) {
                        S[e.personaId] ||
                        (S[e.personaId] = (0, f['default']) (h(T), e))
                      }
                    ),
                    a(g.params.personaId || t, {
                      friends: g.data
                    }),
                    D.emitChange()
                  );
                  break;
                case 'Pamplona.getLatestPlayed':
                case 'PamplonaAuthenticated.getLatestPlayed':
                  t = p();
                  var C = g.data.map(
                    function (e) {
                      var t = {};
                      return e.typeId ? (t.id = e.ugcId, t.type = e.typeId) : (t.id = {
                        id: e.id
                      }, t.type = e.challengeType),
                      'ReachThis' === e.typeId ? t.time = e.stats.reachedAt : 'HackableBillboard' === e.challengeType ? t.time = e.stats.finishedAt : t.time = e.stats.finishTime,
                      t
                    }
                  );
                  i(g.params.personaId || t, {
                    latestPlayed: C
                  }),
                  D.emitChange();
                  break;
                case 'BeatAuthentication.logout':
                  v.waitFor([E.gatewayDispatchToken]),
                  u(),
                  D.emitChange()
              }
            }
          ),
          e.exports = D
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              function a(e, t) {
                p[e] = t
              }
              function i() {
                p = {}
              }
              var o = n(3),
              s = r(o),
              c = n(12),
              l = n(14),
              u = n(4),
              p = {},
              d = (0, s['default']) ({
              }, c, {
                getStatsForPersona: function (e) {
                  return p[e] ||
                  null
                },
                getSummary: function (e) {
                  var t = p[e];
                  if (!t) return null;
                  var n = {
                    story: {
                      main: (t.pg_GoldCompleted_NumberOfFlagsSet || 0) / 37 * 100,
                      sub: (t.pg_SilverCompleted_NumberOfFlagsSet || 0) / 20 * 100
                    },
                    world: {
                      main: (
                        (t.pg_SecurityHubsCompleted_NumberOfFlagsSet || 0) + (t.pg_GridNodes_NumberOfFlagsSet || 0) + (t.pg_MiscCompleted_NumberOfFlagsSet || 0) + (t.pg_HackableBillboards_NumberOfFlagsSet || 0)
                      ) / 64 * 100,
                      sub: (
                        (t.pg_AnchorGridLeaks_NumberOfFlagsSet || 0) + (t.pg_ConstructionGridLeaks_NumberOfFlagsSet || 0) + (t.pg_DowntownGridLeaks_NumberOfFlagsSet || 0) + (t.pg_TheViewGridLeaks_NumberOfFlagsSet || 0) + (t.pg_TheShardGridLeaks_NumberOfFlagsSet || 0) + (t.pg_TrainstationGridLeaks_NumberOfFlagsSet || 0) + (t.pg_AudioPickupDtCy_NumberOfFlagsSet || 0) + (t.pg_AudioPickupDtTd_NumberOfFlagsSet || 0) + (t.pg_AudioPickupDtCp_NumberOfFlagsSet || 0) + (t.pg_AudioPickupDtCh_NumberOfFlagsSet || 0) + (t.pg_AudioPickupTheShard_NumberOfFlagsSet || 0) + (t.pg_AudioPickupTrainstation_NumberOfFlagsSet || 0) + (t.pg_AudioPickupAcSh_NumberOfFlagsSet || 0) + (t.pg_AudioPickupAcCv_NumberOfFlagsSet || 0) + (t.pg_AudioPickupAcEv_NumberOfFlagsSet || 0) + (t.pg_AudioPickupVwOp_NumberOfFlagsSet || 0) + (t.pg_AudioPickupVwRb_NumberOfFlagsSet || 0) + (t.pg_AudioPickupRzRdz_NumberOfFlagsSet || 0) + (t.pg_AudioPickupRzOt_NumberOfFlagsSet || 0) + (t.pg_AudioPickupGridLeaks_NumberOfFlagsSet || 0) + (t.pg_IntelTrainstation_NumberOfFlagsSet || 0) + (t.pg_IntelDtTd_NumberOfFlagsSet || 0) + (t.pg_IntelDtCy_NumberOfFlagsSet || 0) + (t.pg_IntelDtCp_NumberOfFlagsSet || 0) + (t.pg_IntelDtCh_NumberOfFlagsSet || 0) + (t.pg_IntelAcSh_NumberOfFlagsSet || 0) + (t.pg_IntelAcCv_NumberOfFlagsSet || 0) + (t.pg_IntelAcEv_NumberOfFlagsSet || 0) + (t.pg_IntelVwOp_NumberOfFlagsSet || 0) + (t.pg_IntelVwRb_NumberOfFlagsSet || 0) + (t.pg_IntelRzRdz_NumberOfFlagsSet || 0) + (t.pg_IntelRzOt_NumberOfFlagsSet || 0) + (t.pg_IntelTheShard_NumberOfFlagsSet || 0) + (t.pg_SecretBagDtCy_NumberOfFlagsSet || 0) + (t.pg_SecretBagDtTd_NumberOfFlagsSet || 0) + (t.pg_SecretBagDtCp_NumberOfFlagsSet || 0) + (t.pg_SecretBagDtCh_NumberOfFlagsSet || 0) + (t.pg_SecretBagTheShard_NumberOfFlagsSet || 0) + (t.pg_SecretBagTrainstation_NumberOfFlagsSet || 0) + (t.pg_SecretBagAcSh_NumberOfFlagsSet || 0) + (t.pg_SecretBagAcCv_NumberOfFlagsSet || 0) + (t.pg_SecretBagAcEv_NumberOfFlagsSet || 0) + (t.pg_SecretBagVwOp_NumberOfFlagsSet || 0) + (t.pg_SecretBagVwRb_NumberOfFlagsSet || 0) + (t.pg_SecretBagRzRdz_NumberOfFlagsSet || 0) + (t.pg_SecretBagRzOt_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsTrainstation_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsDtTd_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsDtCy_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsDtCp_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsDtCh_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsAcSh_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsAcCv_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsAcEv_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsVwOp_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsVwRb_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsRzRdz_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsRzOt_NumberOfFlagsSet || 0) + (t.pg_ElectronicPartsTheShard_NumberOfFlagsSet || 0)
                      ) / 702 * 100
                    }
                  };
                  return n.story.total = Math.ceil(0.7 * n.story.main + 0.3 * n.story.sub),
                  n.world.total = Math.floor(0.8 * n.world.main + 0.2 * n.world.sub),
                  n
                },
                getProgression: function (e) {
                  var n = p[e];
                  if (!n) return null;
                  var r = {
                    story: {
                      sideMissions: 0
                    },
                    objectives: [],
                    collectibles: []
                  };
                  return r.story.sideMissions = Math.round((n.pg_SilverCompleted_NumberOfFlagsSet || 0) / 20 * 100),
                  r.objectives.push({
                    name: t('ID_WEB_STATS_SECURITYHUBS'),
                    current: n.pg_SecurityHubsCompleted_NumberOfFlagsSet ||
                    0,
                    max: 8,
                    delinear: []
                  }),
                  r.objectives.push({
                    name: t('ID_WEB_STATS_GRIDNODES'),
                    current: n.pg_GridNodes_NumberOfFlagsSet ||
                    0,
                    max: 4
                  }),
                  r.objectives.push({
                    name: t('ID_WEB_STATS_OPPORTUNITYMISSIONS'),
                    current: n.pg_MiscCompleted_NumberOfFlagsSet ||
                    0,
                    max: 40,
                    delinear: [
                      5,
                      20
                    ]
                  }),
                  r.objectives.push({
                    name: t('ID_WEB_STATS_BILLBOARDHACKS'),
                    current: n.pg_HackableBillboards_NumberOfFlagsSet ||
                    0,
                    max: 12,
                    delinear: [
                      3
                    ]
                  }),
                  r.collectibles.push({
                    name: t('ID_WEB_STATS_GRIDLEAKS'),
                    current: (n.pg_AnchorGridLeaks_NumberOfFlagsSet || 0) + (n.pg_ConstructionGridLeaks_NumberOfFlagsSet || 0) + (n.pg_DowntownGridLeaks_NumberOfFlagsSet || 0) + (n.pg_TheViewGridLeaks_NumberOfFlagsSet || 0) + (n.pg_TheShardGridLeaks_NumberOfFlagsSet || 0) + (n.pg_TrainstationGridLeaks_NumberOfFlagsSet || 0),
                    max: 324,
                    delinear: [
                      20,
                      50,
                      90,
                      140,
                      200
                    ]
                  }),
                  r.collectibles.push({
                    name: t('ID_WEB_STATS_SURVEILLANCE'),
                    current: (n.pg_AudioPickupDtCy_NumberOfFlagsSet || 0) + (n.pg_AudioPickupDtTd_NumberOfFlagsSet || 0) + (n.pg_AudioPickupDtCp_NumberOfFlagsSet || 0) + (n.pg_AudioPickupDtCh_NumberOfFlagsSet || 0) + (n.pg_AudioPickupTheShard_NumberOfFlagsSet || 0) + (n.pg_AudioPickupTrainstation_NumberOfFlagsSet || 0) + (n.pg_AudioPickupAcSh_NumberOfFlagsSet || 0) + (n.pg_AudioPickupAcCv_NumberOfFlagsSet || 0) + (n.pg_AudioPickupAcEv_NumberOfFlagsSet || 0) + (n.pg_AudioPickupVwOp_NumberOfFlagsSet || 0) + (n.pg_AudioPickupVwRb_NumberOfFlagsSet || 0) + (n.pg_AudioPickupRzRdz_NumberOfFlagsSet || 0) + (n.pg_AudioPickupRzOt_NumberOfFlagsSet || 0) + (n.pg_AudioPickupGridLeaks_NumberOfFlagsSet || 0),
                    max: 45,
                    delinear: [
                      5,
                      15,
                      30
                    ]
                  }),
                  r.collectibles.push({
                    name: t('ID_WEB_STATS_DOCUMENTS'),
                    current: (n.pg_IntelTrainstation_NumberOfFlagsSet || 0) + (n.pg_IntelDtTd_NumberOfFlagsSet || 0) + (n.pg_IntelDtCy_NumberOfFlagsSet || 0) + (n.pg_IntelDtCp_NumberOfFlagsSet || 0) + (n.pg_IntelDtCh_NumberOfFlagsSet || 0) + (n.pg_IntelAcSh_NumberOfFlagsSet || 0) + (n.pg_IntelAcCv_NumberOfFlagsSet || 0) + (n.pg_IntelAcEv_NumberOfFlagsSet || 0) + (n.pg_IntelVwOp_NumberOfFlagsSet || 0) + (n.pg_IntelVwRb_NumberOfFlagsSet || 0) + (n.pg_IntelRzRdz_NumberOfFlagsSet || 0) + (n.pg_IntelRzOt_NumberOfFlagsSet || 0) + (n.pg_IntelTheShard_NumberOfFlagsSet || 0),
                    max: 42,
                    delinear: [
                      5,
                      15,
                      30
                    ]
                  }),
                  r.collectibles.push({
                    name: t('ID_WEB_STATS_SECRETBAGS'),
                    current: (n.pg_SecretBagDtCy_NumberOfFlagsSet || 0) + (n.pg_SecretBagDtTd_NumberOfFlagsSet || 0) + (n.pg_SecretBagDtCp_NumberOfFlagsSet || 0) + (n.pg_SecretBagDtCh_NumberOfFlagsSet || 0) + (n.pg_SecretBagTheShard_NumberOfFlagsSet || 0) + (n.pg_SecretBagTrainstation_NumberOfFlagsSet || 0) + (n.pg_SecretBagAcSh_NumberOfFlagsSet || 0) + (n.pg_SecretBagAcCv_NumberOfFlagsSet || 0) + (n.pg_SecretBagAcEv_NumberOfFlagsSet || 0) + (n.pg_SecretBagVwOp_NumberOfFlagsSet || 0) + (n.pg_SecretBagVwRb_NumberOfFlagsSet || 0) + (n.pg_SecretBagRzRdz_NumberOfFlagsSet || 0) + (n.pg_SecretBagRzOt_NumberOfFlagsSet || 0),
                    max: 40,
                    delinear: [
                      5,
                      15,
                      30
                    ]
                  }),
                  r.collectibles.push({
                    name: t('ID_WEB_STATS_ELECTRONICS'),
                    current: (n.pg_ElectronicPartsTrainstation_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsDtTd_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsDtCy_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsDtCp_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsDtCh_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsAcSh_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsAcCv_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsAcEv_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsVwOp_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsVwRb_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsRzRdz_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsRzOt_NumberOfFlagsSet || 0) + (n.pg_ElectronicPartsTheShard_NumberOfFlagsSet || 0),
                    max: 251,
                    delinear: [
                      20,
                      60,
                      120
                    ]
                  }),
                  r
                }
              });
              d.setMaxListeners(20),
              d.gatewayDispatchToken = l.register(
                function (e) {
                  var t = e.action;
                  switch (t.type) {
                    case 'PamplonaAuthenticated.getInitialGameData':
                      a(u.getCurrentPersona().personaId, t.data.userStats),
                      d.emitChange();
                      break;
                    case 'PamplonaAuthenticated.getPersonaStats':
                    case 'Pamplona.getPersonaStats':
                      a(t.params.personaId || u.getCurrentPersonaId(), t.data),
                      d.emitChange();
                      break;
                    case 'BeatAuthentication.viaAuthCode':
                    case 'BeatAuthentication.logout':
                      i(),
                      d.emitChange()
                  }
                }
              ),
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          var r,
          a; /*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
          !function () {
            'use strict';
            function n() {
              for (var e = [], t = 0; t < arguments.length; t++) {
                var r = arguments[t];
                if (r) {
                  var a = typeof r;
                  if ('string' === a || 'number' === a) e.push(r);
                   else if (Array.isArray(r)) e.push(n.apply(null, r));
                   else if ('object' === a) for (var o in r) i.call(r, o) &&
                  r[o] &&
                  e.push(o)
                }
              }
              return e.join(' ')
            }
            var i = {}.hasOwnProperty;
            'undefined' != typeof e &&
            e.exports ? e.exports = n : (
              r = [],
              a = function () {
                return n
              }.apply(t, r),
              !(void 0 !== a && (e.exports = a))
            )
          }()
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(346),
          i = r(a),
          o = n(2),
          s = n(31),
          c = n(32),
          l = o.createClass({
            displayName: 'Link',
            propTypes: {
              href: o.PropTypes.string,
              to: o.PropTypes.string,
              params: o.PropTypes.object,
              query: o.PropTypes.object,
              stack: o.PropTypes.bool,
              disableBack: o.PropTypes.bool
            },
            contextTypes: {
              depth: o.PropTypes.number
            },
            getDefaultProps: function () {
              return {
                href: null,
                to: null,
                params: null,
                query: null,
                stack: !1,
                disableBack: !1
              }
            },
            onClick: function (e) {
              if (this.props.href) {
                if (window.cordova) {
                  if (window.cordova.InAppBrowser) {
                    var t = - 1 !== this.props.href.indexOf('youtube.com') ||
                    'windows' === window.cordova.platformId ? '_system' : '_blank';
                    window.cordova.InAppBrowser.open(
                      this.props.href,
                      t,
                      'location=no,toolbarposition=top,zoom=no,fullscreen=yes'
                    )
                  }
                  e.preventDefault()
                }
              } else e.preventDefault(),
              c.click('l', this.props.to),
              this.props.stack ? s.navigateStacked(
                this.context.depth + 1,
                this.props.to,
                this.props.params,
                this.props.query
              ) : s.navigate(
                this.props.to,
                this.props.params,
                this.props.query,
                this.props.disableBack
              )
            },
            render: function () {
              return o.createElement(
                'a',
                (0, i['default']) ({
                  onClick: this.onClick
                }, this.props, {
                  href: this.props.href ||
                  '#'
                }),
                this.props.children
              )
            }
          });
          e.exports = l
        },
        function (e, t) {
          function n(e) {
            return !!e &&
            'object' == typeof e
          }
          function r(e, t) {
            var n = null == e ? void 0 : e[t];
            return s(n) ? n : void 0
          }
          function a(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            g >= e
          }
          function i(e) {
            return o(e) &&
            m.call(e) == l
          }
          function o(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function s(e) {
            return null == e ? !1 : i(e) ? h.test(d.call(e)) : n(e) &&
            u.test(e)
          }
          var c = '[object Array]',
          l = '[object Function]',
          u = /^\[object .+?Constructor\]$/,
          p = Object.prototype,
          d = Function.prototype.toString,
          f = p.hasOwnProperty,
          m = p.toString,
          h = RegExp(
            '^' + d.call(f).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(
              /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
              '$1.*?'
            ) + '$'
          ),
          _ = r(Array, 'isArray'),
          g = 9007199254740991,
          v = _ ||
          function (e) {
            return n(e) &&
            a(e.length) &&
            m.call(e) == c
          };
          e.exports = v
        },
        function (e, t, n) {
          'use strict';
          var r = n(31),
          a = n(32),
          i = function (e) {
            this.data = e
          };
          i.statics = {
            store: null,
            getAll: function () {
              return this.store.getAll()
            },
            addChangeListener: function (e) {
              return this.store ? this.store.addChangeListener(e) : void 0
            },
            removeChangeListener: function (e) {
              return this.store ? this.store.removeChangeListener(e) : void 0
            },
            getUniqueId: function () {
            }
          },
          i.prototype = {
            typeId: null,
            legendKey: null,
            legendCategory: null,
            iconImage: null,
            iconFocusedImage: null,
            iconSize: {
              x: 34,
              y: 34
            },
            tooltipSize: {
              x: 844,
              y: 442
            },
            zoomRange: [
              0,
              1
            ],
            getIconImage: function () {
            },
            getIconFocusedImage: function () {
            },
            getTooltip: function () {
            },
            getRoute: function () {
            },
            onClick: function () {
              var e = this.getRoute();
              a.click('b', e[0]),
              r.navigate.apply(r, this.getRoute())
            }
          },
          e.exports = i
        },
        function (e, t) {
          'use strict';
          var n = !(
            'undefined' == typeof window ||
            !window.document ||
            !window.document.createElement
          ),
          r = {
            canUseDOM: n,
            canUseWorkers: 'undefined' != typeof Worker,
            canUseEventListeners: n &&
            !(!window.addEventListener && !window.attachEvent),
            canUseViewport: n &&
            !!window.screen,
            isInWorker: !n
          };
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a,
          i,
          o = n(3),
          s = r(o),
          c = n(93),
          l = r(c),
          u = n(530),
          p = n(1716),
          d = n(16),
          f = n(67),
          m = n(284),
          h = n(2),
          _ = n(1605),
          g = n(12),
          v = n(1692).routeMatcher,
          E = n(321),
          I = n(319),
          b = n(136),
          y = n(32),
          T = n(60),
          S = n(6).ActionTypes,
          C = n(4),
          D = n(78),
          A = {
            platform: function (e) {
              return - 1 !== ['pc',
              'ps',
              'xb'].indexOf(e)
            }
          },
          O = [
            {
              path: '/',
              name: 'home',
              handler: n(700)
            },
            {
              path: '/news',
              name: 'news',
              handler: n(705)
            },
            {
              path: '/news/:friendlyId',
              name: 'news-article',
              handler: n(704)
            },
            {
              path: '/about',
              name: 'about',
              handler: n(696)
            },
            {
              path: '/legal',
              name: 'legal',
              handler: n(702)
            },
            {
              path: '/legal/opensource',
              name: 'opensource',
              handler: n(706)
            }
          ],
          N = [
            {
              path: '/map',
              name: 'map',
              handler: n(721)
            },
            {
              path: '/map/legend',
              name: 'legend',
              handler: n(720)
            },
            {
              path: '/map/safehouse/:id',
              name: 'safehouse',
              handler: n(716)
            },
            {
              path: '/map/billboardhack/:id',
              name: 'HackableBillboard',
              handler: n(708)
            },
            {
              path: '/map/securityhub/:id',
              name: 'securityhub',
              handler: n(717)
            },
            {
              path: '/map/deliverymission/:id',
              name: 'deliverymission',
              handler: n(709)
            },
            {
              path: '/map/diversionmission/:id',
              name: 'diversionmission',
              handler: n(710)
            },
            {
              path: '/map/gridnode/:id',
              name: 'gridnode',
              handler: n(711)
            },
            {
              path: '/profile/:platform/:id',
              validators: {
                platform: A.platform
              },
              name: 'profile',
              handler: n(728)
            },
            {
              path: '/profile/:platform/:id/story',
              validators: {
                platform: A.platform
              },
              name: 'story',
              handler: n(729)
            },
            {
              path: '/profile/:platform/:id/world',
              validators: {
                platform: A.platform
              },
              name: 'world',
              handler: n(731)
            },
            {
              path: '/profile/:platform/:id/division',
              validators: {
                platform: A.platform
              },
              name: 'division',
              handler: n(724)
            },
            {
              path: '/profile/:platform/:id/ugc',
              validators: {
                platform: A.platform
              },
              name: 'ugc',
              handler: n(730)
            },
            {
              path: '/profile/:platform/:id/challenges',
              validators: {
                platform: A.platform
              },
              name: 'challenges',
              handler: n(723)
            },
            {
              path: '/dash/:platform/:id',
              validators: {
                platform: A.platform
              },
              name: 'RunnersRoute',
              handler: n(715)
            },
            {
              path: '/dash/:platform/:id/leaderboard',
              validators: {
                platform: A.platform
              },
              name: 'RunnersRoute-leaderboard',
              handler: n(714)
            },
            {
              path: '/timetrial/:platform/:userId/:id',
              validators: {
                platform: A.platform
              },
              name: 'TimeTrial',
              handler: n(719)
            },
            {
              path: '/timetrial/:platform/:userId/:id/leaderboard',
              validators: {
                platform: A.platform
              },
              name: 'TimeTrial-leaderboard',
              handler: n(718)
            },
            {
              path: '/beatle/:platform/:userId/:id',
              validators: {
                platform: A.platform
              },
              name: 'ReachThis',
              handler: n(713)
            },
            {
              path: '/beatle/:platform/:userId/:id/leaderboard',
              validators: {
                platform: A.platform
              },
              name: 'ReachThis-leaderboard',
              handler: n(712)
            },
            {
              path: '/map/intel/:id',
              name: 'intel',
              handler: n(701)
            },
            {
              path: '/error',
              name: 'error',
              handler: n(699)
            }
          ],
          w = [
            {
              from: '/profile/:id',
              to: function (e) {
                return '/profile/' + (C.getCurrentPlatform() || 'pc') + '/' + e.id
              }
            },
            {
              from: '/dash/:id',
              to: function (e) {
                return '/dash/' + (C.getCurrentPlatform() || 'pc') + '/' + e.id
              }
            },
            {
              from: '/timetrial/:userId/:id',
              to: function (e) {
                return '/timetrial/' + (C.getCurrentPlatform() || 'pc') + '/' + e.userId + '/' + e.id
              }
            },
            {
              from: '/reachthis/:userId/:id',
              to: function (e) {
                return '/beatle/' + (C.getCurrentPlatform() || 'pc') + '/' + e.userId + '/' + e.id
              }
            }
          ],
          x = O[0],
          R = N[0],
          L = N[0],
          P = d(N, function (e) {
            return 'error' === e.name
          }),
          M = d(N, function (e) {
            return 'map' === e.name
          }),
          k = [],
          B = [],
          V = !1,
          F = !1,
          W = null,
          U = null,
          j = function Z(e) {
            var t;
            for (t in k) {
              var n = k[t];
              n._matcher ||
              (n._matcher = v(n.path, n.validators));
              var r = n._matcher.parse(e);
              if (null !== r) return {
                route: n,
                params: r
              }
            }
            for (t in w) {
              var a = w[t];
              a._matcher ||
              (a._matcher = v(a.from));
              var i = a._matcher.parse(e);
              if (null !== i) {
                var o = a.to(i);
                return window.history.replaceState({
                  stack: B
                }, '', (V ? '' : '#') + o),
                Z(o)
              }
            }
          },
          G = function () {
            var e;
            return e = V ? window.location.href : window.location.hash.substring(1) ||
            '/',
            W ? e.replace(W, '') : e
          },
          H = function (e) {
            return d(k, {
              name: e
            })
          },
          z = function (e, t, n) {
            var r = H(e);
            if (!r) return null;
            r._matcher ||
            (r._matcher = v(r.path)),
            - 1 === r.path.indexOf(':platform') ||
            t.platform ||
            (t.platform = C.getCurrentPlatform());
            var a = r._matcher.stringify(t);
            return n &&
            (0, l['default']) (n).length > 0 &&
            (a += '?' + p.stringify(n)),
            a
          },
          Q = function (e, t, n, r, a, i) {
            var o = H(e);
            if (!o) return void console.error('Router _navigateTo 404');
            var s = {
              name: e,
              params: t ||
              {
              },
              query: n ||
              {
              },
              disableBack: !!i
            };
            if (!f(s, B[B.length - 1])) {
              var c = z(e, t, n);
              B = r ? _(B, {
                $splice: [
                  [a,
                  B.length - a,
                  s]
                ]
              }) : [
                s
              ],
              window.history.pushState({
                stack: B
              }, '', (V ? '' : '#') + (W || '') + c),
              I('send', 'pageview', {
                page: c
              }),
              y.pageView(e)
            }
          },
          Y = function (e) {
            W &&
            (e = e.replace(W, ''));
            var t = u.parse(e),
            n = j(t.pathname);
            n ||
            (
              F ||
              console.error('router popstate 404'),
              n = {
                route: i,
                params: {
                }
              }
            );
            var r = p.parse(t.query);
            B = [
              {
                name: n.route.name,
                params: n.params,
                query: r
              }
            ],
            I('send', 'pageview', {
              page: e
            }),
            y.pageView(name)
          },
          q = function (e) {
            e = e ||
            a,
            e._matcher ||
            (e._matcher = v(e.path));
            var t = {},
            n = e._matcher.stringify(t),
            r = {
              name: e.name,
              params: {
              },
              query: {
              }
            };
            B = [
              r
            ],
            F ||
            window.history.pushState({
              stack: B
            }, '', (V ? '' : '#') + n)
          },
          J = function (e) {
            if (void 0 === e || 1 === B.length) return void q(L);
            B.splice(e, 1),
            B.splice(0, e - 1);
            var t = B[B.length - 1],
            n = z(t.name, t.params, t.query);
            F ||
            window.history.pushState({
              stack: B
            }, '', (V ? '' : '#') + n)
          },
          K = (0, s['default']) ({
          }, g, {
            getCurrentState: function () {
              return B.length ? B[B.length - 1] : null
            },
            getCurrentPath: function () {
              return G()
            },
            getRoutePrefix: function () {
              return W
            },
            getStack: function () {
              return B
            },
            isActive: function (e, t) {
              var n = this.getCurrentState();
              if (!n) return !1;
              if (n.name !== e) return !1;
              var r = !0;
              return t &&
              m(t, function (e, t) {
                n.params[t] !== e &&
                (r = !1)
              }),
              r
            },
            getRequireLogin: function () {
              return B.some(function (e) {
                return H(e.name).requireLogin
              })
            },
            getIsEmbedded: function () {
              return F
            },
            createPath: function (e, t, n) {
              var r = z(e, t, n);
              return r ? (V ? '' : '#') + (W || '') + r : null
            }
          });
          K.setMaxListeners(20),
          K.dispatchToken = E.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case S.ROUTER_NAVIGATE:
                  U &&
                  D.get('sounds') &&
                  U.play({
                    playAudioWhenScreenIsLocked: !1,
                    interruptOtherAudio: !1
                  }),
                  Q(t.name, t.params, t.query, t.stacked, t.depth, t.disableBack),
                  K.emitChange();
                  break;
                case S.ROUTER_NAVIGATE_PATH:
                  Y(t.path),
                  K.emitChange();
                  break;
                case S.ROUTER_REPLACE:
                  console.error('Route replace not implemented');
                  break;
                case S.ROUTER_BACK:
                  window.history.back();
                  break;
                case S.ROUTER_RESET:
                  q(),
                  K.emitChange();
                  break;
                case S.ROUTER_CLOSE:
                  J(t.depth),
                  K.emitChange();
                  break;
                case 'BeatAuthentication.logout':
                  Q('home'),
                  K.emitChange()
              }
            }
          );
          var X = function (e, t) {
            if (void 0 !== e && (V = e), void 0 !== t && (F = t), F) {
              var n = T.getCountry();
              n.id !== b.defaultCountry &&
              (W = '/' + (n.pulseLanguage || n.language)),
              k = N.slice(),
              k.forEach(
                function (e) {
                  - 1 === e.path.indexOf('/map') &&
                  (e.path = '/map' + e.path)
                }
              )
            } else k = O.concat(N);
            F ? (a = R, i = M) : (a = x, i = P),
            a._matcher ||
            (a._matcher = v(a.path)),
            i._matcher ||
            (i._matcher = v(i.path));
            var r = G(),
            o = u.parse(r);
            if (
              I('send', 'pageview', {
                page: o.path
              }),
              window.cordova &&
              window.resolveLocalFileSystemURL &&
              window.cordova.file &&
              window.Media
            ) {
              var s = window.cordova.file.applicationDirectory + 'www/ME_UI_up.mp3';
              'iOS' === window.device.platform ? window.resolveLocalFileSystemURL(s, function (e) {
                U = new window.Media(e.toInternalURL())
              }) : U = new window.Media(s)
            }
            if (window.history.state && window.history.state.stack) B = window.history.state.stack;
             else {
              var c = j(o.pathname);
              c ||
              (
                F ? c = {
                  route: a,
                  params: {
                  }
                }
                 : (console.error('router init 404'), c = {
                  route: i,
                  params: {
                  }
                })
              );
              var l = p.parse(o.query);
              B = [
                {
                  name: c.route.name,
                  params: c.params,
                  query: l
                }
              ]
            }
            y.pageView(B[B.length - 1].name),
            window.addEventListener(
              'popstate',
              function (e) {
                var t = G(),
                n = u.parse(t);
                if (I('send', 'pageview', {
                  page: n.path
                }), e.state && e.state.stack) B = e.state.stack,
                K.emitChange();
                 else {
                  var r = j(n.pathname);
                  r ||
                  (
                    F ||
                    console.error('router popstate 404'),
                    r = {
                      route: i,
                      params: {
                      }
                    }
                  );
                  var a = p.parse(n.query);
                  B = [
                    {
                      name: r.route.name,
                      params: r.params,
                      query: a
                    }
                  ],
                  K.emitChange()
                }
                y.pageView(B[B.length - 1].name)
              }
            )
          },
          $ = h.createClass({
            displayName: 'RouteContainerView',
            childContextTypes: {
              depth: h.PropTypes.number.isRequired,
              count: h.PropTypes.number.isRequired,
              currentState: h.PropTypes.object,
              routeState: h.PropTypes.object.isRequired,
              router: h.PropTypes.func.isRequired
            },
            componentWillMount: function () {
              var e = this;
              this._router = function () {
              },
              this._router.getCurrentParams = function () {
                return e.props.routeState.params ||
                {
                }
              },
              this._router.getCurrentQuery = function () {
                return {
                }
              },
              this._router.isActive = function (t) {
                return e.props.routeState.name === t
              }
            },
            getChildContext: function () {
              return {
                depth: this.props.depth,
                count: this.props.count,
                currentState: this.props.currentState,
                routeState: this.props.routeState,
                router: this._router
              }
            },
            render: function () {
              var e = H(this.props.routeState.name);
              return h.createElement(e.handler)
            }
          });
          e.exports = {
            RouterStore: K,
            RouteContainerView: $,
            init: X
          }
        },
        function (e, t) {
          var n = Array.isArray;
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          var r,
          a = n(1597);
          r = 'production',
          e.exports = a({
          }, n(1470), n(1725) ('./config.' + r + '.json'))
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(91).EventEmitter,
          s = n(328),
          c = function (e) {
            var t = this;
            return this.canvas = document.createElement('canvas'),
            this.style = (0, i['default']) ({
              bgColor: 'rgba(255, 255, 255, 0.8)',
              fgColor: '#ce0808',
              borderColor: 'rgba(0, 0, 0, 0.6)'
            }, e.style),
            this.title = void 0 !== e.title ? e.title : null,
            this.titleStyle = (0, i['default']) ({
              color: '#000',
              font: '20px "EuropeExt-Regular"'
            }, e.titleStyle),
            this.content = void 0 !== e.content ? e.content : null,
            this.contentStyle = (0, i['default']) ({
              color: '#000',
              font: '16px "Lato-Regular"',
              boldFont: 'bold 16px "Lato-Regular"'
            }, e.contentStyle),
            null !== this.content &&
            (Array.isArray(this.content) || (this.content = [
              this.content
            ])),
            s(['EuropeExt-Regular',
            'Lato-Regular']).then(function () {
              return t.draw()
            }),
            this
          };
          c.prototype.draw = function () {
            var e = this.canvas.getContext('2d'),
            t = 300,
            n = 500,
            r = 30,
            a = null !== this.title ? this.title.toUpperCase() : null;
            a.length > r &&
            (a = a.substr(0, r - 3), a = a.substr(0, a.lastIndexOf(' ')) + '...'),
            e.font = this.titleStyle.font;
            var i = null !== a ? e.measureText(a).width : 0,
            o = 13,
            s = {
              top: 20,
              right: 24,
              bottom: 16,
              left: 24
            },
            c = 40,
            l = 4,
            u = null;
            this.content &&
            (
              u = [],
              this.content.forEach(
                function (e, t) {
                  e.length > c * l &&
                  (e = e.substr(0, c * l - 3), e = e.substr(0, e.lastIndexOf(' ')) + '...');
                  for (var n = e.split(' '), r = 0; c * l >= r; r += c) {
                    var a = '';
                    if (n.length > 0) {
                      do a += n[0] + ' ',
                      n.splice(0, 1);
                      while (n[0] && a.length < c);
                      u.push(a)
                    }
                  }
                }
              )
            );
            var p = 15,
            d = 0,
            f = 0,
            m = {
              top: 0,
              right: 0,
              bottom: 5,
              left: 0
            };
            null !== u &&
            (
              e.font = this.contentStyle.font,
              u.forEach(function (t) {
                f = Math.max(f, e.measureText(t).width),
                d += p
              }),
              d += 10,
              m = {
                top: 0,
                right: 24,
                bottom: 10,
                left: 24
              }
            );
            var h = 40,
            _ = Math.max(i + s.left + s.right, f + m.left + m.right),
            g = s.top + o + s.bottom + m.top + d + m.bottom,
            v = Math.min(Math.max(_, t), n),
            E = 32 + h + g + 1;
            this.canvas.width = v,
            this.canvas.height = E;
            var I = {
              x: v / 2,
              y: 32
            },
            b = 10;
            e.fillStyle = this.style.fgColor,
            e.beginPath(),
            e.moveTo(I.x - 20 + b, I.y - 20),
            e.lineTo(I.x + 20, I.y - 20),
            e.lineTo(I.x + 20, I.y + 20 - b),
            e.arcTo(I.x + 20, I.y + 20, I.x + 20 - b, I.y + 20, b),
            e.lineTo(I.x - 20, I.y + 20),
            e.lineTo(I.x - 20, I.y - 20 + b),
            e.arcTo(I.x - 20, I.y - 20, I.x - 20 + b, I.y - 20, b),
            e.fill(),
            e.fillStyle = this.style.borderColor,
            e.beginPath(),
            e.moveTo(I.x - 8, I.y + h),
            e.lineTo(I.x, I.y + h - 8),
            e.lineTo(I.x + 8, I.y + h),
            e.fill();
            var y = 10,
            T = {
              x: I.x - v / 2,
              y: I.y + h
            };
            e.fillStyle = this.style.bgColor,
            e.beginPath(),
            e.moveTo(T.x, T.y + y),
            e.arcTo(T.x, T.y, T.x + y, T.y, y),
            e.lineTo(T.x + v - y, T.y),
            e.arcTo(T.x + v, T.y, T.x + v, T.y + y, y),
            e.lineTo(T.x + v, T.y + s.top + o + s.bottom),
            e.lineTo(T.x, T.y + s.top + o + s.bottom),
            e.closePath(),
            e.fill(),
            null !== a &&
            (
              e.font = this.titleStyle.font,
              e.fillStyle = this.titleStyle.color,
              e.textAlign = 'center',
              e.fillText(a, I.x, T.y + s.top + o)
            );
            var S = {
              x: I.x - v / 2,
              y: I.y + h + s.top + o + s.bottom
            };
            e.fillStyle = this.style.bgColor,
            e.beginPath(),
            e.moveTo(S.x, S.y),
            e.lineTo(S.x + v, S.y),
            e.lineTo(S.x + v, S.y + m.top + d + m.bottom - y),
            e.arcTo(S.x + v, S.y + m.top + d + m.bottom, S.x + v - y, S.y + m.top + d + m.bottom, y),
            e.lineTo(S.x + y, S.y + m.top + d + m.bottom),
            e.arcTo(S.x, S.y + m.top + d + m.bottom, S.x, S.y + m.top + d + m.bottom - y, y),
            e.closePath(),
            e.fill(),
            null !== u &&
            (
              e.font = this.contentStyle.font,
              e.fillStyle = this.contentStyle.color,
              e.textAlign = 'center',
              u.forEach(function (t, n) {
                e.fillText(t, I.x, S.y + m.top + p + n * p)
              })
            ),
            e.strokeStyle = this.style.borderColor,
            e.beginPath(),
            e.moveTo(T.x, T.y + y),
            e.arcTo(T.x, T.y, T.x + y, T.y, y),
            e.lineTo(T.x + v - y, T.y),
            e.arcTo(T.x + v, T.y, T.x + v, T.y + y, y),
            e.lineWidth = 1.5,
            e.stroke(),
            e.beginPath(),
            e.moveTo(T.x, T.y + g - y),
            e.arcTo(T.x, T.y + g, T.x + y, T.y + g, y),
            e.lineTo(T.x + v - y, T.y + g),
            e.arcTo(T.x + v, T.y + g, T.x + v, T.y + g - y, y),
            e.lineWidth = 1.5,
            e.stroke(),
            this.emit('change')
          },
          (0, i['default']) (c.prototype, o.prototype),
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            for (var n = Math.min(e.length, t.length), r = 0; n > r; r++) if (e.charAt(r) !== t.charAt(r)) return r;
            return e.length === t.length ? - 1 : n
          }
          function a(e) {
            return e ? e.nodeType === j ? e.documentElement : e.firstChild : null
          }
          function i(e) {
            var t = a(e);
            return t &&
            K.getID(t)
          }
          function o(e) {
            var t = s(e);
            if (t) if (W.hasOwnProperty(t)) {
              var n = W[t];
              n !== e &&
              (p(n, t) ? k(!1) : void 0, W[t] = e)
            } else W[t] = e;
            return t
          }
          function s(e) {
            return e &&
            e.getAttribute &&
            e.getAttribute(F) ||
            ''
          }
          function c(e, t) {
            var n = s(e);
            n !== t &&
            delete W[n],
            e.setAttribute(F, t),
            W[t] = e
          }
          function l(e) {
            return W.hasOwnProperty(e) &&
            p(W[e], e) ||
            (W[e] = K.findReactNodeByID(e)),
            W[e]
          }
          function u(e) {
            var t = D.get(e)._rootNodeID;
            return S.isNullComponentID(t) ? null : (
              W.hasOwnProperty(t) &&
              p(W[t], t) ||
              (W[t] = K.findReactNodeByID(t)),
              W[t]
            )
          }
          function p(e, t) {
            if (e) {
              s(e) !== t ? k(!1) : void 0;
              var n = K.findReactContainerForID(t);
              if (n && P(n, e)) return !0
            }
            return !1
          }
          function d(e) {
            delete W[e]
          }
          function f(e) {
            var t = W[e];
            return t &&
            p(t, e) ? void (q = t) : !1
          }
          function m(e) {
            q = null,
            C.traverseAncestors(e, f);
            var t = q;
            return q = null,
            t
          }
          function h(e, t, n, r, a, i) {
            y.useCreateElement &&
            (i = R({
            }, i), n.nodeType === j ? i[H] = n : i[H] = n.ownerDocument);
            var o = N.mountComponent(e, t, r, i);
            e._renderedComponent._topLevelWrapper = e,
            K._mountImageIntoNode(o, n, a, r)
          }
          function _(e, t, n, r, a) {
            var i = x.ReactReconcileTransaction.getPooled(r);
            i.perform(h, null, e, t, n, i, r, a),
            x.ReactReconcileTransaction.release(i)
          }
          function g(e, t) {
            for (
              N.unmountComponent(e),
              t.nodeType === j &&
              (t = t.documentElement);
              t.lastChild;
            ) t.removeChild(t.lastChild)
          }
          function v(e) {
            var t = i(e);
            return t ? t !== C.getReactRootIDFromNodeID(t) : !1
          }
          function E(e) {
            for (; e && e.parentNode !== e; e = e.parentNode) if (1 === e.nodeType) {
              var t = s(e);
              if (t) {
                var n,
                r = C.getReactRootIDFromNodeID(t),
                a = e;
                do if (n = s(a), a = a.parentNode, null == a) return null;
                while (n !== r);
                if (a === Q[r]) return e
              }
            }
            return null
          }
          var I = n(69),
          b = n(119),
          y = (n(49), n(499)),
          T = n(30),
          S = n(506),
          C = n(70),
          D = n(88),
          A = n(509),
          O = n(34),
          N = n(58),
          w = n(294),
          x = n(35),
          R = n(7),
          L = n(90),
          P = n(523),
          M = n(301),
          k = n(5),
          B = n(126),
          V = n(304),
          F = (n(306), n(9), I.ID_ATTRIBUTE_NAME),
          W = {},
          U = 1,
          j = 9,
          G = 11,
          H = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2),
          z = {},
          Q = {},
          Y = [],
          q = null,
          J = function () {
          };
          J.prototype.isReactComponent = {},
          J.prototype.render = function () {
            return this.props
          };
          var K = {
            TopLevelWrapper: J,
            _instancesByReactRootID: z,
            scrollMonitor: function (e, t) {
              t()
            },
            _updateRootComponent: function (e, t, n, r) {
              return K.scrollMonitor(
                n,
                function () {
                  w.enqueueElementInternal(e, t),
                  r &&
                  w.enqueueCallbackInternal(e, r)
                }
              ),
              e
            },
            _registerComponent: function (e, t) {
              !t ||
              t.nodeType !== U &&
              t.nodeType !== j &&
              t.nodeType !== G ? k(!1) : void 0,
              b.ensureScrollValueMonitoring();
              var n = K.registerContainer(t);
              return z[n] = e,
              n
            },
            _renderNewRootComponent: function (e, t, n, r) {
              var a = M(e, null),
              i = K._registerComponent(a, t);
              return x.batchedUpdates(_, a, i, t, n, r),
              a
            },
            renderSubtreeIntoContainer: function (e, t, n, r) {
              return null == e ||
              null == e._reactInternalInstance ? k(!1) : void 0,
              K._renderSubtreeIntoContainer(e, t, n, r)
            },
            _renderSubtreeIntoContainer: function (e, t, n, r) {
              T.isValidElement(t) ? void 0 : k(!1);
              var o = new T(J, null, null, null, null, null, t),
              c = z[i(n)];
              if (c) {
                var l = c._currentElement,
                u = l.props;
                if (V(u, t)) {
                  var p = c._renderedComponent.getPublicInstance(),
                  d = r &&
                  function () {
                    r.call(p)
                  };
                  return K._updateRootComponent(c, o, n, d),
                  p
                }
                K.unmountComponentAtNode(n)
              }
              var f = a(n),
              m = f &&
              !!s(f),
              h = v(n),
              _ = m &&
              !c &&
              !h,
              g = K._renderNewRootComponent(
                o,
                n,
                _,
                null != e ? e._reactInternalInstance._processChildContext(e._reactInternalInstance._context) : L
              )._renderedComponent.getPublicInstance();
              return r &&
              r.call(g),
              g
            },
            render: function (e, t, n) {
              return K._renderSubtreeIntoContainer(null, e, t, n)
            },
            registerContainer: function (e) {
              var t = i(e);
              return t &&
              (t = C.getReactRootIDFromNodeID(t)),
              t ||
              (t = C.createReactRootID()),
              Q[t] = e,
              t
            },
            unmountComponentAtNode: function (e) {
              !e ||
              e.nodeType !== U &&
              e.nodeType !== j &&
              e.nodeType !== G ? k(!1) : void 0;
              var t = i(e),
              n = z[t];
              if (!n) {
                var r = (v(e), s(e));
                r &&
                r === C.getReactRootIDFromNodeID(r);
                return !1
              }
              return x.batchedUpdates(g, n, e),
              delete z[t],
              delete Q[t],
              !0
            },
            findReactContainerForID: function (e) {
              var t = C.getReactRootIDFromNodeID(e),
              n = Q[t];
              return n
            },
            findReactNodeByID: function (e) {
              var t = K.findReactContainerForID(e);
              return K.findComponentRoot(t, e)
            },
            getFirstReactDOM: function (e) {
              return E(e)
            },
            findComponentRoot: function (e, t) {
              var n = Y,
              r = 0,
              a = m(t) ||
              e;
              for (n[0] = a.firstChild, n.length = 1; r < n.length; ) {
                for (var i, o = n[r++]; o; ) {
                  var s = K.getID(o);
                  s ? t === s ? i = o : C.isAncestorIDOf(s, t) &&
                  (n.length = r = 0, n.push(o.firstChild)) : n.push(o.firstChild),
                  o = o.nextSibling
                }
                if (i) return n.length = 0,
                i
              }
              n.length = 0,
              k(!1)
            },
            _mountImageIntoNode: function (e, t, n, i) {
              if (
                !t ||
                t.nodeType !== U &&
                t.nodeType !== j &&
                t.nodeType !== G ? k(!1) : void 0,
                n
              ) {
                var o = a(t);
                if (A.canReuseMarkup(e, o)) return;
                var s = o.getAttribute(A.CHECKSUM_ATTR_NAME);
                o.removeAttribute(A.CHECKSUM_ATTR_NAME);
                var c = o.outerHTML;
                o.setAttribute(A.CHECKSUM_ATTR_NAME, s);
                var l = e,
                u = r(l, c);
                ' (client) ' + l.substring(u - 20, u + 20) + '\n (server) ' + c.substring(u - 20, u + 20);
                t.nodeType === j ? k(!1) : void 0
              }
              if (t.nodeType === j ? k(!1) : void 0, i.useCreateElement) {
                for (; t.lastChild; ) t.removeChild(t.lastChild);
                t.appendChild(e)
              } else B(t, e)
            },
            ownerDocumentContextKey: H,
            getReactRootID: i,
            getID: o,
            setID: c,
            getNode: l,
            getNodeFromInstance: u,
            isValid: p,
            purgeID: d
          };
          O.measureMethods(
            K,
            'ReactMount',
            {
              _renderNewRootComponent: '_renderNewRootComponent',
              _mountImageIntoNode: '_mountImageIntoNode'
            }
          ),
          e.exports = K
        },
        function (e, t) {
          var n = Object;
          e.exports = {
            create: n.create,
            getProto: n.getPrototypeOf,
            isEnum: {
            }.propertyIsEnumerable,
            getDesc: n.getOwnPropertyDescriptor,
            setDesc: n.defineProperty,
            setDescs: n.defineProperties,
            getKeys: n.keys,
            getNames: n.getOwnPropertyNames,
            getSymbols: n.getOwnPropertySymbols,
            each: [].forEach
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(49),
          a = n(7),
          i = (
            n(124),
            'function' == typeof Symbol &&
            Symbol['for'] &&
            Symbol['for']('react.element') ||
            60103
          ),
          o = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
          },
          s = function (e, t, n, r, a, o, s) {
            var c = {
              $$typeof: i,
              type: e,
              key: t,
              ref: n,
              props: s,
              _owner: o
            };
            return c
          };
          s.createElement = function (e, t, n) {
            var a,
            i = {},
            c = null,
            l = null,
            u = null,
            p = null;
            if (null != t) {
              l = void 0 === t.ref ? null : t.ref,
              c = void 0 === t.key ? null : '' + t.key,
              u = void 0 === t.__self ? null : t.__self,
              p = void 0 === t.__source ? null : t.__source;
              for (a in t) t.hasOwnProperty(a) &&
              !o.hasOwnProperty(a) &&
              (i[a] = t[a])
            }
            var d = arguments.length - 2;
            if (1 === d) i.children = n;
             else if (d > 1) {
              for (var f = Array(d), m = 0; d > m; m++) f[m] = arguments[m + 2];
              i.children = f
            }
            if (e && e.defaultProps) {
              var h = e.defaultProps;
              for (a in h) 'undefined' == typeof i[a] &&
              (i[a] = h[a])
            }
            return s(e, c, l, u, p, r.current, i)
          },
          s.createFactory = function (e) {
            var t = s.createElement.bind(null, e);
            return t.type = e,
            t
          },
          s.cloneAndReplaceKey = function (e, t) {
            var n = s(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
            return n
          },
          s.cloneAndReplaceProps = function (e, t) {
            var n = s(e.type, e.key, e.ref, e._self, e._source, e._owner, t);
            return n
          },
          s.cloneElement = function (e, t, n) {
            var i,
            c = a({
            }, e.props),
            l = e.key,
            u = e.ref,
            p = e._self,
            d = e._source,
            f = e._owner;
            if (null != t) {
              void 0 !== t.ref &&
              (u = t.ref, f = r.current),
              void 0 !== t.key &&
              (l = '' + t.key);
              for (i in t) t.hasOwnProperty(i) &&
              !o.hasOwnProperty(i) &&
              (c[i] = t[i])
            }
            var m = arguments.length - 2;
            if (1 === m) c.children = n;
             else if (m > 1) {
              for (var h = Array(m), _ = 0; m > _; _++) h[_] = arguments[_ + 2];
              c.children = h
            }
            return s(e.type, l, u, p, d, f, c)
          },
          s.isValidElement = function (e) {
            return 'object' == typeof e &&
            null !== e &&
            e.$$typeof === i
          },
          e.exports = s
        },
        function (e, t, n) {
          'use strict';
          var r = n(321),
          a = n(6).ActionTypes,
          i = {
            navigate: function (e, t, n, i) {
              r.handleRouterAction({
                type: a.ROUTER_NAVIGATE,
                name: e,
                params: t,
                query: n,
                stacked: !1,
                disableBack: i
              })
            },
            navigateStacked: function (e, t, n, i) {
              r.handleRouterAction({
                type: a.ROUTER_NAVIGATE,
                stacked: !0,
                depth: e,
                name: t,
                params: n,
                query: i
              })
            },
            navigatePath: function (e) {
              r.handleRouterAction({
                type: a.ROUTER_NAVIGATE_PATH,
                path: e
              })
            },
            replace: function (e, t, n) {
              r.handleRouterAction({
                type: a.ROUTER_REPLACE,
                name: e,
                params: t,
                query: n
              })
            },
            back: function () {
              r.handleRouterAction({
                type: a.ROUTER_BACK
              })
            },
            reset: function () {
              r.handleRouterAction({
                type: a.ROUTER_RESET
              })
            },
            closeCurrentPanel: function () {
              this.back()
            },
            closePanel: function (e) {
              r.handleRouterAction({
                type: a.ROUTER_CLOSE,
                depth: e
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            if (!e || !e.name) return '';
            var t = e.name.toLowerCase();
            return t = k[t] ||
            t
          }
          function i(e) {
            if (
              A.get('telemetry') &&
              (R.push(e), S.getIsReady() && S.getIsLoggedIn())
            ) {
              var t = S.getCurrentPersona().personaId,
              n = D.getStatsForPersona(t);
              if (!n) return;
              var r = C.getAccountDetails(t);
              if (!r.friends) return;
              R.forEach(
                function (e) {
                  2001 === e.type &&
                  (
                    e.chara = {
                      l: 0,
                      origf: r.friends.length,
                      vcf: n.total_stars,
                      xp: n.pf_XP_Gained,
                      div: r.stats.division ? a(r.stats.division) : '',
                      sdiv: r.stats.division ? r.stats.division.rank : 0
                    }
                  )
                }
              ),
              o()
            }
          }
          function o() {
            R.forEach(function (e) {
              v(function () {
                T.sendTelemetry(e)
              })
            }),
            R = []
          }
          function s() {
            if (S.getIsReady() && S.getIsLoggedIn()) {
              var e = {
                sessionId: E.v4(),
                seq: 1,
                personaId: S.getCurrentPersona().personaId,
                startTime: (new Date).getTime(),
                endTime: null
              },
              t = {
                taxv: 1,
                type: 2001,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date(e.startTime)),
                  ts: '',
                  sid: e.sessionId,
                  s: e.seq++,
                  pid: parseInt(e.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                boot: {
                  stype: 1,
                  first: M ? 1 : 0,
                  lfrom: x
                }
              };
              i(t),
              P = e,
              l(),
              L &&
              (p(L), L = null)
            }
          }
          function c() {
            if (P) {
              var e = {
                taxv: 1,
                type: 2025,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date(P.endTime)),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                boot: {
                  etype: 1,
                  dur: Math.round((P.endTime - P.startTime) / 1000),
                  qfrom: x
                }
              };
              i(e),
              P = null,
              l()
            }
          }
          function l() {
            try {
              window.localStorage.setItem('pamplona-telemetry-session', (0, g['default']) (P))
            } catch (e) {
            }
          }
          function u() {
            if (P) {
              var e = {
                taxv: 1,
                type: 4002,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                lgin: {
                  ppid: x,
                  playerPlatform: S.getCurrentPlatform()
                }
              };
              i(e)
            }
          }
          function p(e) {
            if (!S.getIsReady()) return void (L = e);
            if (S.getIsLoggedIn() && P) {
              var t = {
                taxv: 1,
                type: 2070,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                ui: {
                  id: e,
                  t: 'p'
                }
              };
              i(t)
            }
          }
          function d(e, t) {
            if (S.getIsLoggedIn() && P) {
              var n = {
                taxv: 1,
                type: 2071,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                ui: {
                  id: t,
                  t: e
                }
              };
              i(n)
            }
          }
          function f(e, t, n, r) {
            if (P) {
              var a = {
                taxv: 1,
                type: 2080,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                sett: {
                  type: 'obj',
                  n: e,
                  f: t,
                  t: n
                }
              };
              r &&
              (a.sett.guid = r),
              i(a)
            }
          }
          function m(e, t, n) {
            if (P) {
              var r = {
                taxv: 1,
                type: 10000,
                core: {
                  projid: w,
                  rel: 'a',
                  v: '1.0',
                  tsc: b.formatDateUTC(new Date),
                  ts: '',
                  sid: P.sessionId,
                  s: P.seq++,
                  pid: parseInt(P.personaId, 10),
                  pidt: 0,
                  npid: 0,
                  ip: '',
                  mac: 0,
                  gid: 0
                },
                udf: {
                  m: 'BEAT',
                  g: 'GAME',
                  s: 'BOKM',
                  type: e,
                  name: t,
                  guid: n
                }
              };
              i(r)
            }
          }
          function h() {
            if (I.telemetry.enabled) {
              window.cordova &&
              window.device ? 'iOS' === window.device.platform ? (w = 314266, x = 'ios') : 'Android' === window.device.platform ? (w = 314267, x = 'android') : 'windows' === window.device.platform &&
              (w = 314268, x = 'windows phone') : (w = 313497, x = 'web');
              try {
                P = JSON.parse(window.localStorage.getItem('pamplona-telemetry-session'))
              } catch (e) {
              }
              P ? (P.endTime && c(), M = !1) : M = !0,
              O.register(
                function (e) {
                  var t = e.action;
                  switch (t.type) {
                    case 'BeatAuthentication.viaAuthCode':
                      O.waitFor([S.gatewayDispatchToken]),
                      S.getIsLoggedIn() &&
                      (s(), u());
                      break;
                    case 'BeatAuthentication.logout':
                      O.waitFor([S.gatewayDispatchToken]),
                      P &&
                      (P.endTime = (new Date).getTime()),
                      l()
                  }
                }
              ),
              N.register(
                function (e) {
                  var t = e.action;
                  switch (t.type) {
                    case y.SESSION_VALIDATED:
                      N.waitFor([S.sessionDispatchToken]),
                      S.getIsLoggedIn() &&
                      s()
                  }
                }
              ),
              window.addEventListener(
                'unload',
                function () {
                  if (S.getIsLoggedIn()) try {
                    P.endTime = (new Date).getTime(),
                    l()
                  } catch (e) {
                  }
                }
              )
            }
          }
          var _ = n(39),
          g = r(_),
          v = n(109),
          E = n(491),
          I = n(26),
          b = n(37),
          y = n(323),
          T = n(15),
          S = n(4),
          C = n(17),
          D = n(18),
          A = n(78),
          O = n(14),
          N = n(134),
          w = null,
          x = null,
          R = [],
          L = null,
          P = null,
          M = null,
          k = {
            copper: 'white',
            bronze: 'glass',
            gold: 'black'
          };
          e.exports = {
            init: h,
            pageView: p,
            settingChange: f,
            bookmark: m,
            click: d
          }
        },
        function (e, t, n) {
          var r = n(351) ('wks'),
          a = n(354),
          i = n(46).Symbol;
          e.exports = function (e) {
            return r[e] ||
            (r[e] = i && i[e] || (i || a) ('Symbol.' + e))
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            return n
          }
          var a = {
            enableMeasure: !1,
            storedMeasure: r,
            measureMethods: function (e, t, n) {
            },
            measure: function (e, t, n) {
              return n
            },
            injection: {
              injectMeasure: function (e) {
                a.storedMeasure = e
              }
            }
          };
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r() {
            D.ReactReconcileTransaction &&
            I ? void 0 : _(!1)
          }
          function a() {
            this.reinitializeTransaction(),
            this.dirtyComponentsLength = null,
            this.callbackQueue = u.getPooled(),
            this.reconcileTransaction = D.ReactReconcileTransaction.getPooled(!1)
          }
          function i(e, t, n, a, i, o) {
            r(),
            I.batchedUpdates(e, t, n, a, i, o)
          }
          function o(e, t) {
            return e._mountOrder - t._mountOrder
          }
          function s(e) {
            var t = e.dirtyComponentsLength;
            t !== g.length ? _(!1) : void 0,
            g.sort(o);
            for (var n = 0; t > n; n++) {
              var r = g[n],
              a = r._pendingCallbacks;
              if (
                r._pendingCallbacks = null,
                f.performUpdateIfNecessary(r, e.reconcileTransaction),
                a
              ) for (var i = 0; i < a.length; i++) e.callbackQueue.enqueue(a[i], r.getPublicInstance())
            }
          }
          function c(e) {
            return r(),
            I.isBatchingUpdates ? void g.push(e) : void I.batchedUpdates(c, e)
          }
          function l(e, t) {
            I.isBatchingUpdates ? void 0 : _(!1),
            v.enqueue(e, t),
            E = !0
          }
          var u = n(287),
          p = n(51),
          d = n(34),
          f = n(58),
          m = n(123),
          h = n(7),
          _ = n(5),
          g = [],
          v = u.getPooled(),
          E = !1,
          I = null,
          b = {
            initialize: function () {
              this.dirtyComponentsLength = g.length
            },
            close: function () {
              this.dirtyComponentsLength !== g.length ? (g.splice(0, this.dirtyComponentsLength), S()) : g.length = 0
            }
          },
          y = {
            initialize: function () {
              this.callbackQueue.reset()
            },
            close: function () {
              this.callbackQueue.notifyAll()
            }
          },
          T = [
            b,
            y
          ];
          h(
            a.prototype,
            m.Mixin,
            {
              getTransactionWrappers: function () {
                return T
              },
              destructor: function () {
                this.dirtyComponentsLength = null,
                u.release(this.callbackQueue),
                this.callbackQueue = null,
                D.ReactReconcileTransaction.release(this.reconcileTransaction),
                this.reconcileTransaction = null
              },
              perform: function (e, t, n) {
                return m.Mixin.perform.call(
                  this,
                  this.reconcileTransaction.perform,
                  this.reconcileTransaction,
                  e,
                  t,
                  n
                )
              }
            }
          ),
          p.addPoolingTo(a);
          var S = function () {
            for (; g.length || E; ) {
              if (g.length) {
                var e = a.getPooled();
                e.perform(s, null, e),
                a.release(e)
              }
              if (E) {
                E = !1;
                var t = v;
                v = u.getPooled(),
                t.notifyAll(),
                u.release(t)
              }
            }
          };
          S = d.measure('ReactUpdates', 'flushBatchedUpdates', S);
          var C = {
            injectReconcileTransaction: function (e) {
              e ? void 0 : _(!1),
              D.ReactReconcileTransaction = e
            },
            injectBatchingStrategy: function (e) {
              e ? void 0 : _(!1),
              'function' != typeof e.batchedUpdates ? _(!1) : void 0,
              'boolean' != typeof e.isBatchingUpdates ? _(!1) : void 0,
              I = e
            }
          },
          D = {
            ReactReconcileTransaction: null,
            batchedUpdates: i,
            enqueueUpdate: c,
            flushBatchedUpdates: S,
            injection: C,
            asap: l
          };
          e.exports = D
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return function () {
              return e
            }
          }
          function r() {
          }
          r.thatReturns = n,
          r.thatReturnsFalse = n(!1),
          r.thatReturnsTrue = n(!0),
          r.thatReturnsNull = n(null),
          r.thatReturnsThis = function () {
            return this
          },
          r.thatReturnsArgument = function (e) {
            return e
          },
          e.exports = r
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function n(e, t, n) {
                return n = n ||
                '0',
                e += '',
                e.length >= t ? e : new Array(t - e.length + 1).join(n) + e
              }
              var r = function () {
                this.formatTimeStamp = function (e) {
                  return this.formatDate(this.timeStampToDate(e))
                },
                this.friendlyTimeStamp = function (e, t) {
                  return this.friendlyDate(this.timeStampToDate(e), t)
                },
                this.timeStampToDate = function (e) {
                  return 'string' == typeof e &&
                  (e = parseInt(e, 10)),
                  new Date(e)
                },
                this.formatDate = function (e) {
                  return e.getFullYear() + '-' + n(e.getMonth() + 1, 2) + '-' + n(e.getDate(), 2)
                },
                this.formatDateUTC = function (e) {
                  return e.getUTCFullYear() + '-' + n(e.getUTCMonth() + 1, 2) + '-' + n(e.getUTCDate(), 2) + ' ' + n(e.getUTCHours(), 2) + ':' + n(e.getUTCMinutes(), 2) + ':' + n(e.getUTCSeconds(), 2)
                },
                this.friendlyDate = function (e, n) {
                  var r = Date.now() - e;
                  if (void 0 !== n && r > n) return this.formatDate(e);
                  if (0 > r) return t('ID_WEB_COMMON_AGO_NOW');
                  for (
                    var a = [
                      {
                        id: 'year',
                        duration: 31570559999.999992,
                        singular: t('ID_WEB_COMMON_AGO_YEAR'),
                        plural: t('ID_WEB_COMMON_AGO_YEARS')
                      },
                      {
                        id: 'month',
                        duration: 2630880000,
                        singular: t('ID_WEB_COMMON_AGO_MONTH'),
                        plural: t('ID_WEB_COMMON_AGO_MONTHS')
                      },
                      {
                        id: 'week',
                        duration: 604800000,
                        singular: t('ID_WEB_COMMON_AGO_WEEK'),
                        plural: t('ID_WEB_COMMON_AGO_WEEKS')
                      },
                      {
                        id: 'day',
                        duration: 86400000,
                        singular: t('ID_WEB_COMMON_AGO_DAY'),
                        plural: t('ID_WEB_COMMON_AGO_DAYS')
                      },
                      {
                        id: 'hour',
                        duration: 3600000,
                        singular: t('ID_WEB_COMMON_AGO_HOUR'),
                        plural: t('ID_WEB_COMMON_AGO_HOURS')
                      },
                      {
                        id: 'minute',
                        duration: 60000,
                        singular: t('ID_WEB_COMMON_AGO_MINUTE'),
                        plural: t('ID_WEB_COMMON_AGO_MINUTES')
                      }
                    ],
                    i = 0;
                    i < a.length;
                    i++
                  ) {
                    var o = a[i],
                    s = Math.floor(r / o.duration);
                    if (s) return 'hour' !== o.id &&
                    'day' !== o.id ||
                    (s = Math.ceil(r / o.duration)),
                    'day' === o.id &&
                    7 === s ? t('ID_WEB_COMMON_AGO_WEEK').replace('%s', 1) : 1 === s ? o.singular.replace('%s', s) : o.plural.replace('%s', s)
                  }
                  return t('ID_WEB_COMMON_AGO_NOW')
                },
                this.challengeScoreToRunTime = function (e) {
                  'string' == typeof e &&
                  (e = parseInt(e, 10));
                  var t = e / 100,
                  r = parseInt(t / 3600, 10) % 24,
                  a = parseInt(t / 60, 10) % 60,
                  i = parseInt(t, 10) % 60,
                  o = parseInt(100 * t, 10) % 100,
                  s = '';
                  return r &&
                  (s += r + ':'),
                  s += n(a, 2) + ':',
                  s += n(i, 2) + '.',
                  s += n(o, 2)
                },
                this.challengeScoreToHoursMinutes = function (e) {
                  'string' == typeof e &&
                  (e = parseInt(e, 10));
                  var t = e / 100,
                  n = parseInt(t / 3600, 10) % 24,
                  r = parseInt(t / 60, 10) % 60;
                  return n + 'h ' + r + 'm'
                }
              };
              e.exports = new r
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return p(E, function (t) {
              return d(t.meta.ugcId, e)
            })
          }
          function i(e, t) {
            e.forEach(
              function (e, n) {
                var r = t &&
                t[n] ||
                e.meta.ugcId,
                i = a(r);
                i ? (0, u['default']) (i, f(e, function (e) {
                  return null !== e
                })) : (
                  i = (0, u['default']) ({
                  }, v, e),
                  null === i.meta &&
                  (i.meta = (0, u['default']) ({
                  }, {
                    ugcId: r
                  })),
                  E.push(i)
                )
              }
            )
          }
          function o(e, t) {
            var n = a(t);
            n ? (0, u['default']) (n.meta, e) : (
              n = (0, u['default']) ({
              }, v),
              n.meta = (0, u['default']) ({
              }, e, {
                ugcId: t
              }),
              E.push(n)
            )
          }
          function s(e) {
            E.splice(E.indexOf(a(e)), 1)
          }
          function c() {
            E = []
          }
          var l = n(3),
          u = r(l),
          p = n(16),
          d = n(67),
          f = n(489),
          m = n(12),
          h = n(14),
          _ = n(6).ActionTypes,
          g = n(26),
          v = {
            meta: null,
            stats: null,
            userStats: null,
            overviewLeaderboard: null,
            fullLeaderboard: null,
            friendLeaderboard: null,
            checkpoints: null
          },
          E = [],
          I = (0, u['default']) ({
          }, m, {
            getAll: function () {
              return E
            },
            get: function (e) {
              return a(e)
            },
            getPublished: function () {
              return E.filter(function (e) {
                return !!e.meta.published
              })
            },
            getIsPublished: function (e) {
              return p(
                E.filter(function (e) {
                  return !!e.meta.published
                }),
                function (t) {
                  return d(t.meta.ugcId, e)
                }
              )
            },
            getByCreator: function (e) {
              return E.filter(function (t) {
                return t.meta.ugcId.userId === e
              })
            },
            getPublishedByCreator: function (e) {
              return this.getByCreator(e).filter(function (e) {
                return !!e.meta.published
              })
            },
            getCheckpoints: function (e) {
              var t = a(e);
              return void 0 !== t ? t.checkpoints : null
            },
            getName: function (e) {
              var t = a(e);
              return void 0 !== t ? t.meta.name : null
            },
            getTransform: function (e) {
              var t = a(e);
              return void 0 !== t ? t.meta.transform : null
            },
            reset: function () {
              c()
            }
          });
          I.gatewayDispatchToken = h.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getInitialGameData':
                  (t.data.bookmarks || t.data.userTimeTrials || t.data.promotedUGC) &&
                  (
                    i(
                      t.data.promotedUGC.slice(0, g.ugc.maxRecommendations - 1).filter(function (e) {
                        return 'TimeTrial' === e.meta.typeId
                      }).map(function (e) {
                        return {
                          meta: e.meta
                        }
                      })
                    ),
                    i(
                      t.data.bookmarks.ugcBookmarks.filter(function (e) {
                        return 'TimeTrial' === e.ugcType
                      }).map(function (e) {
                        return {
                          meta: e.meta
                        }
                      })
                    ),
                    i(t.data.userTimeTrials),
                    I.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.setUgcPublishedFlag':
                  'TimeTrial' === t.params.ugcType &&
                  (
                    o({
                      published: t.params.published
                    }, t.params.ugcId),
                    I.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.setUgcName':
                  'TimeTrial' === t.params.ugcType &&
                  (o({
                    name: t.params.name
                  }, t.params.ugcId), I.emitChange());
                  break;
                case 'PamplonaAuthenticated.deleteUGC':
                  'TimeTrial' === t.params.ugcType &&
                  (s(t.params.ugcId), I.emitChange());
                  break;
                case 'PamplonaAuthenticated.getTimeTrialData':
                case 'Pamplona.getTimeTrialData':
                  Array.isArray(t.data) &&
                  t.data[0].meta &&
                  (i(t.data, t.params.ugcIds), I.emitChange());
                  break;
                case 'PamplonaAuthenticated.getBookmarks':
                case 'Pamplona.getBookmarks':
                  var n = t.data.ugcBookmarks.filter(function (e) {
                    return 'TimeTrial' === e.meta.typeId
                  });
                  i(n, n.map(function (e) {
                    return e.meta.ugcId
                  })),
                  I.emitChange();
                  break;
                case 'Pamplona.getLatestPlayed':
                  t.data.forEach(
                    function (e) {
                      'TimeTrial' === e.typeId &&
                      null !== e.stats &&
                      e.stats.finishTime &&
                      i([{
                        userStats: e.stats
                      }
                      ], [
                        e.ugcId
                      ])
                    }
                  ),
                  I.emitChange();
                  break;
                case 'PamplonaAuthenticated.getTimeTrialLeaderboard':
                case 'Pamplona.getTimeTrialLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      fullLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    I.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getOverviewTimeTrialLeaderboard':
                case 'Pamplona.getOverviewTimeTrialLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      overviewLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    I.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getTimeTrialFriendsLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      friendLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    I.emitChange()
                  );
                  break;
                case _.UGCDATA:
                  'TimeTrial' === t.params.ugcType &&
                  (i([{
                    checkpoints: t.data
                  }
                  ], [
                    t.params.ugcId
                  ]), I.emitChange());
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  c(),
                  I.emitChange()
              }
            }
          ),
          e.exports = I
        },
        function (e, t, n) {
          e.exports = {
            'default': n(734),
            __esModule: !0
          }
        },
        function (e, t) {
          var n = e.exports = {
            version: '1.2.6'
          };
          'number' == typeof __e &&
          (__e = n)
        },
        function (e, t) {
          function n(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          e.exports = n
        },
        function (e, t) {
          e.exports = function (e) {
            return e.webpackPolyfill ||
            (
              e.deprecate = function () {
              },
              e.paths = [],
              e.children = [],
              e.webpackPolyfill = 1
            ),
            e
          }
        },
        function (e, t, n) {
          (
            function (e, r) { /*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
              'use strict';
              function a() {
                function e() {
                }
                try {
                  var t = new Uint8Array(1);
                  return t.foo = function () {
                    return 42
                  },
                  t.constructor = e,
                  42 === t.foo() &&
                  t.constructor === e &&
                  'function' == typeof t.subarray &&
                  0 === t.subarray(1, 1).byteLength
                } catch (n) {
                  return !1
                }
              }
              function i() {
                return e.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
              }
              function e(t) {
                return this instanceof e ? (
                  e.TYPED_ARRAY_SUPPORT ||
                  (this.length = 0, this.parent = void 0),
                  'number' == typeof t ? o(this, t) : 'string' == typeof t ? s(this, t, arguments.length > 1 ? arguments[1] : 'utf8') : c(this, t)
                ) : arguments.length > 1 ? new e(t, arguments[1]) : new e(t)
              }
              function o(t, n) {
                if (t = h(t, 0 > n ? 0 : 0 | _(n)), !e.TYPED_ARRAY_SUPPORT) for (var r = 0; n > r; r++) t[r] = 0;
                return t
              }
              function s(e, t, n) {
                'string' == typeof n &&
                '' !== n ||
                (n = 'utf8');
                var r = 0 | v(t, n);
                return e = h(e, r),
                e.write(t, n),
                e
              }
              function c(t, n) {
                if (e.isBuffer(n)) return l(t, n);
                if (K(n)) return u(t, n);
                if (null == n) throw new TypeError('must start with number, buffer, array or string');
                if ('undefined' != typeof ArrayBuffer) {
                  if (n.buffer instanceof ArrayBuffer) return p(t, n);
                  if (n instanceof ArrayBuffer) return d(t, n)
                }
                return n.length ? f(t, n) : m(t, n)
              }
              function l(e, t) {
                var n = 0 | _(t.length);
                return e = h(e, n),
                t.copy(e, 0, 0, n),
                e
              }
              function u(e, t) {
                var n = 0 | _(t.length);
                e = h(e, n);
                for (var r = 0; n > r; r += 1) e[r] = 255 & t[r];
                return e
              }
              function p(e, t) {
                var n = 0 | _(t.length);
                e = h(e, n);
                for (var r = 0; n > r; r += 1) e[r] = 255 & t[r];
                return e
              }
              function d(t, n) {
                return e.TYPED_ARRAY_SUPPORT ? (n.byteLength, t = e._augment(new Uint8Array(n))) : t = p(t, new Uint8Array(n)),
                t
              }
              function f(e, t) {
                var n = 0 | _(t.length);
                e = h(e, n);
                for (var r = 0; n > r; r += 1) e[r] = 255 & t[r];
                return e
              }
              function m(e, t) {
                var n,
                r = 0;
                'Buffer' === t.type &&
                K(t.data) &&
                (n = t.data, r = 0 | _(n.length)),
                e = h(e, r);
                for (var a = 0; r > a; a += 1) e[a] = 255 & n[a];
                return e
              }
              function h(t, n) {
                e.TYPED_ARRAY_SUPPORT ? (t = e._augment(new Uint8Array(n)), t.__proto__ = e.prototype) : (t.length = n, t._isBuffer = !0);
                var r = 0 !== n &&
                n <= e.poolSize >>> 1;
                return r &&
                (t.parent = X),
                t
              }
              function _(e) {
                if (e >= i()) throw new RangeError(
                  'Attempt to allocate Buffer larger than maximum size: 0x' + i().toString(16) + ' bytes'
                );
                return 0 | e
              }
              function g(t, n) {
                if (!(this instanceof g)) return new g(t, n);
                var r = new e(t, n);
                return delete r.parent,
                r
              }
              function v(e, t) {
                'string' != typeof e &&
                (e = '' + e);
                var n = e.length;
                if (0 === n) return 0;
                for (var r = !1; ; ) switch (t) {
                  case 'ascii':
                  case 'binary':
                  case 'raw':
                  case 'raws':
                    return n;
                  case 'utf8':
                  case 'utf-8':
                    return G(e).length;
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return 2 * n;
                  case 'hex':
                    return n >>> 1;
                  case 'base64':
                    return Q(e).length;
                  default:
                    if (r) return G(e).length;
                    t = ('' + t).toLowerCase(),
                    r = !0
                }
              }
              function E(e, t, n) {
                var r = !1;
                if (
                  t = 0 | t,
                  n = void 0 === n ||
                  n === 1 / 0 ? this.length : 0 | n,
                  e ||
                  (e = 'utf8'),
                  0 > t &&
                  (t = 0),
                  n > this.length &&
                  (n = this.length),
                  t >= n
                ) return '';
                for (; ; ) switch (e) {
                  case 'hex':
                    return x(this, t, n);
                  case 'utf8':
                  case 'utf-8':
                    return A(this, t, n);
                  case 'ascii':
                    return N(this, t, n);
                  case 'binary':
                    return w(this, t, n);
                  case 'base64':
                    return D(this, t, n);
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return R(this, t, n);
                  default:
                    if (r) throw new TypeError('Unknown encoding: ' + e);
                    e = (e + '').toLowerCase(),
                    r = !0
                }
              }
              function I(e, t, n, r) {
                n = Number(n) ||
                0;
                var a = e.length - n;
                r ? (r = Number(r), r > a && (r = a)) : r = a;
                var i = t.length;
                if (i % 2 !== 0) throw new Error('Invalid hex string');
                r > i / 2 &&
                (r = i / 2);
                for (var o = 0; r > o; o++) {
                  var s = parseInt(t.substr(2 * o, 2), 16);
                  if (isNaN(s)) throw new Error('Invalid hex string');
                  e[n + o] = s
                }
                return o
              }
              function b(e, t, n, r) {
                return Y(G(t, e.length - n), e, n, r)
              }
              function y(e, t, n, r) {
                return Y(H(t), e, n, r)
              }
              function T(e, t, n, r) {
                return y(e, t, n, r)
              }
              function S(e, t, n, r) {
                return Y(Q(t), e, n, r)
              }
              function C(e, t, n, r) {
                return Y(z(t, e.length - n), e, n, r)
              }
              function D(e, t, n) {
                return 0 === t &&
                n === e.length ? q.fromByteArray(e) : q.fromByteArray(e.slice(t, n))
              }
              function A(e, t, n) {
                n = Math.min(e.length, n);
                for (var r = [], a = t; n > a; ) {
                  var i = e[a],
                  o = null,
                  s = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;
                  if (n >= a + s) {
                    var c,
                    l,
                    u,
                    p;
                    switch (s) {
                      case 1:
                        128 > i &&
                        (o = i);
                        break;
                      case 2:
                        c = e[a + 1],
                        128 === (192 & c) &&
                        (p = (31 & i) << 6 | 63 & c, p > 127 && (o = p));
                        break;
                      case 3:
                        c = e[a + 1],
                        l = e[a + 2],
                        128 === (192 & c) &&
                        128 === (192 & l) &&
                        (
                          p = (15 & i) << 12 | (63 & c) << 6 | 63 & l,
                          p > 2047 &&
                          (55296 > p || p > 57343) &&
                          (o = p)
                        );
                        break;
                      case 4:
                        c = e[a + 1],
                        l = e[a + 2],
                        u = e[a + 3],
                        128 === (192 & c) &&
                        128 === (192 & l) &&
                        128 === (192 & u) &&
                        (
                          p = (15 & i) << 18 | (63 & c) << 12 | (63 & l) << 6 | 63 & u,
                          p > 65535 &&
                          1114112 > p &&
                          (o = p)
                        )
                    }
                  }
                  null === o ? (o = 65533, s = 1) : o > 65535 &&
                  (o -= 65536, r.push(o >>> 10 & 1023 | 55296), o = 56320 | 1023 & o),
                  r.push(o),
                  a += s
                }
                return O(r)
              }
              function O(e) {
                var t = e.length;
                if ($ >= t) return String.fromCharCode.apply(String, e);
                for (var n = '', r = 0; t > r; ) n += String.fromCharCode.apply(String, e.slice(r, r += $));
                return n
              }
              function N(e, t, n) {
                var r = '';
                n = Math.min(e.length, n);
                for (var a = t; n > a; a++) r += String.fromCharCode(127 & e[a]);
                return r
              }
              function w(e, t, n) {
                var r = '';
                n = Math.min(e.length, n);
                for (var a = t; n > a; a++) r += String.fromCharCode(e[a]);
                return r
              }
              function x(e, t, n) {
                var r = e.length;
                (!t || 0 > t) &&
                (t = 0),
                (!n || 0 > n || n > r) &&
                (n = r);
                for (var a = '', i = t; n > i; i++) a += j(e[i]);
                return a
              }
              function R(e, t, n) {
                for (var r = e.slice(t, n), a = '', i = 0; i < r.length; i += 2) a += String.fromCharCode(r[i] + 256 * r[i + 1]);
                return a
              }
              function L(e, t, n) {
                if (e % 1 !== 0 || 0 > e) throw new RangeError('offset is not uint');
                if (e + t > n) throw new RangeError('Trying to access beyond buffer length')
              }
              function P(t, n, r, a, i, o) {
                if (!e.isBuffer(t)) throw new TypeError('buffer must be a Buffer instance');
                if (n > i || o > n) throw new RangeError('value is out of bounds');
                if (r + a > t.length) throw new RangeError('index out of range')
              }
              function M(e, t, n, r) {
                0 > t &&
                (t = 65535 + t + 1);
                for (var a = 0, i = Math.min(e.length - n, 2); i > a; a++) e[n + a] = (t & 255 << 8 * (r ? a : 1 - a)) >>> 8 * (r ? a : 1 - a)
              }
              function k(e, t, n, r) {
                0 > t &&
                (t = 4294967295 + t + 1);
                for (var a = 0, i = Math.min(e.length - n, 4); i > a; a++) e[n + a] = t >>> 8 * (r ? a : 3 - a) & 255
              }
              function B(e, t, n, r, a, i) {
                if (t > a || i > t) throw new RangeError('value is out of bounds');
                if (n + r > e.length) throw new RangeError('index out of range');
                if (0 > n) throw new RangeError('index out of range')
              }
              function V(e, t, n, r, a) {
                return a ||
                B(e, t, n, 4, 3.4028234663852886e+38, - 3.4028234663852886e+38),
                J.write(e, t, n, r, 23, 4),
                n + 4
              }
              function F(e, t, n, r, a) {
                return a ||
                B(e, t, n, 8, 1.7976931348623157e+308, - 1.7976931348623157e+308),
                J.write(e, t, n, r, 52, 8),
                n + 8
              }
              function W(e) {
                if (e = U(e).replace(ee, ''), e.length < 2) return '';
                for (; e.length % 4 !== 0; ) e += '=';
                return e
              }
              function U(e) {
                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '')
              }
              function j(e) {
                return 16 > e ? '0' + e.toString(16) : e.toString(16)
              }
              function G(e, t) {
                t = t ||
                1 / 0;
                for (var n, r = e.length, a = null, i = [], o = 0; r > o; o++) {
                  if (n = e.charCodeAt(o), n > 55295 && 57344 > n) {
                    if (!a) {
                      if (n > 56319) {
                        (t -= 3) > - 1 &&
                        i.push(239, 191, 189);
                        continue
                      }
                      if (o + 1 === r) {
                        (t -= 3) > - 1 &&
                        i.push(239, 191, 189);
                        continue
                      }
                      a = n;
                      continue
                    }
                    if (56320 > n) {
                      (t -= 3) > - 1 &&
                      i.push(239, 191, 189),
                      a = n;
                      continue
                    }
                    n = (a - 55296 << 10 | n - 56320) + 65536
                  } else a &&
                  (t -= 3) > - 1 &&
                  i.push(239, 191, 189);
                  if (a = null, 128 > n) {
                    if ((t -= 1) < 0) break;
                    i.push(n)
                  } else if (2048 > n) {
                    if ((t -= 2) < 0) break;
                    i.push(n >> 6 | 192, 63 & n | 128)
                  } else if (65536 > n) {
                    if ((t -= 3) < 0) break;
                    i.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128)
                  } else {
                    if (!(1114112 > n)) throw new Error('Invalid code point');
                    if ((t -= 4) < 0) break;
                    i.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128)
                  }
                }
                return i
              }
              function H(e) {
                for (var t = [], n = 0; n < e.length; n++) t.push(255 & e.charCodeAt(n));
                return t
              }
              function z(e, t) {
                for (var n, r, a, i = [], o = 0; o < e.length && !((t -= 2) < 0); o++) n = e.charCodeAt(o),
                r = n >> 8,
                a = n % 256,
                i.push(a),
                i.push(r);
                return i
              }
              function Q(e) {
                return q.toByteArray(W(e))
              }
              function Y(e, t, n, r) {
                for (var a = 0; r > a && !(a + n >= t.length || a >= e.length); a++) t[a + n] = e[a];
                return a
              }
              var q = n(1698),
              J = n(1699),
              K = n(1700);
              t.Buffer = e,
              t.SlowBuffer = g,
              t.INSPECT_MAX_BYTES = 50,
              e.poolSize = 8192;
              var X = {};
              e.TYPED_ARRAY_SUPPORT = void 0 !== r.TYPED_ARRAY_SUPPORT ? r.TYPED_ARRAY_SUPPORT : a(),
              e.TYPED_ARRAY_SUPPORT ? (
                e.prototype.__proto__ = Uint8Array.prototype,
                e.__proto__ = Uint8Array
              ) : (e.prototype.length = void 0, e.prototype.parent = void 0),
              e.isBuffer = function (e) {
                return !(null == e || !e._isBuffer)
              },
              e.compare = function (t, n) {
                if (!e.isBuffer(t) || !e.isBuffer(n)) throw new TypeError('Arguments must be Buffers');
                if (t === n) return 0;
                for (
                  var r = t.length,
                  a = n.length,
                  i = 0,
                  o = Math.min(r, a);
                  o > i &&
                  t[i] === n[i];
                ) ++i;
                return i !== o &&
                (r = t[i], a = n[i]),
                a > r ? - 1 : r > a ? 1 : 0
              },
              e.isEncoding = function (e) {
                switch (String(e).toLowerCase()) {
                  case 'hex':
                  case 'utf8':
                  case 'utf-8':
                  case 'ascii':
                  case 'binary':
                  case 'base64':
                  case 'raw':
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return !0;
                  default:
                    return !1
                }
              },
              e.concat = function (t, n) {
                if (!K(t)) throw new TypeError('list argument must be an Array of Buffers.');
                if (0 === t.length) return new e(0);
                var r;
                if (void 0 === n) for (n = 0, r = 0; r < t.length; r++) n += t[r].length;
                var a = new e(n),
                i = 0;
                for (r = 0; r < t.length; r++) {
                  var o = t[r];
                  o.copy(a, i),
                  i += o.length
                }
                return a
              },
              e.byteLength = v,
              e.prototype.toString = function () {
                var e = 0 | this.length;
                return 0 === e ? '' : 0 === arguments.length ? A(this, 0, e) : E.apply(this, arguments)
              },
              e.prototype.equals = function (t) {
                if (!e.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
                return this === t ? !0 : 0 === e.compare(this, t)
              },
              e.prototype.inspect = function () {
                var e = '',
                n = t.INSPECT_MAX_BYTES;
                return this.length > 0 &&
                (
                  e = this.toString('hex', 0, n).match(/.{2}/g).join(' '),
                  this.length > n &&
                  (e += ' ... ')
                ),
                '<Buffer ' + e + '>'
              },
              e.prototype.compare = function (t) {
                if (!e.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
                return this === t ? 0 : e.compare(this, t)
              },
              e.prototype.indexOf = function (t, n) {
                function r(e, t, n) {
                  for (var r = - 1, a = 0; n + a < e.length; a++) if (e[n + a] === t[ - 1 === r ? 0 : a - r]) {
                    if ( - 1 === r && (r = a), a - r + 1 === t.length) return n + r
                  } else r = - 1;
                  return - 1
                }
                if (
                  n > 2147483647 ? n = 2147483647 : - 2147483648 > n &&
                  (n = - 2147483648),
                  n >>= 0,
                  0 === this.length
                ) return - 1;
                if (n >= this.length) return - 1;
                if (0 > n && (n = Math.max(this.length + n, 0)), 'string' == typeof t) return 0 === t.length ? - 1 : String.prototype.indexOf.call(this, t, n);
                if (e.isBuffer(t)) return r(this, t, n);
                if ('number' == typeof t) return e.TYPED_ARRAY_SUPPORT &&
                'function' === Uint8Array.prototype.indexOf ? Uint8Array.prototype.indexOf.call(this, t, n) : r(this, [
                  t
                ], n);
                throw new TypeError('val must be string, number or Buffer')
              },
              e.prototype.get = function (e) {
                return console.log('.get() is deprecated. Access using array indexes instead.'),
                this.readUInt8(e)
              },
              e.prototype.set = function (e, t) {
                return console.log('.set() is deprecated. Access using array indexes instead.'),
                this.writeUInt8(e, t)
              },
              e.prototype.write = function (e, t, n, r) {
                if (void 0 === t) r = 'utf8',
                n = this.length,
                t = 0;
                 else if (void 0 === n && 'string' == typeof t) r = t,
                n = this.length,
                t = 0;
                 else if (isFinite(t)) t = 0 | t,
                isFinite(n) ? (n = 0 | n, void 0 === r && (r = 'utf8')) : (r = n, n = void 0);
                 else {
                  var a = r;
                  r = t,
                  t = 0 | n,
                  n = a
                }
                var i = this.length - t;
                if (
                  (void 0 === n || n > i) &&
                  (n = i),
                  e.length > 0 &&
                  (0 > n || 0 > t) ||
                  t > this.length
                ) throw new RangeError('attempt to write outside buffer bounds');
                r ||
                (r = 'utf8');
                for (var o = !1; ; ) switch (r) {
                  case 'hex':
                    return I(this, e, t, n);
                  case 'utf8':
                  case 'utf-8':
                    return b(this, e, t, n);
                  case 'ascii':
                    return y(this, e, t, n);
                  case 'binary':
                    return T(this, e, t, n);
                  case 'base64':
                    return S(this, e, t, n);
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return C(this, e, t, n);
                  default:
                    if (o) throw new TypeError('Unknown encoding: ' + r);
                    r = ('' + r).toLowerCase(),
                    o = !0
                }
              },
              e.prototype.toJSON = function () {
                return {
                  type: 'Buffer',
                  data: Array.prototype.slice.call(this._arr || this, 0)
                }
              };
              var $ = 4096;
              e.prototype.slice = function (t, n) {
                var r = this.length;
                t = ~~t,
                n = void 0 === n ? r : ~~n,
                0 > t ? (t += r, 0 > t && (t = 0)) : t > r &&
                (t = r),
                0 > n ? (n += r, 0 > n && (n = 0)) : n > r &&
                (n = r),
                t > n &&
                (n = t);
                var a;
                if (e.TYPED_ARRAY_SUPPORT) a = e._augment(this.subarray(t, n));
                 else {
                  var i = n - t;
                  a = new e(i, void 0);
                  for (var o = 0; i > o; o++) a[o] = this[o + t]
                }
                return a.length &&
                (a.parent = this.parent || this),
                a
              },
              e.prototype.readUIntLE = function (e, t, n) {
                e = 0 | e,
                t = 0 | t,
                n ||
                L(e, t, this.length);
                for (var r = this[e], a = 1, i = 0; ++i < t && (a *= 256); ) r += this[e + i] * a;
                return r
              },
              e.prototype.readUIntBE = function (e, t, n) {
                e = 0 | e,
                t = 0 | t,
                n ||
                L(e, t, this.length);
                for (var r = this[e + --t], a = 1; t > 0 && (a *= 256); ) r += this[e + --t] * a;
                return r
              },
              e.prototype.readUInt8 = function (e, t) {
                return t ||
                L(e, 1, this.length),
                this[e]
              },
              e.prototype.readUInt16LE = function (e, t) {
                return t ||
                L(e, 2, this.length),
                this[e] | this[e + 1] << 8
              },
              e.prototype.readUInt16BE = function (e, t) {
                return t ||
                L(e, 2, this.length),
                this[e] << 8 | this[e + 1]
              },
              e.prototype.readUInt32LE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
              },
              e.prototype.readUInt32BE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
              },
              e.prototype.readIntLE = function (e, t, n) {
                e = 0 | e,
                t = 0 | t,
                n ||
                L(e, t, this.length);
                for (var r = this[e], a = 1, i = 0; ++i < t && (a *= 256); ) r += this[e + i] * a;
                return a *= 128,
                r >= a &&
                (r -= Math.pow(2, 8 * t)),
                r
              },
              e.prototype.readIntBE = function (e, t, n) {
                e = 0 | e,
                t = 0 | t,
                n ||
                L(e, t, this.length);
                for (var r = t, a = 1, i = this[e + --r]; r > 0 && (a *= 256); ) i += this[e + --r] * a;
                return a *= 128,
                i >= a &&
                (i -= Math.pow(2, 8 * t)),
                i
              },
              e.prototype.readInt8 = function (e, t) {
                return t ||
                L(e, 1, this.length),
                128 & this[e] ? - 1 * (255 - this[e] + 1) : this[e]
              },
              e.prototype.readInt16LE = function (e, t) {
                t ||
                L(e, 2, this.length);
                var n = this[e] | this[e + 1] << 8;
                return 32768 & n ? 4294901760 | n : n
              },
              e.prototype.readInt16BE = function (e, t) {
                t ||
                L(e, 2, this.length);
                var n = this[e + 1] | this[e] << 8;
                return 32768 & n ? 4294901760 | n : n
              },
              e.prototype.readInt32LE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
              },
              e.prototype.readInt32BE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
              },
              e.prototype.readFloatLE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                J.read(this, e, !0, 23, 4)
              },
              e.prototype.readFloatBE = function (e, t) {
                return t ||
                L(e, 4, this.length),
                J.read(this, e, !1, 23, 4)
              },
              e.prototype.readDoubleLE = function (e, t) {
                return t ||
                L(e, 8, this.length),
                J.read(this, e, !0, 52, 8)
              },
              e.prototype.readDoubleBE = function (e, t) {
                return t ||
                L(e, 8, this.length),
                J.read(this, e, !1, 52, 8)
              },
              e.prototype.writeUIntLE = function (e, t, n, r) {
                e = + e,
                t = 0 | t,
                n = 0 | n,
                r ||
                P(this, e, t, n, Math.pow(2, 8 * n), 0);
                var a = 1,
                i = 0;
                for (this[t] = 255 & e; ++i < n && (a *= 256); ) this[t + i] = e / a & 255;
                return t + n
              },
              e.prototype.writeUIntBE = function (e, t, n, r) {
                e = + e,
                t = 0 | t,
                n = 0 | n,
                r ||
                P(this, e, t, n, Math.pow(2, 8 * n), 0);
                var a = n - 1,
                i = 1;
                for (this[t + a] = 255 & e; --a >= 0 && (i *= 256); ) this[t + a] = e / i & 255;
                return t + n
              },
              e.prototype.writeUInt8 = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 1, 255, 0),
                e.TYPED_ARRAY_SUPPORT ||
                (t = Math.floor(t)),
                this[n] = 255 & t,
                n + 1
              },
              e.prototype.writeUInt16LE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 2, 65535, 0),
                e.TYPED_ARRAY_SUPPORT ? (this[n] = 255 & t, this[n + 1] = t >>> 8) : M(this, t, n, !0),
                n + 2
              },
              e.prototype.writeUInt16BE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 2, 65535, 0),
                e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 8, this[n + 1] = 255 & t) : M(this, t, n, !1),
                n + 2
              },
              e.prototype.writeUInt32LE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 4, 4294967295, 0),
                e.TYPED_ARRAY_SUPPORT ? (
                  this[n + 3] = t >>> 24,
                  this[n + 2] = t >>> 16,
                  this[n + 1] = t >>> 8,
                  this[n] = 255 & t
                ) : k(this, t, n, !0),
                n + 4
              },
              e.prototype.writeUInt32BE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 4, 4294967295, 0),
                e.TYPED_ARRAY_SUPPORT ? (
                  this[n] = t >>> 24,
                  this[n + 1] = t >>> 16,
                  this[n + 2] = t >>> 8,
                  this[n + 3] = 255 & t
                ) : k(this, t, n, !1),
                n + 4
              },
              e.prototype.writeIntLE = function (e, t, n, r) {
                if (e = + e, t = 0 | t, !r) {
                  var a = Math.pow(2, 8 * n - 1);
                  P(this, e, t, n, a - 1, - a)
                }
                var i = 0,
                o = 1,
                s = 0 > e ? 1 : 0;
                for (this[t] = 255 & e; ++i < n && (o *= 256); ) this[t + i] = (e / o >> 0) - s & 255;
                return t + n
              },
              e.prototype.writeIntBE = function (e, t, n, r) {
                if (e = + e, t = 0 | t, !r) {
                  var a = Math.pow(2, 8 * n - 1);
                  P(this, e, t, n, a - 1, - a)
                }
                var i = n - 1,
                o = 1,
                s = 0 > e ? 1 : 0;
                for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); ) this[t + i] = (e / o >> 0) - s & 255;
                return t + n
              },
              e.prototype.writeInt8 = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 1, 127, - 128),
                e.TYPED_ARRAY_SUPPORT ||
                (t = Math.floor(t)),
                0 > t &&
                (t = 255 + t + 1),
                this[n] = 255 & t,
                n + 1
              },
              e.prototype.writeInt16LE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 2, 32767, - 32768),
                e.TYPED_ARRAY_SUPPORT ? (this[n] = 255 & t, this[n + 1] = t >>> 8) : M(this, t, n, !0),
                n + 2
              },
              e.prototype.writeInt16BE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 2, 32767, - 32768),
                e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 8, this[n + 1] = 255 & t) : M(this, t, n, !1),
                n + 2
              },
              e.prototype.writeInt32LE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 4, 2147483647, - 2147483648),
                e.TYPED_ARRAY_SUPPORT ? (
                  this[n] = 255 & t,
                  this[n + 1] = t >>> 8,
                  this[n + 2] = t >>> 16,
                  this[n + 3] = t >>> 24
                ) : k(this, t, n, !0),
                n + 4
              },
              e.prototype.writeInt32BE = function (t, n, r) {
                return t = + t,
                n = 0 | n,
                r ||
                P(this, t, n, 4, 2147483647, - 2147483648),
                0 > t &&
                (t = 4294967295 + t + 1),
                e.TYPED_ARRAY_SUPPORT ? (
                  this[n] = t >>> 24,
                  this[n + 1] = t >>> 16,
                  this[n + 2] = t >>> 8,
                  this[n + 3] = 255 & t
                ) : k(this, t, n, !1),
                n + 4
              },
              e.prototype.writeFloatLE = function (e, t, n) {
                return V(this, e, t, !0, n)
              },
              e.prototype.writeFloatBE = function (e, t, n) {
                return V(this, e, t, !1, n)
              },
              e.prototype.writeDoubleLE = function (e, t, n) {
                return F(this, e, t, !0, n)
              },
              e.prototype.writeDoubleBE = function (e, t, n) {
                return F(this, e, t, !1, n)
              },
              e.prototype.copy = function (t, n, r, a) {
                if (
                  r ||
                  (r = 0),
                  a ||
                  0 === a ||
                  (a = this.length),
                  n >= t.length &&
                  (n = t.length),
                  n ||
                  (n = 0),
                  a > 0 &&
                  r > a &&
                  (a = r),
                  a === r
                ) return 0;
                if (0 === t.length || 0 === this.length) return 0;
                if (0 > n) throw new RangeError('targetStart out of bounds');
                if (0 > r || r >= this.length) throw new RangeError('sourceStart out of bounds');
                if (0 > a) throw new RangeError('sourceEnd out of bounds');
                a > this.length &&
                (a = this.length),
                t.length - n < a - r &&
                (a = t.length - n + r);
                var i,
                o = a - r;
                if (this === t && n > r && a > n) for (i = o - 1; i >= 0; i--) t[i + n] = this[i + r];
                 else if (1000 > o || !e.TYPED_ARRAY_SUPPORT) for (i = 0; o > i; i++) t[i + n] = this[i + r];
                 else t._set(this.subarray(r, r + o), n);
                return o
              },
              e.prototype.fill = function (e, t, n) {
                if (e || (e = 0), t || (t = 0), n || (n = this.length), t > n) throw new RangeError('end < start');
                if (n !== t && 0 !== this.length) {
                  if (0 > t || t >= this.length) throw new RangeError('start out of bounds');
                  if (0 > n || n > this.length) throw new RangeError('end out of bounds');
                  var r;
                  if ('number' == typeof e) for (r = t; n > r; r++) this[r] = e;
                   else {
                    var a = G(e.toString()),
                    i = a.length;
                    for (r = t; n > r; r++) this[r] = a[r % i]
                  }
                  return this
                }
              },
              e.prototype.toArrayBuffer = function () {
                if ('undefined' != typeof Uint8Array) {
                  if (e.TYPED_ARRAY_SUPPORT) return new e(this).buffer;
                  for (var t = new Uint8Array(this.length), n = 0, r = t.length; r > n; n += 1) t[n] = this[n];
                  return t.buffer
                }
                throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
              };
              var Z = e.prototype;
              e._augment = function (t) {
                return t.constructor = e,
                t._isBuffer = !0,
                t._set = t.set,
                t.get = Z.get,
                t.set = Z.set,
                t.write = Z.write,
                t.toString = Z.toString,
                t.toLocaleString = Z.toString,
                t.toJSON = Z.toJSON,
                t.equals = Z.equals,
                t.compare = Z.compare,
                t.indexOf = Z.indexOf,
                t.copy = Z.copy,
                t.slice = Z.slice,
                t.readUIntLE = Z.readUIntLE,
                t.readUIntBE = Z.readUIntBE,
                t.readUInt8 = Z.readUInt8,
                t.readUInt16LE = Z.readUInt16LE,
                t.readUInt16BE = Z.readUInt16BE,
                t.readUInt32LE = Z.readUInt32LE,
                t.readUInt32BE = Z.readUInt32BE,
                t.readIntLE = Z.readIntLE,
                t.readIntBE = Z.readIntBE,
                t.readInt8 = Z.readInt8,
                t.readInt16LE = Z.readInt16LE,
                t.readInt16BE = Z.readInt16BE,
                t.readInt32LE = Z.readInt32LE,
                t.readInt32BE = Z.readInt32BE,
                t.readFloatLE = Z.readFloatLE,
                t.readFloatBE = Z.readFloatBE,
                t.readDoubleLE = Z.readDoubleLE,
                t.readDoubleBE = Z.readDoubleBE,
                t.writeUInt8 = Z.writeUInt8,
                t.writeUIntLE = Z.writeUIntLE,
                t.writeUIntBE = Z.writeUIntBE,
                t.writeUInt16LE = Z.writeUInt16LE,
                t.writeUInt16BE = Z.writeUInt16BE,
                t.writeUInt32LE = Z.writeUInt32LE,
                t.writeUInt32BE = Z.writeUInt32BE,
                t.writeIntLE = Z.writeIntLE,
                t.writeIntBE = Z.writeIntBE,
                t.writeInt8 = Z.writeInt8,
                t.writeInt16LE = Z.writeInt16LE,
                t.writeInt16BE = Z.writeInt16BE,
                t.writeInt32LE = Z.writeInt32LE,
                t.writeInt32BE = Z.writeInt32BE,
                t.writeFloatLE = Z.writeFloatLE,
                t.writeFloatBE = Z.writeFloatBE,
                t.writeDoubleLE = Z.writeDoubleLE,
                t.writeDoubleBE = Z.writeDoubleBE,
                t.fill = Z.fill,
                t.inspect = Z.inspect,
                t.toArrayBuffer = Z.toArrayBuffer,
                t
              };
              var ee = /[^+\/0-9A-Za-z-_]/g
            }
          ).call(t, n(43).Buffer, function () {
            return this
          }())
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return p(v, function (t) {
              return d(t.meta.ugcId, e)
            })
          }
          function i(e, t) {
            e.forEach(
              function (e, n) {
                var r = t &&
                t[n] ||
                e.meta.ugcId,
                i = a(r);
                void 0 !== i ? (0, u['default']) (i, f(e, function (e) {
                  return null !== e
                })) : (
                  i = (0, u['default']) ({
                  }, g, e),
                  null === i.meta &&
                  (i.meta = (0, u['default']) ({
                  }, {
                    ugcId: r
                  })),
                  v.push(i)
                )
              }
            )
          }
          function o(e, t) {
            var n = a(t);
            n ? (0, u['default']) (n.meta, e) : (
              n = (0, u['default']) ({
              }, g),
              n.meta = (0, u['default']) ({
              }, e, {
                ugcId: t
              }),
              v.push(n)
            )
          }
          function s(e) {
            v.splice(v.indexOf(a(e)), 1)
          }
          function c() {
            v = []
          }
          var l = n(3),
          u = r(l),
          p = n(16),
          d = n(67),
          f = n(489),
          m = n(12),
          h = n(14),
          _ = n(26),
          g = {
            meta: null,
            stats: null,
            userStats: null,
            overviewLeaderboard: null,
            fullLeaderboard: null,
            friendLeaderboard: null
          },
          v = [],
          E = (0, u['default']) ({
          }, m, {
            getAll: function () {
              return v
            },
            get: function (e) {
              return a(e)
            },
            getPublished: function () {
              return v.filter(function (e) {
                return !!e.meta.published
              })
            },
            getIsPublished: function (e) {
              return p(
                v.filter(function (e) {
                  return !!e.meta.published
                }),
                function (t) {
                  return d(t.meta.ugcId, e)
                }
              )
            },
            getByCreator: function (e) {
              return v.filter(function (t) {
                return t.meta.ugcId.userId === e
              })
            },
            getPublishedByCreator: function (e) {
              return this.getByCreator(e).filter(function (e) {
                return !!e.meta.published
              })
            },
            getName: function (e) {
              var t = a(e);
              return t &&
              t.meta.name
            },
            getTransform: function (e) {
              return a(e).meta.transform
            },
            reset: function () {
              c()
            }
          });
          E.gatewayDispatchToken = h.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getInitialGameData':
                  (t.data.bookmarks || t.data.userReachThis || t.data.promotedUGC) &&
                  (
                    c(),
                    i(
                      t.data.promotedUGC.slice(0, _.ugc.maxRecommendations - 1).filter(function (e) {
                        return 'ReachThis' === e.meta.typeId
                      }).map(function (e) {
                        return {
                          meta: e.meta
                        }
                      })
                    ),
                    i(
                      t.data.bookmarks.ugcBookmarks.filter(function (e) {
                        return 'ReachThis' === e.ugcType
                      }).map(function (e) {
                        return {
                          meta: e.meta
                        }
                      })
                    ),
                    i(t.data.userReachThis),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.setUgcPublishedFlag':
                  'ReachThis' === t.params.ugcType &&
                  (
                    o({
                      published: t.params.published
                    }, t.params.ugcId),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.setUgcName':
                  'ReachThis' === t.params.ugcType &&
                  (o({
                    name: t.params.name
                  }, t.params.ugcId), E.emitChange());
                  break;
                case 'PamplonaAuthenticated.deleteUGC':
                  'ReachThis' === t.params.ugcType &&
                  (s(t.params.ugcId), E.emitChange());
                  break;
                case 'PamplonaAuthenticated.getReachThisData':
                case 'Pamplona.getReachThisData':
                  Array.isArray(t.data) &&
                  t.data[0].meta &&
                  (i(t.data, t.params.ugcIds), E.emitChange());
                  break;
                case 'PamplonaAuthenticated.getBookmarks':
                case 'Pamplona.getBookmarks':
                  var n = t.data.ugcBookmarks.filter(function (e) {
                    return 'ReachThis' === e.meta.typeId
                  });
                  i(n, n.map(function (e) {
                    return e.meta.ugcId
                  })),
                  E.emitChange();
                  break;
                case 'Pamplona.getLatestPlayed':
                  t.data.forEach(
                    function (e) {
                      'ReachThis' === e.typeId &&
                      null !== e.stats &&
                      e.stats.reachedAt &&
                      i([{
                        userStats: e.stats
                      }
                      ], [
                        e.ugcId
                      ])
                    }
                  ),
                  E.emitChange();
                  break;
                case 'PamplonaAuthenticated.getReachThisLeaderboard':
                case 'Pamplona.getReachThisLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      fullLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getOverviewReachThisLeaderboard':
                case 'Pamplona.getOverviewReachThisLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      overviewLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getReachThisFriendsLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      friendLeaderboard: t.data
                    }
                    ], [
                      t.params.ugcId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  c(),
                  E.emitChange()
              }
            }
          ),
          e.exports = E
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return l(v, function (t) {
              return t.id === e
            })
          }
          function i(e, t, n) {
            e.forEach(
              function (e, r) {
                var i,
                o = e.id ||
                e.meta &&
                e.meta.id ||
                t[r],
                s = (0, c['default']) ({
                }, e);
                if (
                  i = e.meta ? e.meta : l(h, function (e) {
                    return e.id === o
                  }),
                  'userStats' in e &&
                  null != e.userStats
                ) {
                  var u = {};
                  null != n ? u[n] = (0, c['default']) ({
                  }, e.userStats) : _.getIsLoggedIn() &&
                  (u[_.getCurrentPersonaId()] = (0, c['default']) ({
                  }, e.userStats)),
                  s.userStats = u
                }
                var p = a(o);
                p ? (0, c['default']) (p, s, {
                  id: o,
                  meta: i
                }) : (
                  s = (0, c['default']) ({
                  }, g, s, {
                    id: o,
                    meta: i
                  }),
                  v.push((0, c['default']) ({
                  }, s))
                )
              }
            )
          }
          function o() {
            var e = [],
            t = [];
            h.map(function (n) {
              e.push({
                meta: n
              }),
              t.push({
                id: n.id
              })
            }),
            i(e, t)
          }
          var s = n(3),
          c = r(s),
          l = n(16),
          u = n(488),
          p = n(12),
          d = n(6).ActionTypes,
          f = n(10),
          m = n(14),
          h = n(455),
          _ = n(4),
          g = {
            id: null,
            meta: null,
            stats: null,
            userStats: null,
            overviewLeaderboard: null,
            fullLeaderboard: null,
            friendLeaderboard: null,
            geoLeaderboard: null
          },
          v = [],
          E = (0, c['default']) ({
          }, p, {
            getAll: function (e) {
              return v.map(
                function (t) {
                  var n = u(t, 'userStats');
                  return n.userStats = t.userStats &&
                  t.userStats[e] ? t.userStats[e] : null,
                  n
                }
              )
            },
            get: function (e) {
              return a(e)
            },
            getName: function (e) {
              var t = a(e);
              return t ? t.meta.displayName : null
            },
            reset: function () {
              o()
            }
          });
          E.dispatchToken = f.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case d.APP_START:
                  o(),
                  E.emitChange()
              }
            }
          ),
          E.gatewayDispatchToken = m.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getRunnersRouteData':
                case 'Pamplona.getRunnersRouteData':
                  t.data &&
                  t.data.length &&
                  (
                    i(t.data, t.params.challengeIds, t.params.personaId),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getRunnersRouteLeaderboard':
                case 'Pamplona.getRunnersRouteLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      fullLeaderboard: t.data
                    }
                    ], [
                      t.params.challengeId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getOverviewRunnersRouteLeaderboard':
                case 'Pamplona.getOverviewRunnersRouteLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      overviewLeaderboard: t.data
                    }
                    ], [
                      t.params.challengeId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getRunnersRouteFriendsLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      friendLeaderboard: t.data
                    }
                    ], [
                      t.params.challengeId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'PamplonaAuthenticated.getRunnersRouteGeoLeaderboard':
                  t.data.leaderboard &&
                  (
                    i([{
                      geoLeaderboard: t.data
                    }
                    ], [
                      t.params.challengeId
                    ]),
                    E.emitChange()
                  );
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  o(),
                  E.emitChange()
              }
            }
          ),
          e.exports = E
        },
        function (e, t) {
          var n = e.exports = 'undefined' != typeof window &&
          window.Math == Math ? window : 'undefined' != typeof self &&
          self.Math == Math ? self : Function('return this') ();
          'number' == typeof __g &&
          (__g = n)
        },
        function (e, t, n) {
          (
            function (e, r) {
              var a = n(1545),
              i = {
                'function': !0,
                object: !0
              },
              o = i[typeof t] &&
              t &&
              !t.nodeType ? t : void 0,
              s = i[typeof e] &&
              e &&
              !e.nodeType ? e : void 0,
              c = a(o && s && 'object' == typeof r && r),
              l = a(i[typeof self] && self),
              u = a(i[typeof window] && window),
              p = a(i[typeof this] && this),
              d = c ||
              u !== (p && p.window) &&
              u ||
              l ||
              p ||
              Function('return this') ();
              e.exports = d
            }
          ).call(t, n(42) (e), function () {
            return this
          }())
        },
        function (e, t, n) {
          'use strict';
          var r = n(127),
          a = r({
            bubbled: null,
            captured: null
          }),
          i = r({
            topAbort: null,
            topBlur: null,
            topCanPlay: null,
            topCanPlayThrough: null,
            topChange: null,
            topClick: null,
            topCompositionEnd: null,
            topCompositionStart: null,
            topCompositionUpdate: null,
            topContextMenu: null,
            topCopy: null,
            topCut: null,
            topDoubleClick: null,
            topDrag: null,
            topDragEnd: null,
            topDragEnter: null,
            topDragExit: null,
            topDragLeave: null,
            topDragOver: null,
            topDragStart: null,
            topDrop: null,
            topDurationChange: null,
            topEmptied: null,
            topEncrypted: null,
            topEnded: null,
            topError: null,
            topFocus: null,
            topInput: null,
            topKeyDown: null,
            topKeyPress: null,
            topKeyUp: null,
            topLoad: null,
            topLoadedData: null,
            topLoadedMetadata: null,
            topLoadStart: null,
            topMouseDown: null,
            topMouseMove: null,
            topMouseOut: null,
            topMouseOver: null,
            topMouseUp: null,
            topPaste: null,
            topPause: null,
            topPlay: null,
            topPlaying: null,
            topProgress: null,
            topRateChange: null,
            topReset: null,
            topScroll: null,
            topSeeked: null,
            topSeeking: null,
            topSelectionChange: null,
            topStalled: null,
            topSubmit: null,
            topSuspend: null,
            topTextInput: null,
            topTimeUpdate: null,
            topTouchCancel: null,
            topTouchEnd: null,
            topTouchMove: null,
            topTouchStart: null,
            topVolumeChange: null,
            topWaiting: null,
            topWheel: null
          }),
          o = {
            topLevelTypes: i,
            PropagationPhases: a
          };
          e.exports = o
        },
        function (e, t) {
          'use strict';
          var n = {
            current: null
          };
          e.exports = n
        },
        function (e, t) {
          'use strict';
          var n = function (e) {
            var t;
            for (t in e) if (e.hasOwnProperty(t)) return t;
            return null
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = function (e) {
            var t = this;
            if (t.instancePool.length) {
              var n = t.instancePool.pop();
              return t.call(n, e),
              n
            }
            return new t(e)
          },
          i = function (e, t) {
            var n = this;
            if (n.instancePool.length) {
              var r = n.instancePool.pop();
              return n.call(r, e, t),
              r
            }
            return new n(e, t)
          },
          o = function (e, t, n) {
            var r = this;
            if (r.instancePool.length) {
              var a = r.instancePool.pop();
              return r.call(a, e, t, n),
              a
            }
            return new r(e, t, n)
          },
          s = function (e, t, n, r) {
            var a = this;
            if (a.instancePool.length) {
              var i = a.instancePool.pop();
              return a.call(i, e, t, n, r),
              i
            }
            return new a(e, t, n, r)
          },
          c = function (e, t, n, r, a) {
            var i = this;
            if (i.instancePool.length) {
              var o = i.instancePool.pop();
              return i.call(o, e, t, n, r, a),
              o
            }
            return new i(e, t, n, r, a)
          },
          l = function (e) {
            var t = this;
            e instanceof t ? void 0 : r(!1),
            e.destructor(),
            t.instancePool.length < t.poolSize &&
            t.instancePool.push(e)
          },
          u = 10,
          p = a,
          d = function (e, t) {
            var n = e;
            return n.instancePool = [],
            n.getPooled = t ||
            p,
            n.poolSize ||
            (n.poolSize = u),
            n.release = l,
            n
          },
          f = {
            addPoolingTo: d,
            oneArgumentPooler: a,
            twoArgumentPooler: i,
            threeArgumentPooler: o,
            fourArgumentPooler: s,
            fiveArgumentPooler: c
          };
          e.exports = f
        },
        function (e, t, n) {
          'use strict';
          var r = n(1476);
          e.exports = function (e) {
            if (e.y < - 1) return 5;
            var t = Math.round(0.1 * e.z) + 112,
            n = Math.round(0.1 * e.x) + 136;
            return void 0 === r[t] ||
            void 0 === r[t][n] ? 8 : r[t][n]
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            I[e] ||
            (I[e] = (0, p['default']) ({
            }, E)),
            (0, p['default']) (I[e], t)
          }
          function i(e) {
            I[v.getCurrentPersona().personaId]._challengeBookmarks.push(e)
          }
          function o(e) {
            I[v.getCurrentPersona().personaId]._ugcBookmarks.push(e)
          }
          function s(e) {
            I[v.getCurrentPersona().personaId]._challengeBookmarks.splice(
              I[v.getCurrentPersona().personaId]._challengeBookmarks.indexOf(e),
              1
            )
          }
          function c(e) {
            I[v.getCurrentPersona().personaId]._ugcBookmarks.splice(
              I[v.getCurrentPersona().personaId]._ugcBookmarks.indexOf(e),
              1
            )
          }
          function l() {
            I = {}
          }
          var u = n(3),
          p = r(u),
          d = n(16),
          f = n(488),
          m = n(67),
          h = n(12),
          _ = n(14),
          g = n(17),
          v = n(4),
          E = {
            _challengeBookmarks: null,
            _ugcBookmarks: null,
            _followed: null
          },
          I = {},
          b = (0, p['default']) ({
          }, h, {
            getAllChallenges: function (e) {
              return I[e] &&
              I[e]._challengeBookmarks &&
              I[e]._ugcBookmarks ? I[e]._challengeBookmarks.concat(I[e]._ugcBookmarks) : null
            },
            getAllFollowed: function (e) {
              return I[e] ? null === I[e]._followed ? [] : I[e]._followed : null
            },
            getIsChallengeBookmarked: function (e, t) {
              var n = v.getCurrentPersonaId();
              return null != n &&
              I[n] ? !!d(I[n]._challengeBookmarks, {
                challengeType: t,
                challengeId: e
              }) : null
            },
            getIsUgcBookmarked: function (e, t) {
              var n = v.getCurrentPersonaId();
              return null != n &&
              I[n] ? !!d(I[n]._ugcBookmarks, {
                ugcType: t,
                ugcId: e
              }) : null
            },
            getIsFollowed: function (e) {
              var t = v.getCurrentPersonaId();
              return null != t &&
              I[t] ? !!d(I[t]._followed, {
                personaId: e
              }) : null
            }
          });
          b.gatewayDispatchToken = _.register(
            function (e) {
              var t,
              n,
              r = e.action;
              switch (r.type) {
                case 'PamplonaAuthenticated.getInitialGameData':
                  t = {
                    _challengeBookmarks: r.data.bookmarks.challengeBookmarks,
                    _ugcBookmarks: r.data.bookmarks.ugcBookmarks.map(function (e) {
                      var t = f(e, 'meta');
                      return t.ugcId = e.meta.ugcId,
                      t
                    })
                  },
                  a(v.getCurrentPersona().personaId, t),
                  b.emitChange();
                  break;
                case 'PamplonaAuthenticated.getBookmarks':
                case 'Pamplona.getBookmarks':
                  t = {
                    _challengeBookmarks: r.data.challengeBookmarks,
                    _ugcBookmarks: r.data.ugcBookmarks.map(function (e) {
                      var t = f(e, 'meta');
                      return t.ugcId = e.meta.ugcId,
                      t
                    })
                  },
                  a(r.params.personaId || v.getCurrentPersona().personaId, t),
                  b.emitChange();
                  break;
                case 'PamplonaAuthenticated.addUGCBookmark':
                  var u = {
                    bookmarkTime: (new Date).getTime(),
                    ugcType: r.params.ugcType
                  };
                  switch (r.params.ugcType) {
                    case 'TimeTrial':
                      u.ugcId = r.params.ugcId;
                      break;
                    case 'ReachThis':
                      u.ugcId = r.params.ugcId
                  }
                  o(u),
                  b.emitChange();
                  break;
                case 'PamplonaAuthenticated.removeUGCBookmark':
                  n = d(
                    I[v.getCurrentPersona().personaId]._ugcBookmarks,
                    function (e) {
                      return m(e.ugcId, r.params.ugcId)
                    }
                  ),
                  n &&
                  c(n),
                  b.emitChange();
                  break;
                case 'PamplonaAuthenticated.addChallengeBookmark':
                  var p = {
                    bookmarkTime: (new Date).getTime(),
                    challengeType: r.params.challengeType,
                    challengeId: r.params.challengeId
                  };
                  i(p),
                  b.emitChange();
                  break;
                case 'PamplonaAuthenticated.removeChallengeBookmark':
                  n = d(
                    I[v.getCurrentPersona().personaId]._challengeBookmarks,
                    {
                      challengeId: r.params.challengeId
                    }
                  ),
                  n &&
                  s(n),
                  b.emitChange();
                  break;
                case 'Pamplona.getFollowed':
                case 'PamplonaAuthenticated.getFollowed':
                case 'PamplonaAuthenticated.followPlayer':
                case 'PamplonaAuthenticated.unfollowPlayer':
                  var h = r.data.map(
                    function (e) {
                      var t,
                      n = d(g.getAccountDetails().friends, {
                        personaId: e.personaId
                      });
                      return t = n ? g.getTransform(e.personaId) : {
                        x: 180 + 500 * Math.random(),
                        y: 50 + 100 * Math.random(),
                        z: 108 + 500 * Math.random()
                      },
                      e.transform = t,
                      e
                    }
                  );
                  a(
                    r.params.personaId ||
                    v.getCurrentPersona().personaId,
                    {
                      _followed: h
                    }
                  ),
                  b.emitChange();
                  break;
                case 'BeatAuthentication.logout':
                  l(),
                  b.emitChange()
              }
            }
          ),
          e.exports = b
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(346),
          i = r(a),
          o = n(733),
          s = r(o),
          c = n(2),
          l = n(1609).Scrollbars,
          u = n(109),
          p = !1,
          d = c.createClass({
            displayName: 'Scrollable',
            propTypes: {
              minHeight: c.PropTypes.number
            },
            contextTypes: {
              isNested: c.PropTypes.bool,
              getContainerHeight: c.PropTypes.func,
              getContentHeight: c.PropTypes.func,
              updateScrollbars: c.PropTypes.func
            },
            childContextTypes: {
              isNested: c.PropTypes.bool,
              getContainerHeight: c.PropTypes.func,
              getContentHeight: c.PropTypes.func,
              updateScrollbars: c.PropTypes.func
            },
            getChildContext: function () {
              return {
                isNested: !0,
                getContainerHeight: this.getContainerHeight,
                getContentHeight: this.getContentHeight,
                updateScrollbars: this.updateScrollbars
              }
            },
            getInitialState: function () {
              return {
                overflowVisible: !1
              }
            },
            componentDidMount: function () {
              this.context.isNested &&
              (
                window.addEventListener('resize', this.deferredResize),
                this.forceUpdate()
              )
            },
            componentDidUpdate: function () {
              this.log('componentDidUpdate nested=' + this.context.isNested),
              this.context.isNested &&
              (this.resize(), this.context.updateScrollbars())
            },
            componentWillUnmount: function () {
              this.context.isNested &&
              window.removeEventListener('resize', this.deferredResize)
            },
            getContentHeight: function () {
              return this.state.overflowVisible ? this.refs.theview.clientHeight : this.refs.scrollbars.refs.view.scrollHeight
            },
            getContainerHeight: function () {
              return this.state.overflowVisible ? this.refs.theview.clientHeight : this.refs.scrollbars.refs.view.clientHeight
            },
            log: function (e) {
              p &&
              console.log(e)
            },
            updateScrollbars: function () {
              this.refs.scrollbars &&
              (
                this.refs.scrollbars.needsUpdate = !0,
                this.refs.scrollbars.update()
              )
            },
            deferredResize: function () {
              u(this.resize)
            },
            resize: function () {
              this.log('Resize happening'),
              this.log('minHeight ' + this.props.minHeight),
              this.log(
                '(' + this.context.getContentHeight() + ' - ' + this.getContainerHeight() + ') + ' + this.props.minHeight + ' > ' + this.context.getContainerHeight()
              ),
              this.log(
                '(' + this.context.getContentHeight() + ' - ' + this.getContentHeight() + ') + ' + this.props.minHeight + ' <= ' + this.context.getContainerHeight()
              ),
              this.state.overflowVisible &&
              !this.refs.theview ||
              (this.state.overflowVisible || this.refs.scrollbars) &&
              (
                this.context.getContentHeight() - this.getContainerHeight() + this.props.minHeight > this.context.getContainerHeight() ? (
                  this.log('setting overflowVisible to true'),
                  this.state.overflowVisible ||
                  this.setState({
                    overflowVisible: !0
                  })
                ) : this.context.getContentHeight() - this.getContentHeight() + this.props.minHeight <= this.context.getContainerHeight() &&
                (
                  this.log('setting overflowVisible to false'),
                  this.state.overflowVisible &&
                  this.setState({
                    overflowVisible: !1
                  })
                )
              )
            },
            renderTrackVertical: function (e) {
              var t = e.style,
              n = (0, s['default']) (e, [
                'style'
              ]);
              return c.createElement(
                'div',
                (0, i['default']) ({
                }, n, {
                  style: (0, i['default']) ({
                  }, t, {
                    width: 0,
                    top: '2px',
                    right: '2px',
                    bottom: '2px'
                  })
                })
              )
            },
            renderThumbVertical: function (e) {
              var t = e.style,
              n = (0, s['default']) (e, [
                'style'
              ]);
              return c.createElement(
                'div',
                (0, i['default']) ({
                }, n, {
                  style: (0, i['default']) ({
                  }, t, {
                    width: '6px',
                    marginLeft: '-6px',
                    backgroundColor: '#000',
                    opacity: 0.2
                  })
                })
              )
            },
            renderTrackHorizontal: function (e) {
              var t = e.style,
              n = (0, s['default']) (e, [
                'style'
              ]);
              return c.createElement(
                'div',
                (0, i['default']) ({
                }, n, {
                  style: (0, i['default']) ({
                  }, t, {
                    height: 0,
                    right: '2px',
                    bottom: '2px',
                    left: '2px'
                  })
                })
              )
            },
            renderThumbHorizontal: function (e) {
              var t = e.style,
              n = (0, s['default']) (e, [
                'style'
              ]);
              return c.createElement(
                'div',
                (0, i['default']) ({
                }, n, {
                  style: (0, i['default']) ({
                  }, t, {
                    height: '6px',
                    marginTop: '-6px',
                    backgroundColor: '#000',
                    opacity: 0.2
                  })
                })
              )
            },
            render: function () {
              return this.log('Scrollable render, nested = ' + !!this.context.isNested),
              this.state.overflowVisible ? c.createElement(
                'div',
                (0, i['default']) ({
                  ref: 'theview',
                  style: {
                    minHeight: this.props.minHeight
                  }
                }, this.props),
                this.props.children
              ) : c.createElement(
                l,
                (0, i['default']) ({
                  ref: 'scrollbars',
                  renderTrackVertical: this.renderTrackVertical,
                  renderThumbVertical: this.renderThumbVertical,
                  renderTrackHorizontal: this.renderTrackHorizontal,
                  renderThumbHorizontal: this.renderThumbHorizontal,
                  style: {
                    position: 'absolute'
                  }
                }, this.props),
                this.props.children
              )
            }
          });
          e.exports = d
        },
        function (e, t, n) {
          e.exports = {
            'default': n(738),
            __esModule: !0
          }
        },
        function (e, t) {
          function n(e) {
            return !!e &&
            'object' == typeof e
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            var t = l(e);
            if (!t && !s(e)) return i(e);
            var n = o(e),
            r = !!n,
            u = n ||
            [],
            p = u.length;
            for (var d in e) !a(e, d) ||
            r &&
            ('length' == d || c(d, p)) ||
            t &&
            'constructor' == d ||
            u.push(d);
            return u
          }
          var a = n(472),
          i = n(1528),
          o = n(480),
          s = n(112),
          c = n(106),
          l = n(283);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r() {
            a.attachRefs(this, this._currentElement)
          }
          var a = n(1652),
          i = {
            mountComponent: function (e, t, n, a) {
              var i = e.mountComponent(t, n, a);
              return e._currentElement &&
              null != e._currentElement.ref &&
              n.getReactMountReady().enqueue(r, e),
              i
            },
            unmountComponent: function (e) {
              a.detachRefs(e, e._currentElement),
              e.unmountComponent()
            },
            receiveComponent: function (e, t, n, i) {
              var o = e._currentElement;
              if (t !== o || i !== e._context) {
                var s = a.shouldUpdateRefs(o, t);
                s &&
                a.detachRefs(e, o),
                e.receiveComponent(t, n, i),
                s &&
                e._currentElement &&
                null != e._currentElement.ref &&
                n.getReactMountReady().enqueue(r, e)
              }
            },
            performUpdateIfNecessary: function (e, t) {
              e.performUpdateIfNecessary(t)
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            this.dispatchConfig = e,
            this.dispatchMarker = t,
            this.nativeEvent = n;
            var a = this.constructor.Interface;
            for (var i in a) if (a.hasOwnProperty(i)) {
              var s = a[i];
              s ? this[i] = s(n) : 'target' === i ? this.target = r : this[i] = n[i]
            }
            var c = null != n.defaultPrevented ? n.defaultPrevented : n.returnValue === !1;
            c ? this.isDefaultPrevented = o.thatReturnsTrue : this.isDefaultPrevented = o.thatReturnsFalse,
            this.isPropagationStopped = o.thatReturnsFalse
          }
          var a = n(51),
          i = n(7),
          o = n(36),
          s = (
            n(9),
            {
              type: null,
              target: null,
              currentTarget: o.thatReturnsNull,
              eventPhase: null,
              bubbles: null,
              cancelable: null,
              timeStamp: function (e) {
                return e.timeStamp ||
                Date.now()
              },
              defaultPrevented: null,
              isTrusted: null
            }
          );
          i(
            r.prototype,
            {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                (
                  e.preventDefault ? e.preventDefault() : e.returnValue = !1,
                  this.isDefaultPrevented = o.thatReturnsTrue
                )
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                (
                  e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0,
                  this.isPropagationStopped = o.thatReturnsTrue
                )
              },
              persist: function () {
                this.isPersistent = o.thatReturnsTrue
              },
              isPersistent: o.thatReturnsFalse,
              destructor: function () {
                var e = this.constructor.Interface;
                for (var t in e) this[t] = null;
                this.dispatchConfig = null,
                this.dispatchMarker = null,
                this.nativeEvent = null
              }
            }
          ),
          r.Interface = s,
          r.augmentClass = function (e, t) {
            var n = this,
            r = Object.create(n.prototype);
            i(r, e.prototype),
            e.prototype = r,
            e.prototype.constructor = e,
            e.Interface = i({
            }, n.Interface, t),
            e.augmentClass = n.augmentClass,
            a.addPoolingTo(e, a.fourArgumentPooler)
          },
          a.addPoolingTo(r, a.fourArgumentPooler),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a() {
            var e,
            t;
            try {
              e = JSON.parse(window.localStorage.getItem('pamplona-country'))
            } catch (n) {
            }
            if (t = e && f(d.countries, function (t) {
              return t.id === e
            })) return t;
            var r,
            a,
            i = navigator.language ||
            navigator.userLanguage;
            return i &&
            (
              i = i.toLowerCase(),
              r = d.languageCountryMapping[i] ||
              d.shortCountryMapping[i],
              r &&
              (a = f(d.countries, function (e) {
                return e.id === r
              }))
            ),
            a ? a : f(d.countries, function (e) {
              return e.id === d.defaultCountry
            })
          }
          var i,
          o,
          s,
          c = n(39),
          l = r(c),
          u = n(55),
          p = r(u),
          d = n(136),
          f = n(16);
          e.exports = {
            init: function (e) {
              var t;
              return e &&
              (
                t = f(
                  d.countries,
                  function (t) {
                    return t.pulseLanguage ? t.pulseLanguage === e : t.language === e
                  }
                )
              ),
              i = t ||
              a(),
              new p['default'](
                function (e, t) {
                  var r = function (t, n) {
                    o = t,
                    s = n,
                    e()
                  },
                  a = i.language;
                  switch (a) {
                    case 'de_DE':
                      n.e(
                        12,
                        function (e) {
                          var t = [
                            e(1486),
                            e(1490)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'es_ES':
                      n.e(
                        10,
                        function (e) {
                          var t = [
                            e(1488),
                            e(1492)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'fr_FR':
                      n.e(
                        9,
                        function (e) {
                          var t = [
                            e(1489),
                            e(1493)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'it_IT':
                      n.e(
                        8,
                        function (e) {
                          var t = [
                            e(1500),
                            e(1494)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'ja_JP':
                      n.e(
                        7,
                        function (e) {
                          var t = [
                            e(1501),
                            e(1495)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'pl_PL':
                      n.e(
                        6,
                        function (e) {
                          var t = [
                            e(1502),
                            e(1496)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'pt_BR':
                      n.e(
                        5,
                        function (e) {
                          var t = [
                            e(1503),
                            e(1497)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'ru_RU':
                      n.e(
                        4,
                        function (e) {
                          var t = [
                            e(1504),
                            e(1498)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'zh_TW':
                      n.e(
                        3,
                        function (e) {
                          var t = [
                            e(1505),
                            e(1499)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      );
                      break;
                    case 'en_US':
                    default:
                      n.e(
                        11,
                        function (e) {
                          var t = [
                            e(1487),
                            e(1491)
                          ];
                          r.apply(null, t)
                        }.bind(this)
                      )
                  }
                }
              )
            },
            setCountry: function (e) {
              window.localStorage.setItem('pamplona-country', (0, l['default']) (e)),
              window.location.reload()
            },
            getCountry: function () {
              return i
            },
            getCMSLanguage: function () {
              return i.cmsLanguage
            },
            getCMSRegion: function () {
              return i.cmsRegion
            },
            getValidLanguages: function () {
              return d.countries.map(function (e) {
                return e.pulseLanguage ||
                e.language
              })
            },
            translate: function (e) {
              return o &&
              o[e] ||
              s &&
              s[e] ||
              e
            }
          }
        },
        function (e, t, n) {
          (
            function (e) {
              'use strict';
              function r(e) {
                var t;
                return t = e &&
                s(
                  c,
                  function (t) {
                    return t.old.toLowerCase() === e.name.toLowerCase()
                  }
                ) &&
                - 1 !== l.indexOf(e.rank) ? n(1726) (
                  './' + s(
                    c,
                    function (t) {
                      return t.old.toLowerCase() === e.name.toLowerCase()
                    }
                  ) ['new'] + '-' + e.rank + '.png'
                ) : n(357)
              }
              function a(e) {
                var t;
                switch (e) {
                  case 'TimeTrial':
                    t = 'timeTrial_outline';
                    break;
                  case 'ReachThis':
                    t = 'reachThis_outline';
                    break;
                  case 'RunnersRoute':
                    t = 'runnersRoute_outline';
                    break;
                  case 'HackableBillboard':
                    t = 'billboardHack_outline';
                    break;
                  case 'Mission':
                    t = 'missionMain_outline';
                    break;
                  case 'UnselectedMission':
                    t = 'missionMain_unselected';
                    break;
                  default:
                    t = 'safeHouse_outline'
                }
                return n(1727) ('./' + t + '.png')
              }
              function i(t) {
                if (t.name) {
                  var n;
                  switch (t.rank) {
                    case 1:
                      n = 'I';
                      break;
                    case 2:
                      n = 'II';
                      break;
                    case 3:
                      n = 'III';
                      break;
                    case 4:
                      n = 'IV';
                      break;
                    case 5:
                      n = 'V';
                      break;
                    default:
                      n = 'I'
                  }
                  var r;
                  switch (t.name.toLowerCase()) {
                    case 'red':
                      r = 'ID_SGM_DIVISION1';
                      break;
                    case 'gold':
                    case 'black':
                      r = 'ID_SGM_DIVISION2';
                      break;
                    case 'silver':
                      r = 'ID_SGM_DIVISION3';
                      break;
                    case 'bronze':
                    case 'glass':
                      r = 'ID_SGM_DIVISION4';
                      break;
                    case 'copper':
                    default:
                      r = 'ID_SGM_DIVISION5'
                  }
                  return o(e(r), [
                    n
                  ])
                }
              }
              var o = n(135),
              s = n(16),
              c = [
                {
                  old: 'Copper',
                  'new': 'white'
                },
                {
                  old: 'Bronze',
                  'new': 'glass'
                },
                {
                  old: 'Silver',
                  'new': 'silver'
                },
                {
                  old: 'Gold',
                  'new': 'black'
                },
                {
                  old: 'RED',
                  'new': 'red'
                }
              ],
              l = [
                5,
                4,
                3,
                2,
                1
              ];
              t.generateRank = i,
              t.divisionImage = r,
              t.divisions = c,
              t.divisionLevels = l,
              t.challenge = a
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(19),
              i = n(67),
              o = n(659),
              s = n(37),
              c = n(61),
              l = n(20),
              u = n(31),
              p = n(17),
              d = n(4);
              n(781);
              var f = r.createClass({
                displayName: 'Row',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                onClick: function (e) {
                  e.preventDefault(),
                  void 0 !== this.props.leaderboardInfo.reporting &&
                  this.props.leaderboardInfo.reporting.value ? this.props.leaderboardInfo.reporting.func(this.props.player.personaId, this.getUgcId()) : u.navigateStacked(
                    this.context.depth + 1,
                    'profile',
                    {
                      platform: this.props.leaderboardInfo.platform,
                      id: this.props.player.personaId
                    }
                  )
                },
                render: function () {
                  var e;
                  'overview' !== this.props.leaderboardInfo.leaderboardType &&
                  (
                    e = r.createElement('div', {
                      className: 'lb-position'
                    }, this.props.player.position)
                  );
                  var t;
                  t = 'reachThis' === this.props.leaderboardInfo.challengeType ? r.createElement(
                    'div',
                    {
                      className: 'lb-time'
                    },
                    s.formatTimeStamp(this.props.player.score)
                  ) : r.createElement(
                    'div',
                    {
                      className: 'lb-time'
                    },
                    s.challengeScoreToRunTime(this.props.player.score)
                  );
                  var i;
                  this.props.leaderboardInfo.starThresholds &&
                  (
                    i = r.createElement(
                      'div',
                      {
                        className: 'lb-stars'
                      },
                      r.createElement(
                        o,
                        {
                          player: this.props.player,
                          starThresholds: this.props.leaderboardInfo.starThresholds
                        }
                      )
                    )
                  );
                  var u,
                  f = p.getLocation(this.props.player.personaId);
                  if (f && f.length && f[0] && null !== f[0].cc) try {
                    u = r.createElement(
                      'div',
                      {
                        className: 'lb-country'
                      },
                      r.createElement('img', {
                        src: n(308) ('./' + f[0].cc + '.png')
                      })
                    )
                  } catch (m) {
                    u = r.createElement('div', {
                      className: 'lb-country'
                    }, ' ')
                  } else u = r.createElement('div', {
                    className: 'lb-country'
                  }, ' ');
                  var h = a(
                    'leaderboard-row',
                    {
                      player: this.props.player.personaId === d.getCurrentPersonaId(),
                      reporting: this.props.leaderboardInfo.reporting &&
                      'temp' === this.props.leaderboardInfo.reporting.value,
                      leader: 'overview' === this.props.leaderboardInfo.leaderboardType &&
                      this.props.leaderboardInfo.leader &&
                      this.props.player.personaId === this.props.leaderboardInfo.leader.personaId
                    }
                  );
                  return r.createElement(
                    l,
                    {
                      to: 'profile',
                      params: {
                        platform: this.props.leaderboardInfo.platform,
                        id: this.props.player.personaId
                      },
                      onClick: this.onClick,
                      className: h
                    },
                    e,
                    t,
                    r.createElement(
                      'div',
                      {
                        className: 'lb-division'
                      },
                      r.createElement(
                        'img',
                        {
                          src: c.divisionImage(this.props.player.division),
                          alt: ''
                        }
                      )
                    ),
                    r.createElement('div', {
                      className: 'lb-name'
                    }, this.props.player.name),
                    i,
                    u
                  )
                }
              }),
              m = function (e, t, n) {
                return r.createElement(f, {
                  player: t,
                  leaderboardInfo: e,
                  key: 'Row' + n
                })
              },
              h = r.createClass({
                displayName: 'LeaderboardList',
                render: function () {
                  var e = this;
                  if ('NoLocation' === this.props.leaderboardInfo.leaderboard) return r.createElement(
                    'div',
                    {
                      className: 'noFriends'
                    },
                    t('ID_WEB_LEADERBOARD_NOLOCATION')
                  );
                  if (this.props.leaderboardInfo.leader) {
                    var n;
                    'overview' === this.props.leaderboardInfo.leaderboardType &&
                    (
                      n = this.props.leaderboardInfo.leader ? m(
                        this.props.leaderboardInfo,
                        this.props.leaderboardInfo.leader,
                        0
                      ) : null
                    );
                    var a = this.props.leaderboardInfo.leaderboard.users;
                    return null != this.props.leaderboardInfo.limit &&
                    (a = a.slice(0, this.props.leaderboardInfo.limit)),
                    r.createElement(
                      'div',
                      {
                        className: 'leaderboard-rows'
                      },
                      n,
                      a.map(
                        function (t, n) {
                          return 'overview' === e.props.leaderboardInfo.leaderboardType &&
                          i(t, e.props.leaderboardInfo.leader) ? void 0 : m(e.props.leaderboardInfo, t, n)
                        }
                      )
                    )
                  }
                  return r.createElement(
                    'div',
                    {
                      className: 'leaderboard-rows'
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'no-friends'
                      },
                      t('ID_WEB_LEADERBOARD_NOTIMES')
                    )
                  )
                }
              }),
              _ = r.createClass({
                displayName: 'LeaderboardCreator',
                render: function () {
                  return this.props.info.reporting = this.props.reporting,
                  r.createElement(h, {
                    leaderboardInfo: this.props.info
                  })
                }
              });
              e.exports = _
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          var r = n(96);
          e.exports = function (e) {
            if (!r(e)) throw TypeError(e + ' is not an object!');
            return e
          }
        },
        function (e, t, n) {
          var r = n(65),
          a = n(47),
          i = r(a, 'Map');
          e.exports = i
        },
        function (e, t, n) {
          function r(e, t) {
            var n = e[t];
            return a(n) ? n : void 0
          }
          var a = n(1593);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            var t = typeof e;
            return 'string' == t ||
            'number' == t ||
            'symbol' == t ||
            'boolean' == t ? '__proto__' !== e : null === e
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return a(e, t)
          }
          var a = n(279);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          e.exports = n(292)
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            return (e & t) === t
          }
          var a = n(5),
          i = {
            MUST_USE_ATTRIBUTE: 1,
            MUST_USE_PROPERTY: 2,
            HAS_SIDE_EFFECTS: 4,
            HAS_BOOLEAN_VALUE: 8,
            HAS_NUMERIC_VALUE: 16,
            HAS_POSITIVE_NUMERIC_VALUE: 48,
            HAS_OVERLOADED_BOOLEAN_VALUE: 64,
            injectDOMPropertyConfig: function (e) {
              var t = i,
              n = e.Properties ||
              {
              },
              o = e.DOMAttributeNamespaces ||
              {
              },
              c = e.DOMAttributeNames ||
              {
              },
              l = e.DOMPropertyNames ||
              {
              },
              u = e.DOMMutationMethods ||
              {
              };
              e.isCustomAttribute &&
              s._isCustomAttributeFunctions.push(e.isCustomAttribute);
              for (var p in n) {
                s.properties.hasOwnProperty(p) ? a(!1) : void 0;
                var d = p.toLowerCase(),
                f = n[p],
                m = {
                  attributeName: d,
                  attributeNamespace: null,
                  propertyName: p,
                  mutationMethod: null,
                  mustUseAttribute: r(f, t.MUST_USE_ATTRIBUTE),
                  mustUseProperty: r(f, t.MUST_USE_PROPERTY),
                  hasSideEffects: r(f, t.HAS_SIDE_EFFECTS),
                  hasBooleanValue: r(f, t.HAS_BOOLEAN_VALUE),
                  hasNumericValue: r(f, t.HAS_NUMERIC_VALUE),
                  hasPositiveNumericValue: r(f, t.HAS_POSITIVE_NUMERIC_VALUE),
                  hasOverloadedBooleanValue: r(f, t.HAS_OVERLOADED_BOOLEAN_VALUE)
                };
                if (
                  m.mustUseAttribute &&
                  m.mustUseProperty ? a(!1) : void 0,
                  !m.mustUseProperty &&
                  m.hasSideEffects ? a(!1) : void 0,
                  m.hasBooleanValue + m.hasNumericValue + m.hasOverloadedBooleanValue <= 1 ? void 0 : a(!1),
                  c.hasOwnProperty(p)
                ) {
                  var h = c[p];
                  m.attributeName = h
                }
                o.hasOwnProperty(p) &&
                (m.attributeNamespace = o[p]),
                l.hasOwnProperty(p) &&
                (m.propertyName = l[p]),
                u.hasOwnProperty(p) &&
                (m.mutationMethod = u[p]),
                s.properties[p] = m
              }
            }
          },
          o = {},
          s = {
            ID_ATTRIBUTE_NAME: 'data-reactid',
            properties: {
            },
            getPossibleStandardName: null,
            _isCustomAttributeFunctions: [],
            isCustomAttribute: function (e) {
              for (var t = 0; t < s._isCustomAttributeFunctions.length; t++) {
                var n = s._isCustomAttributeFunctions[t];
                if (n(e)) return !0
              }
              return !1
            },
            getDefaultValueForProperty: function (e, t) {
              var n,
              r = o[e];
              return r ||
              (o[e] = r = {}),
              t in r ||
              (n = document.createElement(e), r[t] = n[t]),
              r[t]
            },
            injection: i
          };
          e.exports = s
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return f + e.toString(36)
          }
          function a(e, t) {
            return e.charAt(t) === f ||
            t === e.length
          }
          function i(e) {
            return '' === e ||
            e.charAt(0) === f &&
            e.charAt(e.length - 1) !== f
          }
          function o(e, t) {
            return 0 === t.indexOf(e) &&
            a(t, e.length)
          }
          function s(e) {
            return e ? e.substr(0, e.lastIndexOf(f)) : ''
          }
          function c(e, t) {
            if (i(e) && i(t) ? void 0 : d(!1), o(e, t) ? void 0 : d(!1), e === t) return e;
            var n,
            r = e.length + m;
            for (n = r; n < t.length && !a(t, n); n++);
            return t.substr(0, n)
          }
          function l(e, t) {
            var n = Math.min(e.length, t.length);
            if (0 === n) return '';
            for (var r = 0, o = 0; n >= o; o++) if (a(e, o) && a(t, o)) r = o;
             else if (e.charAt(o) !== t.charAt(o)) break;
            var s = e.substr(0, r);
            return i(s) ? void 0 : d(!1),
            s
          }
          function u(e, t, n, r, a, i) {
            e = e ||
            '',
            t = t ||
            '',
            e === t ? d(!1) : void 0;
            var l = o(t, e);
            l ||
            o(e, t) ? void 0 : d(!1);
            for (var u = 0, p = l ? s : c, f = e; ; f = p(f, t)) {
              var m;
              if (a && f === e || i && f === t || (m = n(f, l, r)), m === !1 || f === t) break;
              u++ < h ? void 0 : d(!1)
            }
          }
          var p = n(514),
          d = n(5),
          f = '.',
          m = f.length,
          h = 10000,
          _ = {
            createReactRootID: function () {
              return r(p.createReactRootIndex())
            },
            createReactID: function (e, t) {
              return e + t
            },
            getReactRootIDFromNodeID: function (e) {
              if (e && e.charAt(0) === f && e.length > 1) {
                var t = e.indexOf(f, 1);
                return t > - 1 ? e.substr(0, t) : e
              }
              return null
            },
            traverseEnterLeave: function (e, t, n, r, a) {
              var i = l(e, t);
              i !== e &&
              u(e, i, n, r, !1, !0),
              i !== t &&
              u(i, t, n, a, !0, !1)
            },
            traverseTwoPhase: function (e, t, n) {
              e &&
              (u('', e, t, n, !0, !1), u(e, '', t, n, !1, !0))
            },
            traverseTwoPhaseSkipTarget: function (e, t, n) {
              e &&
              (u('', e, t, n, !0, !0), u(e, '', t, n, !0, !0))
            },
            traverseAncestors: function (e, t, n) {
              u('', e, t, n, !0, !1)
            },
            getFirstCommonAncestorID: l,
            _getNextDescendantID: c,
            isAncestorIDOf: o,
            SEPARATOR: f
          };
          e.exports = _
        },
        21,
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = n(15),
          o = {
            showLogin: function () {
              r.handleViewAction({
                type: a.ORIGIN_SHOW_LOGIN
              })
            },
            hideLogin: function () {
              r.handleViewAction({
                type: a.ORIGIN_HIDE_LOGIN
              })
            },
            showLogout: function () {
              r.handleViewAction({
                type: a.ORIGIN_SHOW_LOGOUT
              })
            },
            hideLogout: function () {
              r.handleViewAction({
                type: a.ORIGIN_HIDE_LOGOUT
              })
            },
            acceptToS: function () {
              r.handleViewAction({
                type: a.ORIGIN_ACCEPT_TOS
              }),
              i.setAcceptedToSFlag(!0)
            },
            setGuest: function (e) {
              r.handleViewAction({
                type: a.ORIGIN_SET_GUEST,
                data: e
              })
            }
          };
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            loginAsGuest: function () {
              r.handleViewAction({
                type: a.SESSION_LOGIN_GUEST
              })
            },
            logoutAsGuest: function () {
              r.handleViewAction({
                type: a.SESSION_LOGOUT_GUEST
              })
            },
            acceptSharing: function () {
              r.handleViewAction({
                type: a.SESSION_ACCEPT_SHARING
              })
            },
            dismissWelcome: function () {
              r.handleViewAction({
                type: a.SESSION_DISMISS_WELCOME
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(2);
          n(780);
          var a = r.createClass({
            displayName: 'ButtonCreator',
            getInitialState: function () {
              return {
                visible: !1
              }
            },
            clicked: function (e, t, n) {
              n.target.blur(),
              e(parseInt(t, 10))
            },
            renderButtons: function () {
              return this.props.buttons.map(
                function (e, t) {
                  var n,
                  a,
                  i = t === this.props.selected ||
                  e.key === this.props.selected ? 'button selected' : 'button';
                  return a = 'button selected' === i,
                  e.menu &&
                  (
                    n = r.createElement(
                      'ul',
                      {
                        className: 'menu ' + a
                      },
                      e.menu.map(
                        function (e, t) {
                          return r.createElement('li', {
                            key: 'item' + t,
                            onClick: e.event
                          }, e.name)
                        }
                      )
                    )
                  ),
                  r.createElement(
                    'div',
                    {
                      key: 'button' + t,
                      className: 'buttonHolder'
                    },
                    n,
                    r.createElement(
                      'button',
                      {
                        className: i,
                        type: 'button',
                        onClick: this.clicked.bind(this, e.event, t)
                      },
                      e.name
                    )
                  )
                }.bind(this)
              )
            },
            render: function () {
              var e = this.renderButtons();
              return r.createElement('div', {
                className: 'buttonContainer'
              }, e)
            }
          });
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(93),
          i = r(a),
          o = n(2),
          s = n(68),
          c = n(67),
          l = o.createClass({
            displayName: 'EmblemCreator',
            componentDidMount: function () {
              this.drawCanvas()
            },
            shouldComponentUpdate: function (e, t) {
              return !c(this.props.emblem, e.emblem)
            },
            componentDidUpdate: function () {
              this.drawCanvas()
            },
            getSources: function () {
              var e = {
                frame: n(311) ('./' + this.props.emblem.frame.source + '.png'),
                detail: n(310) ('./' + this.props.emblem.detail.source + '.png'),
                detailMask: n(531) ('./' + this.props.emblem.detail.source + '.png')
              };
              return this.props.emblem.bg.source &&
              (e.bg = n(309) ('./' + this.props.emblem.bg.source + '.jpg')),
              e
            },
            createFrame: function (e, t, n, r) {
              var a = document.createElement('canvas');
              a.width = n,
              a.height = r;
              var i = a.getContext('2d');
              return i.drawImage(e, 0, 0),
              i.globalCompositeOperation = 'destination-out',
              i.drawImage(t, 0, 0),
              a
            },
            createDetail: function (e, t, n) {
              var r = document.createElement('canvas');
              r.width = t,
              r.height = n;
              var a = r.getContext('2d');
              return a.drawImage(e, 0, 0),
              r
            },
            drawCanvas: function () {
              var e = this,
              t = s.findDOMNode(this).getContext('2d'),
              n = this;
              this.loadImages(
                this.getSources(),
                function (r) {
                  var a,
                  i;
                  if (
                    e.props.emblem.bg.source ? (
                      a = e.props.emblem.bg.size.width / r.bg.width,
                      i = {
                        width: e.props.emblem.bg.size.width,
                        height: r.bg.height * a
                      }
                    ) : i = {
                      width: e.props.emblem.bg.size.width,
                      height: e.props.emblem.bg.size.height
                    },
                    t.clearRect(0, 0, i.width, i.height),
                    t.globalCompositeOperation = 'source-over',
                    t.drawImage(
                      n.createFrame(r.frame, r.detailMask, r.frame.width, r.frame.height),
                      0,
                      0,
                      r.frame.width,
                      r.frame.height,
                      e.props.emblem.frame.margin.left,
                      e.props.emblem.frame.margin.top,
                      e.props.emblem.frame.size.width,
                      e.props.emblem.frame.size.height
                    ),
                    t.globalCompositeOperation = 'destination-over',
                    t.drawImage(
                      n.createDetail(r.detail, r.detail.width, r.detail.height),
                      0,
                      0,
                      r.detail.width,
                      r.detail.height,
                      n.props.emblem.detail.margin.left,
                      n.props.emblem.detail.margin.top,
                      n.props.emblem.detail.size.width,
                      n.props.emblem.detail.size.height
                    ),
                    e.props.emblem.bg.source
                  ) {
                    var o = {
                      x: 0,
                      y: - (r.bg.height * a - e.props.emblem.bg.size.height) / 2
                    };
                    t.globalCompositeOperation = 'destination-over',
                    t.drawImage(r.bg, o.x, o.y, i.width, i.height)
                  }
                }
              )
            },
            loadImages: function (e, t) {
              var n = {},
              r = 0,
              a = (0, i['default']) (e).length,
              o = function () {
                ++r >= a &&
                t(n)
              };
              for (var s in e) n[s] = new Image,
              n[s].onload = o,
              n[s].src = e[s]
            },
            render: function () {
              return o.createElement(
                'canvas',
                {
                  width: this.props.emblem.bg.size.width,
                  height: this.props.emblem.bg.size.height,
                  className: 'player-icon'
                }
              )
            }
          });
          e.exports = l
        },
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return l(h, function (t) {
              return t.id === e
            })
          }
          function i(e, t) {
            e.forEach(
              function (e, n) {
                var r,
                i = e.id ||
                e.meta &&
                e.meta.id ||
                t[n],
                o = (0, c['default']) ({
                }, e);
                r = e.meta ? e.meta : l(m, function (e) {
                  return e.id === i
                });
                var s = a(i);
                s ? (0, c['default']) (s, o, {
                  id: i,
                  meta: r
                }) : (
                  o = (0, c['default']) ({
                  }, o, {
                    id: i,
                    meta: r
                  }),
                  h.push((0, c['default']) ({
                  }, o))
                )
              }
            )
          }
          function o() {
            var e = [],
            t = [];
            m.forEach(function (n) {
              e.push({
                meta: n
              }),
              t.push({
                id: n.id
              })
            }),
            i(e, t)
          }
          var s = n(3),
          c = r(s),
          l = n(16),
          u = n(12),
          p = n(6).ActionTypes,
          d = n(10),
          f = n(14),
          m = n(453),
          h = [],
          _ = (0, c['default']) ({
          }, u, {
            getAll: function () {
              return h
            },
            get: function (e) {
              return a(e)
            },
            getName: function (e) {
              var t = a(e);
              return t ? t.meta.displayName : null
            }
          });
          _.dispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case p.APP_START:
                  o(),
                  _.emitChange()
              }
            }
          ),
          _.gatewayDispatchToken = f.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getHackableBillboardFriendsLeaderboard':
                  var n = {
                    hack: {
                      leader: t.data.leaderboard.users[0]
                    }
                  };
                  i([n], [
                    t.params.challengeId
                  ]),
                  _.emitChange();
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  o(),
                  _.emitChange()
              }
            }
          ),
          e.exports = _
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return h[e]
          }
          function i(e) {
            (0, p['default']) (h, e),
            s()
          }
          function o() {
            var e = JSON.parse(localStorage.getItem('pamplona-settings') || null);
            e &&
            (0, p['default']) (h, e)
          }
          function s() {
            localStorage.setItem('pamplona-settings', (0, l['default']) (h))
          }
          var c = n(39),
          l = r(c),
          u = n(3),
          p = r(u),
          d = n(12),
          f = n(10),
          m = n(6).ActionTypes,
          h = {
            sounds: !0,
            pushNotifications: !0,
            telemetry: !0
          },
          _ = (0, p['default']) ({
          }, d, {
            getAll: function () {
              return o(),
              h
            },
            get: function (e) {
              return a(e)
            },
            set: function (e) {
              i(e)
            }
          });
          _.dispatchToken = f.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case m.APP_START:
                  o(),
                  _.emitChange();
                  break;
                case m.SETTINGS_SET:
                  i(t.settings),
                  _.emitChange()
              }
            }
          ),
          e.exports = _
        },
        function (e, t) {
          var n = {}.toString;
          e.exports = function (e) {
            return n.call(e).slice(8, - 1)
          }
        },
        function (e, t, n) {
          var r = n(144);
          e.exports = function (e, t, n) {
            if (r(e), void 0 === t) return e;
            switch (n) {
              case 1:
                return function (n) {
                  return e.call(t, n)
                };
              case 2:
                return function (n, r) {
                  return e.call(t, n, r)
                };
              case 3:
                return function (n, r, a) {
                  return e.call(t, n, r, a)
                }
            }
            return function () {
              return e.apply(t, arguments)
            }
          }
        },
        function (e, t, n) {
          var r = n(46),
          a = n(40),
          i = n(80),
          o = 'prototype',
          s = function (e, t, n) {
            var c,
            l,
            u,
            p = e & s.F,
            d = e & s.G,
            f = e & s.S,
            m = e & s.P,
            h = e & s.B,
            _ = e & s.W,
            g = d ? a : a[t] ||
            (a[t] = {}),
            v = d ? r : f ? r[t] : (r[t] || {
            }) [o];
            d &&
            (n = t);
            for (c in n) l = !p &&
            v &&
            c in v,
            l &&
            c in g ||
            (
              u = l ? v[c] : n[c],
              g[c] = d &&
              'function' != typeof v[c] ? n[c] : h &&
              l ? i(u, r) : _ &&
              v[c] == u ? function (e) {
                var t = function (t) {
                  return this instanceof e ? new e(t) : e(t)
                };
                return t[o] = e[o],
                t
              }(u) : m &&
              'function' == typeof u ? i(Function.call, u) : u,
              m &&
              ((g[o] || (g[o] = {})) [c] = u)
            )
          };
          s.F = 1,
          s.G = 2,
          s.S = 4,
          s.P = 8,
          s.B = 16,
          s.W = 32,
          e.exports = s
        },
        function (e, t) {
          e.exports = {}
        },
        function (e, t, n) {
          function r(e) {
            return 'function' == typeof e ? e : null == e ? o : 'object' == typeof e ? s(e) ? i(e[0], e[1]) : a(e) : c(e)
          }
          var a = n(1530),
          i = n(1531),
          o = n(1591),
          s = n(25),
          c = n(1598);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            if ('string' == typeof e || a(e)) return e;
            var t = e + '';
            return '0' == t &&
            1 / e == - i ? '-0' : t
          }
          var a = n(116),
          i = 1 / 0;
          e.exports = r
        },
        function (e, t, n) {
          e.exports = n(1633)
        },
        function (e, t, n) {
          'use strict';
          var r = n(495),
          a = n(1629),
          i = n(507),
          o = n(516),
          s = n(518),
          c = n(5),
          l = (n(9), {
          }),
          u = null,
          p = function (e, t) {
            e &&
            (
              a.executeDispatchesInOrder(e, t),
              e.isPersistent() ||
              e.constructor.release(e)
            )
          },
          d = function (e) {
            return p(e, !0)
          },
          f = function (e) {
            return p(e, !1)
          },
          m = null,
          h = {
            injection: {
              injectMount: a.injection.injectMount,
              injectInstanceHandle: function (e) {
                m = e
              },
              getInstanceHandle: function () {
                return m
              },
              injectEventPluginOrder: r.injectEventPluginOrder,
              injectEventPluginsByName: r.injectEventPluginsByName
            },
            eventNameDispatchConfigs: r.eventNameDispatchConfigs,
            registrationNameModules: r.registrationNameModules,
            putListener: function (e, t, n) {
              'function' != typeof n ? c(!1) : void 0;
              var a = l[t] ||
              (l[t] = {});
              a[e] = n;
              var i = r.registrationNameModules[t];
              i &&
              i.didPutListener &&
              i.didPutListener(e, t, n)
            },
            getListener: function (e, t) {
              var n = l[t];
              return n &&
              n[e]
            },
            deleteListener: function (e, t) {
              var n = r.registrationNameModules[t];
              n &&
              n.willDeleteListener &&
              n.willDeleteListener(e, t);
              var a = l[t];
              a &&
              delete a[e]
            },
            deleteAllListeners: function (e) {
              for (var t in l) if (l[t][e]) {
                var n = r.registrationNameModules[t];
                n &&
                n.willDeleteListener &&
                n.willDeleteListener(e, t),
                delete l[t][e]
              }
            },
            extractEvents: function (e, t, n, a, i) {
              for (var s, c = r.plugins, l = 0; l < c.length; l++) {
                var u = c[l];
                if (u) {
                  var p = u.extractEvents(e, t, n, a, i);
                  p &&
                  (s = o(s, p))
                }
              }
              return s
            },
            enqueueEvents: function (e) {
              e &&
              (u = o(u, e))
            },
            processEventQueue: function (e) {
              var t = u;
              u = null,
              e ? s(t, d) : s(t, f),
              u ? c(!1) : void 0,
              i.rethrowCaughtError()
            },
            __purge: function () {
              l = {}
            },
            __getListenerBank: function () {
              return l
            }
          };
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            var r = t.dispatchConfig.phasedRegistrationNames[n];
            return v(e, r)
          }
          function a(e, t, n) {
            var a = t ? g.bubbled : g.captured,
            i = r(e, n, a);
            i &&
            (
              n._dispatchListeners = h(n._dispatchListeners, i),
              n._dispatchIDs = h(n._dispatchIDs, e)
            )
          }
          function i(e) {
            e &&
            e.dispatchConfig.phasedRegistrationNames &&
            m.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker, a, e)
          }
          function o(e) {
            e &&
            e.dispatchConfig.phasedRegistrationNames &&
            m.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(e.dispatchMarker, a, e)
          }
          function s(e, t, n) {
            if (n && n.dispatchConfig.registrationName) {
              var r = n.dispatchConfig.registrationName,
              a = v(e, r);
              a &&
              (
                n._dispatchListeners = h(n._dispatchListeners, a),
                n._dispatchIDs = h(n._dispatchIDs, e)
              )
            }
          }
          function c(e) {
            e &&
            e.dispatchConfig.registrationName &&
            s(e.dispatchMarker, null, e)
          }
          function l(e) {
            _(e, i)
          }
          function u(e) {
            _(e, o)
          }
          function p(e, t, n, r) {
            m.injection.getInstanceHandle().traverseEnterLeave(n, r, s, e, t)
          }
          function d(e) {
            _(e, c)
          }
          var f = n(48),
          m = n(86),
          h = (n(9), n(516)),
          _ = n(518),
          g = f.PropagationPhases,
          v = m.getListener,
          E = {
            accumulateTwoPhaseDispatches: l,
            accumulateTwoPhaseDispatchesSkipTarget: u,
            accumulateDirectDispatches: d,
            accumulateEnterLeaveDispatches: p
          };
          e.exports = E
        },
        function (e, t) {
          'use strict';
          var n = {
            remove: function (e) {
              e._reactInternalInstance = void 0
            },
            get: function (e) {
              return e._reactInternalInstance
            },
            has: function (e) {
              return void 0 !== e._reactInternalInstance
            },
            set: function (e, t) {
              e._reactInternalInstance = t
            }
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(59),
          i = n(299),
          o = {
            view: function (e) {
              if (e.view) return e.view;
              var t = i(e);
              if (null != t && t.window === t) return t;
              var n = t.ownerDocument;
              return n ? n.defaultView ||
              n.parentWindow : window
            },
            detail: function (e) {
              return e.detail ||
              0
            }
          };
          a.augmentClass(r, o),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = {};
          e.exports = r
        },
        function (e, t) {
          function n() {
            this._events = this._events ||
            {
            },
            this._maxListeners = this._maxListeners ||
            void 0
          }
          function r(e) {
            return 'function' == typeof e
          }
          function a(e) {
            return 'number' == typeof e
          }
          function i(e) {
            return 'object' == typeof e &&
            null !== e
          }
          function o(e) {
            return void 0 === e
          }
          e.exports = n,
          n.EventEmitter = n,
          n.prototype._events = void 0,
          n.prototype._maxListeners = void 0,
          n.defaultMaxListeners = 10,
          n.prototype.setMaxListeners = function (e) {
            if (!a(e) || 0 > e || isNaN(e)) throw TypeError('n must be a positive number');
            return this._maxListeners = e,
            this
          },
          n.prototype.emit = function (e) {
            var t,
            n,
            a,
            s,
            c,
            l;
            if (
              this._events ||
              (this._events = {}),
              'error' === e &&
              (
                !this._events.error ||
                i(this._events.error) &&
                !this._events.error.length
              )
            ) {
              if (t = arguments[1], t instanceof Error) throw t;
              throw TypeError('Uncaught, unspecified "error" event.')
            }
            if (n = this._events[e], o(n)) return !1;
            if (r(n)) switch (arguments.length) {
              case 1:
                n.call(this);
                break;
              case 2:
                n.call(this, arguments[1]);
                break;
              case 3:
                n.call(this, arguments[1], arguments[2]);
                break;
              default:
                s = Array.prototype.slice.call(arguments, 1),
                n.apply(this, s)
            } else if (i(n)) for (
              s = Array.prototype.slice.call(arguments, 1),
              l = n.slice(),
              a = l.length,
              c = 0;
              a > c;
              c++
            ) l[c].apply(this, s);
            return !0
          },
          n.prototype.addListener = function (e, t) {
            var a;
            if (!r(t)) throw TypeError('listener must be a function');
            return this._events ||
            (this._events = {}),
            this._events.newListener &&
            this.emit('newListener', e, r(t.listener) ? t.listener : t),
            this._events[e] ? i(this._events[e]) ? this._events[e].push(t) : this._events[e] = [
              this._events[e],
              t
            ] : this._events[e] = t,
            i(this._events[e]) &&
            !this._events[e].warned &&
            (
              a = o(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners,
              a &&
              a > 0 &&
              this._events[e].length > a &&
              (
                this._events[e].warned = !0,
                console.error(
                  '(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.',
                  this._events[e].length
                ),
                'function' == typeof console.trace &&
                console.trace()
              )
            ),
            this
          },
          n.prototype.on = n.prototype.addListener,
          n.prototype.once = function (e, t) {
            function n() {
              this.removeListener(e, n),
              a ||
              (a = !0, t.apply(this, arguments))
            }
            if (!r(t)) throw TypeError('listener must be a function');
            var a = !1;
            return n.listener = t,
            this.on(e, n),
            this
          },
          n.prototype.removeListener = function (e, t) {
            var n,
            a,
            o,
            s;
            if (!r(t)) throw TypeError('listener must be a function');
            if (!this._events || !this._events[e]) return this;
            if (
              n = this._events[e],
              o = n.length,
              a = - 1,
              n === t ||
              r(n.listener) &&
              n.listener === t
            ) delete this._events[e],
            this._events.removeListener &&
            this.emit('removeListener', e, t);
             else if (i(n)) {
              for (s = o; s-- > 0; ) if (n[s] === t || n[s].listener && n[s].listener === t) {
                a = s;
                break
              }
              if (0 > a) return this;
              1 === n.length ? (n.length = 0, delete this._events[e]) : n.splice(a, 1),
              this._events.removeListener &&
              this.emit('removeListener', e, t)
            }
            return this
          },
          n.prototype.removeAllListeners = function (e) {
            var t,
            n;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {}
             : this._events[e] &&
            delete this._events[e],
            this;
            if (0 === arguments.length) {
              for (t in this._events) 'removeListener' !== t &&
              this.removeAllListeners(t);
              return this.removeAllListeners('removeListener'),
              this._events = {},
              this
            }
            if (n = this._events[e], r(n)) this.removeListener(e, n);
             else if (n) for (; n.length; ) this.removeListener(e, n[n.length - 1]);
            return delete this._events[e],
            this
          },
          n.prototype.listeners = function (e) {
            var t;
            return t = this._events &&
            this._events[e] ? r(this._events[e]) ? [
              this._events[e]
            ] : this._events[e].slice() : []
          },
          n.prototype.listenerCount = function (e) {
            if (this._events) {
              var t = this._events[e];
              if (r(t)) return 1;
              if (t) return t.length
            }
            return 0
          },
          n.listenerCount = function (e, t) {
            return e.listenerCount(t)
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(85);
          n(788);
          var i = r.createClass({
            displayName: 'BookmarkTooltip',
            propTypes: {
              title: r.PropTypes.string,
              description: r.PropTypes.string
            },
            getInitialState: function () {
              return {
                isVisible: !1
              }
            },
            componentWillUnmount: function () {
              this.resetTimeout()
            },
            resetTimeout: function () {
              this._timeout &&
              clearTimeout(this._timeout)
            },
            show: function (e) {
              var t = this;
              this.resetTimeout(),
              this.state.isVisible ||
              this.setState({
                isVisible: !0
              }),
              this._timeout = setTimeout(function () {
                return t.setState({
                  isVisible: !1
                })
              }, e || 3000)
            },
            render: function () {
              var e = r.createElement(
                'div',
                {
                  className: 'bookmark-tooltip',
                  key: 'text'
                },
                r.createElement('p', null, this.props.title),
                r.createElement('p', null, this.props.description)
              );
              return r.createElement(
                a,
                {
                  component: 'div',
                  transitionName: 'bookmark',
                  transitionEnterTimeout: 500,
                  transitionLeaveTimeout: 500
                },
                this.state.isVisible ? e : null
              )
            }
          });
          e.exports = i
        },
        function (e, t, n) {
          e.exports = {
            'default': n(737),
            __esModule: !0
          }
        },
        function (e, t, n) {
          e.exports = !n(95) (
            function () {
              return 7 != Object.defineProperty({
              }, 'a', {
                get: function () {
                  return 7
                }
              }).a
            }
          )
        },
        function (e, t) {
          e.exports = function (e) {
            try {
              return !!e()
            } catch (t) {
              return !0
            }
          }
        },
        function (e, t) {
          e.exports = function (e) {
            return 'object' == typeof e ? null !== e : 'function' == typeof e
          }
        },
        function (e, t, n) {
          var r = n(29).setDesc,
          a = n(146),
          i = n(33) ('toStringTag');
          e.exports = function (e, t, n) {
            e &&
            !a(e = n ? e : e.prototype, i) &&
            r(e, i, {
              configurable: !0,
              value: t
            })
          }
        },
        function (e, t, n) {
          var r = n(349),
          a = n(145);
          e.exports = function (e) {
            return r(a(e))
          }
        },
        function (e, t, n) {
          e.exports = n.p + 'player.cc3caa.png'
        },
        function (e, t, n) {
          e.exports.Dispatcher = n(1451)
        },
        function (e, t, n) {
          function r(e) {
            var t = - 1,
            n = e ? e.length : 0;
            for (this.clear(); ++t < n; ) {
              var r = e[t];
              this.set(r[0], r[1])
            }
          }
          var a = n(1578),
          i = n(1579),
          o = n(1580),
          s = n(1581),
          c = n(1582);
          r.prototype.clear = a,
          r.prototype['delete'] = i,
          r.prototype.get = o,
          r.prototype.has = s,
          r.prototype.set = c,
          e.exports = r
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = e.length, a = Array(r); ++n < r; ) a[n] = t(e[n], n, e);
            return a
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            for (var n = e.length; n--; ) if (a(e[n][0], t)) return n;
            return - 1
          }
          var a = n(110);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return r(Object(e))
          }
          var r = Object.getPrototypeOf;
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            var t = !1;
            if (null != e && 'function' != typeof e.toString) try {
              t = !!(e + '')
            } catch (n) {
            }
            return t
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            return t = null == t ? r : t,
            !!t &&
            ('number' == typeof e || a.test(e)) &&
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          var r = 9007199254740991,
          a = /^(?:0|[1-9]\d*)$/;
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            if (a(e)) return !1;
            var n = typeof e;
            return 'number' == n ||
            'symbol' == n ||
            'boolean' == n ||
            null == e ||
            i(e) ? !0 : s.test(e) ||
            !o.test(e) ||
            null != t &&
            e in Object(t)
          }
          var a = n(25),
          i = n(116),
          o = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          s = /^\w*$/;
          e.exports = r
        },
        function (e, t, n) {
          var r = n(65),
          a = r(Object, 'create');
          e.exports = a
        },
        function (e, t, n) {
          var r = n(1520),
          a = n(117),
          i = a(function (e, t) {
            return r(e, 1, t)
          });
          e.exports = i
        },
        function (e, t) {
          function n(e, t) {
            return e === t ||
            e !== e &&
            t !== t
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            return a(e) &&
            s.call(e, 'callee') &&
            (!l.call(e, 'callee') || c.call(e) == i)
          }
          var a = n(113),
          i = '[object Arguments]',
          o = Object.prototype,
          s = o.hasOwnProperty,
          c = o.toString,
          l = o.propertyIsEnumerable;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return null != e &&
            o(a(e)) &&
            !i(e)
          }
          var a = n(1560),
          i = n(114),
          o = n(115);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return i(e) &&
            a(e)
          }
          var a = n(112),
          i = n(56);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = a(e) ? c.call(e) : '';
            return t == i ||
            t == o
          }
          var a = n(41),
          i = '[object Function]',
          o = '[object GeneratorFunction]',
          s = Object.prototype,
          c = s.toString;
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            r >= e
          }
          var r = 9007199254740991;
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            return 'symbol' == typeof e ||
            a(e) &&
            s.call(e) == i
          }
          var a = n(56),
          i = '[object Symbol]',
          o = Object.prototype,
          s = o.toString;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            if ('function' != typeof e) throw new TypeError(o);
            return t = s(void 0 === t ? e.length - 1 : i(t), 0),
            function () {
              for (var n = arguments, r = - 1, i = s(n.length - t, 0), o = Array(i); ++r < i; ) o[r] = n[t + r];
              switch (t) {
                case 0:
                  return e.call(this, o);
                case 1:
                  return e.call(this, n[0], o);
                case 2:
                  return e.call(this, n[0], n[1], o)
              }
              var c = Array(t + 1);
              for (r = - 1; ++r < t; ) c[r] = n[r];
              return c[t] = o,
              a(e, this, c)
            }
          }
          var a = n(1515),
          i = n(1600),
          o = 'Expected a function',
          s = Math.max;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(292),
          a = n(1643),
          i = n(1648),
          o = n(7),
          s = n(1673),
          c = {};
          o(c, i),
          o(
            c,
            {
              findDOMNode: s('findDOMNode', 'ReactDOM', 'react-dom', r, r.findDOMNode),
              render: s('render', 'ReactDOM', 'react-dom', r, r.render),
              unmountComponentAtNode: s(
                'unmountComponentAtNode',
                'ReactDOM',
                'react-dom',
                r,
                r.unmountComponentAtNode
              ),
              renderToString: s(
                'renderToString',
                'ReactDOMServer',
                'react-dom/server',
                a,
                a.renderToString
              ),
              renderToStaticMarkup: s(
                'renderToStaticMarkup',
                'ReactDOMServer',
                'react-dom/server',
                a,
                a.renderToStaticMarkup
              )
            }
          ),
          c.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = r,
          c.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = a,
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return Object.prototype.hasOwnProperty.call(e, _) ||
            (e[_] = m++, d[e[_]] = {}),
            d[e[_]]
          }
          var a = n(48),
          i = n(86),
          o = n(495),
          s = n(1645),
          c = n(34),
          l = n(515),
          u = n(7),
          p = n(302),
          d = {},
          f = !1,
          m = 0,
          h = {
            topAbort: 'abort',
            topBlur: 'blur',
            topCanPlay: 'canplay',
            topCanPlayThrough: 'canplaythrough',
            topChange: 'change',
            topClick: 'click',
            topCompositionEnd: 'compositionend',
            topCompositionStart: 'compositionstart',
            topCompositionUpdate: 'compositionupdate',
            topContextMenu: 'contextmenu',
            topCopy: 'copy',
            topCut: 'cut',
            topDoubleClick: 'dblclick',
            topDrag: 'drag',
            topDragEnd: 'dragend',
            topDragEnter: 'dragenter',
            topDragExit: 'dragexit',
            topDragLeave: 'dragleave',
            topDragOver: 'dragover',
            topDragStart: 'dragstart',
            topDrop: 'drop',
            topDurationChange: 'durationchange',
            topEmptied: 'emptied',
            topEncrypted: 'encrypted',
            topEnded: 'ended',
            topError: 'error',
            topFocus: 'focus',
            topInput: 'input',
            topKeyDown: 'keydown',
            topKeyPress: 'keypress',
            topKeyUp: 'keyup',
            topLoadedData: 'loadeddata',
            topLoadedMetadata: 'loadedmetadata',
            topLoadStart: 'loadstart',
            topMouseDown: 'mousedown',
            topMouseMove: 'mousemove',
            topMouseOut: 'mouseout',
            topMouseOver: 'mouseover',
            topMouseUp: 'mouseup',
            topPaste: 'paste',
            topPause: 'pause',
            topPlay: 'play',
            topPlaying: 'playing',
            topProgress: 'progress',
            topRateChange: 'ratechange',
            topScroll: 'scroll',
            topSeeked: 'seeked',
            topSeeking: 'seeking',
            topSelectionChange: 'selectionchange',
            topStalled: 'stalled',
            topSuspend: 'suspend',
            topTextInput: 'textInput',
            topTimeUpdate: 'timeupdate',
            topTouchCancel: 'touchcancel',
            topTouchEnd: 'touchend',
            topTouchMove: 'touchmove',
            topTouchStart: 'touchstart',
            topVolumeChange: 'volumechange',
            topWaiting: 'waiting',
            topWheel: 'wheel'
          },
          _ = '_reactListenersID' + String(Math.random()).slice(2),
          g = u({
          }, s, {
            ReactEventListener: null,
            injection: {
              injectReactEventListener: function (e) {
                e.setHandleTopLevel(g.handleTopLevel),
                g.ReactEventListener = e
              }
            },
            setEnabled: function (e) {
              g.ReactEventListener &&
              g.ReactEventListener.setEnabled(e)
            },
            isEnabled: function () {
              return !(!g.ReactEventListener || !g.ReactEventListener.isEnabled())
            },
            listenTo: function (e, t) {
              for (
                var n = t,
                i = r(n),
                s = o.registrationNameDependencies[e],
                c = a.topLevelTypes,
                l = 0;
                l < s.length;
                l++
              ) {
                var u = s[l];
                i.hasOwnProperty(u) &&
                i[u] ||
                (
                  u === c.topWheel ? p('wheel') ? g.ReactEventListener.trapBubbledEvent(c.topWheel, 'wheel', n) : p('mousewheel') ? g.ReactEventListener.trapBubbledEvent(c.topWheel, 'mousewheel', n) : g.ReactEventListener.trapBubbledEvent(c.topWheel, 'DOMMouseScroll', n) : u === c.topScroll ? p('scroll', !0) ? g.ReactEventListener.trapCapturedEvent(c.topScroll, 'scroll', n) : g.ReactEventListener.trapBubbledEvent(c.topScroll, 'scroll', g.ReactEventListener.WINDOW_HANDLE) : u === c.topFocus ||
                  u === c.topBlur ? (
                    p('focus', !0) ? (
                      g.ReactEventListener.trapCapturedEvent(c.topFocus, 'focus', n),
                      g.ReactEventListener.trapCapturedEvent(c.topBlur, 'blur', n)
                    ) : p('focusin') &&
                    (
                      g.ReactEventListener.trapBubbledEvent(c.topFocus, 'focusin', n),
                      g.ReactEventListener.trapBubbledEvent(c.topBlur, 'focusout', n)
                    ),
                    i[c.topBlur] = !0,
                    i[c.topFocus] = !0
                  ) : h.hasOwnProperty(u) &&
                  g.ReactEventListener.trapBubbledEvent(u, h[u], n),
                  i[u] = !0
                )
              }
            },
            trapBubbledEvent: function (e, t, n) {
              return g.ReactEventListener.trapBubbledEvent(e, t, n)
            },
            trapCapturedEvent: function (e, t, n) {
              return g.ReactEventListener.trapCapturedEvent(e, t, n)
            },
            ensureScrollValueMonitoring: function () {
              if (!f) {
                var e = l.refreshScrollValues;
                g.ReactEventListener.monitorScrollValue(e),
                f = !0
              }
            },
            eventNameDispatchConfigs: i.eventNameDispatchConfigs,
            registrationNameModules: i.registrationNameModules,
            putListener: i.putListener,
            getListener: i.getListener,
            deleteListener: i.deleteListener,
            deleteAllListeners: i.deleteAllListeners
          });
          c.measureMethods(
            g,
            'ReactBrowserEventEmitter',
            {
              putListener: 'putListener',
              deleteListener: 'deleteListener'
            }
          ),
          e.exports = g
        },
        function (e, t, n) {
          'use strict';
          var r = {};
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(127),
          a = r({
            prop: null,
            context: null,
            childContext: null
          });
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(89),
          i = n(515),
          o = n(298),
          s = {
            screenX: null,
            screenY: null,
            clientX: null,
            clientY: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            getModifierState: o,
            button: function (e) {
              var t = e.button;
              return 'which' in e ? t : 2 === t ? 2 : 4 === t ? 1 : 0
            },
            buttons: null,
            relatedTarget: function (e) {
              return e.relatedTarget ||
              (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
            },
            pageX: function (e) {
              return 'pageX' in e ? e.pageX : e.clientX + i.currentScrollLeft
            },
            pageY: function (e) {
              return 'pageY' in e ? e.pageY : e.clientY + i.currentScrollTop
            }
          };
          a.augmentClass(r, s),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = {
            reinitializeTransaction: function () {
              this.transactionWrappers = this.getTransactionWrappers(),
              this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [],
              this._isInTransaction = !1
            },
            _isInTransaction: !1,
            getTransactionWrappers: null,
            isInTransaction: function () {
              return !!this._isInTransaction
            },
            perform: function (e, t, n, a, i, o, s, c) {
              this.isInTransaction() ? r(!1) : void 0;
              var l,
              u;
              try {
                this._isInTransaction = !0,
                l = !0,
                this.initializeAll(0),
                u = e.call(t, n, a, i, o, s, c),
                l = !1
              } finally {
                try {
                  if (l) try {
                    this.closeAll(0)
                  } catch (p) {
                  } else this.closeAll(0)
                } finally {
                  this._isInTransaction = !1
                }
              }
              return u
            },
            initializeAll: function (e) {
              for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                var r = t[n];
                try {
                  this.wrapperInitData[n] = i.OBSERVED_ERROR,
                  this.wrapperInitData[n] = r.initialize ? r.initialize.call(this) : null
                } finally {
                  if (this.wrapperInitData[n] === i.OBSERVED_ERROR) try {
                    this.initializeAll(n + 1)
                  } catch (a) {
                  }
                }
              }
            },
            closeAll: function (e) {
              this.isInTransaction() ? void 0 : r(!1);
              for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                var a,
                o = t[n],
                s = this.wrapperInitData[n];
                try {
                  a = !0,
                  s !== i.OBSERVED_ERROR &&
                  o.close &&
                  o.close.call(this, s),
                  a = !1
                } finally {
                  if (a) try {
                    this.closeAll(n + 1)
                  } catch (c) {
                  }
                }
              }
              this.wrapperInitData.length = 0
            }
          },
          i = {
            Mixin: a,
            OBSERVED_ERROR: {
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = !1;
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return a[e]
          }
          function r(e) {
            return ('' + e).replace(i, n)
          }
          var a = {
            '&': '&amp;',
            '>': '&gt;',
            '<': '&lt;',
            '"': '&quot;',
            '\'': '&#x27;'
          },
          i = /[&><"']/g;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(23),
          a = /^[ \r\n\t\f]/,
          i = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
          o = function (e, t) {
            e.innerHTML = t
          };
          if (
            'undefined' != typeof MSApp &&
            MSApp.execUnsafeLocalFunction &&
            (
              o = function (e, t) {
                MSApp.execUnsafeLocalFunction(function () {
                  e.innerHTML = t
                })
              }
            ),
            r.canUseDOM
          ) {
            var s = document.createElement('div');
            s.innerHTML = ' ',
            '' === s.innerHTML &&
            (
              o = function (e, t) {
                if (
                  e.parentNode &&
                  e.parentNode.replaceChild(e, e),
                  a.test(t) ||
                  '<' === t[0] &&
                  i.test(t)
                ) {
                  e.innerHTML = String.fromCharCode(65279) + t;
                  var n = e.firstChild;
                  1 === n.data.length ? e.removeChild(n) : n.deleteData(0, 1)
                } else e.innerHTML = t
              }
            )
          }
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = function (e) {
            var t,
            n = {};
            e instanceof Object &&
            !Array.isArray(e) ? void 0 : r(!1);
            for (t in e) e.hasOwnProperty(t) &&
            (n[t] = t);
            return n
          };
          e.exports = a
        },
        ,
        [
          1734,
          544,
          545,
          71
        ],
        [
          1737,
          550,
          552,
          312
        ],
        [
          1734,
          570,
          571,
          21
        ],
        function (e, t) {
          function n(e) {
            var t = r(e) ? s.call(e) : '';
            return t == a ||
            t == i
          }
          function r(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          var a = '[object Function]',
          i = '[object GeneratorFunction]',
          o = Object.prototype,
          s = o.toString;
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            return !!e &&
            'object' == typeof e
          }
          function r(e) {
            return 'string' == typeof e ||
            n(e) &&
            o.call(e) == a
          }
          var a = '[object String]',
          i = Object.prototype,
          o = i.toString;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(100).Dispatcher,
          s = n(6),
          c = (0, i['default']) (
            new o,
            {
              handleAction: function (e) {
                var t = {
                  source: s.PayloadSources.VIEW_ACTION,
                  action: e
                };
                this.dispatch(t)
              }
            }
          );
          e.exports = c
        },
        function (e, t) {
          'use strict';
          e.exports = function (e, t) {
            return e.replace(/{([^:\\w]*)[^\s]*?}/g, function (e, n) {
              return t[n]
            })
          }
        },
        function (e, t) {
          'use strict';
          t.languages = [
            'de_DE',
            'en_US',
            'es_ES',
            'fr_FR',
            'it_IT',
            'ja_JP',
            'pl_PL',
            'pt_BR',
            'ru_RU',
            'zh_TW'
          ],
          t.shortCountryMapping = {
            de: 'de',
            en: 'us',
            es: 'es',
            fr: 'fr',
            it: 'it',
            ja: 'jp',
            pl: 'pl',
            pt: 'br',
            ru: 'ru',
            zh: 'tw'
          },
          t.languageCountryMapping = {
            'de-de': 'de',
            'en-us': 'us',
            'en-au': 'au',
            'en-gb': 'gb',
            'fr-fr': 'fr',
            'it-it': 'it',
            'ja-jp': 'jp',
            'pl-pl': 'pl',
            'pt-br': 'br',
            'ru-ru': 'ru',
            'zh-tw': 'tw',
            'zh-cn': 'tw',
            'es-es': 'es'
          },
          t.shortLanguageMapping = {
            en_US: 'en',
            pt_BR: 'br',
            fr_FR: 'fr',
            de_DE: 'de',
            it_IT: 'it',
            ja_JP: 'ja',
            zh_TW: 'zh',
            pl_PL: 'pl',
            ru_RU: 'ru',
            es_ES: 'es'
          },
          t.countries = [
            {
              id: 'au',
              name: 'Australia',
              language: 'en_US',
              pulseLanguage: 'en_AU',
              cmsLanguage: 'en',
              cmsRegion: 'au',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/en/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/en/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/OTHER/'
            },
            {
              id: 'br',
              name: 'Brazil',
              language: 'pt_BR',
              cmsLanguage: 'pt',
              cmsRegion: 'br',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/br/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/br/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/br/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/OTHER/'
            },
            {
              id: 'fr',
              name: 'France',
              language: 'fr_FR',
              cmsLanguage: 'fr',
              cmsRegion: 'fr',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/fr/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/fr/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/fr/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/fr/OTHER/'
            },
            {
              id: 'de',
              name: 'Deutschland',
              language: 'de_DE',
              cmsLanguage: 'de',
              cmsRegion: 'de',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/de/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/de/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/de/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/de/OTHER/'
            },
            {
              id: 'it',
              name: 'Italia',
              language: 'it_IT',
              cmsLanguage: 'it',
              cmsRegion: 'it',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/it/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/it/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/it/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/it/OTHER/'
            },
            {
              id: 'jp',
              name: '日本',
              language: 'ja_JP',
              cmsLanguage: 'ja',
              cmsRegion: 'jp',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/ja/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/ja/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/ja/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/ja/OTHER/'
            },
            {
              id: 'tw',
              name: '台灣',
              language: 'zh_TW',
              cmsLanguage: 'zh',
              cmsRegion: 'tw',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/tc/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/tc/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/tc/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/tc/OTHER/'
            },
            {
              id: 'pl',
              name: 'Polska',
              language: 'pl_PL',
              cmsLanguage: 'pl',
              cmsRegion: 'pl',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/pl/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/pl/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/pl/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/pl/OTHER/'
            },
            {
              id: 'ru',
              name: 'Россия',
              language: 'ru_RU',
              cmsLanguage: 'ru',
              cmsRegion: 'ru',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/ru/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/ru/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/ru/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/ru/OTHER/'
            },
            {
              id: 'es',
              name: 'España',
              language: 'es_ES',
              cmsLanguage: 'es',
              cmsRegion: 'es',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/es/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/es/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/es/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/es/OTHER/'
            },
            {
              id: 'gb',
              name: 'United Kingdom',
              language: 'en_US',
              pulseLanguage: 'en_GB',
              cmsLanguage: 'en',
              cmsRegion: 'gb',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/en/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/en/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/OTHER/'
            },
            {
              id: 'us',
              name: 'United States',
              language: 'en_US',
              cmsLanguage: 'en',
              cmsRegion: 'us',
              cookieLink: 'http://tos.ea.com/legalapp/WEBPRIVACY/US/en/PC/',
              tosLink: 'http://tos.ea.com/legalapp/WEBTERMS/US/en/PC/',
              eulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/GM/',
              iosEulaLink: 'http://tos.ea.com/legalapp/mobileeula/US/en/OTHER/'
            }
          ],
          t.defaultCountry = 'us'
        },
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            v = v.concat(e)
          }
          function i(e) {
            v = f(v, e)
          }
          function o(e) {
            E[e.friendlyId] = e
          }
          function s(e) {
            return d(v, function (t) {
              return t.id === e
            })
          }
          function c(e) {
            return E[e]
          }
          function l() {
            v = [],
            E = {}
          }
          var u = n(3),
          p = r(u),
          d = n(16),
          f = n(1586),
          m = n(12),
          h = n(6).ActionTypes,
          _ = n(10),
          g = n(14),
          v = [],
          E = {},
          I = (0, p['default']) ({
          }, m, {
            getItems: function () {
              return v
            },
            getItem: function (e) {
              return s(e)
            },
            getArticle: function (e) {
              return c(e)
            }
          });
          I.dispatchToken = _.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case h.INTEL_ADD:
                  a(t.items),
                  I.emitChange();
                  break;
                case h.INTEL_REMOVE:
                  i(t.items),
                  I.emitChange();
                  break;
                case h.INTEL_RESET:
                  l(),
                  I.emitChange()
              }
            }
          ),
          I.gatewayDispatchToken = g.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'Pamplona.getIntel':
                  o(t.data),
                  I.emitChange()
              }
            }
          ),
          e.exports = I
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            I = {},
            e.forEach(function (e) {
              I[e.guid] = e
            })
          }
          function i() {
          }
          function o(e) {
            I[e] = null
          }
          function s(e) {
            b[e] = (0, f['default']) ({
            }, I[e])
          }
          function c(e) {
            b[e] = null
          }
          function l(e, t) {
            b[e][t] = I[e][t]
          }
          function u(e, t) {
            b[e][t] = null;
            var n = !h(_(b[e]));
            n === !0 &&
            c(e)
          }
          function p(e, t) {
            if (null === t) null !== b[e] ? c(e) : s(e);
             else if (null !== b[e]) null !== b[e][t] ? u(e, t) : l(e, t);
             else {
              s(e);
              for (var n in b[e]) n !== t &&
              u(e, n)
            }
          }
          var d = n(3),
          f = r(d),
          m = n(284),
          h = n(1599),
          _ = n(490),
          g = n(12),
          v = n(10),
          E = n(6).ActionTypes,
          I = {
            ID_WEB_LEGEND_CATEGORY_MISSIONS: {
              main: 'ID_WEB_MAP_MAINMISSION',
              side: 'ID_WEB_MAP_SIDEMISSION',
              gridnode: 'ID_WEB_MAP_GRIDNODE'
            },
            ID_WEB_LEGEND_CATEGORY_SECURITY: {
              safehouse: 'ID_WEB_MAP_SAFEHOUSE',
              sceneswitch: 'ID_MAP_TOGGLE_UNDERGROUND'
            },
            ID_MPA_CHALLENGES: {
              runnersRoute: 'ID_WEB_MAP_RUNNERSROUTE',
              billboard: 'ID_WEB_MAP_BILLBOARDHACK'
            },
            ID_WEB_LEGEND_CATEGORY_RUNNERS_OBJECTIVES: {
              security: 'ID_WEB_MAP_SECURITYHUB',
              delivery: 'ID_WEB_MAP_DELIVERYMISSION',
              diversion: 'ID_WEB_MAP_DIVERSIONMISSION'
            },
            ID_WEB_LEGEND_CATEGORY_SOCIAL: {
              TimeTrial: 'ID_WEB_MAP_TIMETRIAL',
              ReachThis: 'ID_WEB_MAP_REACHTHIS',
              Players: 'ID_WEB_MAP_PLAYER'
            }
          },
          b = {};
          m(I, function (e, t) {
            b[t] = (0, f['default']) ({
            }, e)
          });
          var y = (0, f['default']) ({
          }, g, {
            getLegendChallenges: function () {
              return I
            },
            getActiveLegendChallenges: function () {
              return b
            }
          });
          y.dispatchToken = v.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case E.LEGEND_SYNC:
                  t.legendChallenge &&
                  a(t.legendChallenges),
                  y.emitChange();
                  break;
                case E.LEGEND_ADD:
                  t.legendChallenge &&
                  i(t.legendChallenge),
                  y.emitChange();
                  break;
                case E.LEGEND_REMOVE:
                  t.legendChallenge &&
                  o(t.legendChallenge),
                  y.emitChange();
                  break;
                case E.LEGEND_TOGGLE:
                  t.guidCategory &&
                  p(t.guidCategory, t.guid),
                  y.emitChange()
              }
            }
          ),
          e.exports = y
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.map(function (e) {
              return {
                id: e.id,
                meta: e
              }
            })
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1481),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            e.forEach(function (e, n) {
              return p[t.page * t.pageSize + n] = e
            })
          }
          function i(e) {
            d[e.friendlyId] = e
          }
          var o = n(3),
          s = r(o),
          c = n(12),
          l = n(14),
          u = 8,
          p = [],
          d = {},
          f = (0, s['default']) ({
          }, c, {
            getArticles: function (e) {
              return p.slice(e * u, (e + 1) * u)
            },
            getLatestArticle: function () {
              return p.length ? p[0] : null
            },
            getArticle: function (e) {
              return d[e]
            }
          });
          f.gatewayDispatchToken = l.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'Pamplona.getLatestNewsArticles':
                  a(t.data.articles, t.data.metadata),
                  f.emitChange();
                  break;
                case 'Pamplona.getNewsArticle':
                  i(t.data),
                  f.emitChange()
              }
            }
          ),
          e.exports = f
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            var t = p.getCurrentPlatform();
            d = e.map(
              function (e) {
                var n,
                r = JSON.parse(e.data[0]);
                return r.newRecord &&
                r.ugcId ? n = 'newTimeTrialRecord' : r.ugcId &&
                2214567805 === r.contentKey &&
                r.contentName ? n = 'touchedReachThis' : r.newRecord ? n = 'newChallengeRecord' : r.ugcId &&
                (n = 'createdUgc'),
                r.ugcId &&
                (r.ugcId.userId += ''),
                r.newRecord &&
                (r.newRecord += ''),
                r.oldRecord &&
                (r.oldRecord += ''),
                (0, c['default']) ({
                }, e, {
                  type: n,
                  data: r,
                  platform: t
                })
              }
            ).filter(function (e) {
              return !!e.type
            })
          }
          function i() {
            d = []
          }
          function o() {
            d = null
          }
          var s = n(3),
          c = r(s),
          l = n(12),
          u = n(14),
          p = n(4),
          d = null,
          f = (0, c['default']) ({
          }, l, {
            getNotifications: function () {
              return d
            }
          });
          f.gatewayDispatchToken = u.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getNotifications':
                  a(t.data),
                  f.emitChange();
                  break;
                case 'PamplonaAuthenticated.updateLastReadNotificationTimestamp':
                  i(),
                  f.emitChange();
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  o(),
                  f.emitChange()
              }
            }
          ),
          e.exports = f
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(12),
          s = n(10),
          c = n(14),
          l = n(6).ActionTypes,
          u = !1,
          p = !1,
          d = null,
          f = (0, i['default']) ({
          }, o, {
            getShowLogin: function () {
              return u
            },
            getShowLogout: function () {
              return p
            },
            getLoginError: function () {
              return d
            }
          });
          f.dispatchToken = s.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case l.ORIGIN_SHOW_LOGIN:
                  u = !0,
                  d = null,
                  f.emitChange();
                  break;
                case l.ORIGIN_HIDE_LOGIN:
                  u = !1,
                  d = null,
                  f.emitChange();
                  break;
                case l.ORIGIN_SHOW_LOGOUT:
                  p = !0,
                  f.emitChange();
                  break;
                case l.ORIGIN_HIDE_LOGOUT:
                  p = !1,
                  f.emitChange()
              }
            }
          ),
          f.gatewayDispatchToken = c.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode_REQUEST':
                  d = null,
                  f.emitChange();
                  break;
                case 'BeatAuthentication.viaAuthCode':
                  u = !1,
                  f.emitChange();
                  break;
                case 'BeatAuthentication.viaAuthCode_ERROR':
                  d = t.error,
                  f.emitChange();
                  break;
                case 'BeatAuthentication.logout_REQUEST':
                  p = !1,
                  f.emitChange()
              }
            }
          ),
          e.exports = f
        },
        function (e, t) {
          e.exports = function (e) {
            if ('function' != typeof e) throw TypeError(e + ' is not a function!');
            return e
          }
        },
        function (e, t) {
          e.exports = function (e) {
            if (void 0 == e) throw TypeError('Can\'t call method on  ' + e);
            return e
          }
        },
        function (e, t) {
          var n = {}.hasOwnProperty;
          e.exports = function (e, t) {
            return n.call(e, t)
          }
        },
        function (e, t, n) {
          var r = n(29),
          a = n(149);
          e.exports = n(94) ? function (e, t, n) {
            return r.setDesc(e, t, a(1, n))
          }
           : function (e, t, n) {
            return e[t] = n,
            e
          }
        },
        function (e, t) {
          e.exports = !0
        },
        function (e, t) {
          e.exports = function (e, t) {
            return {
              enumerable: !(1 & e),
              configurable: !(2 & e),
              writable: !(4 & e),
              value: t
            }
          }
        },
        function (e, t, n) {
          e.exports = n(147)
        },
        function (e, t) {
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_01_District_focus.05b8cb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_01_District_outline.6ed892.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_02_Plastic_focus.55094a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_02_Plastic_outline.ecedb1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_03_AnansiEmporium_focus.923f2f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_03_AnansiEmporium_outline.f88780.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_04_CityAlert_focus.72c91c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_04_CityAlert_outline.233b3d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_05_AllCom_focus.de0afb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_05_AllCom_outline.9a3117.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridLeaks_focus.06edf1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridLeaks_outline.a0ef94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridNodes_focus.d99df2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridNodes_outline.7e5f69.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_ReflectionHubs_focus.b873cd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_ReflectionHubs_outline.5a4f67.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_01_District_focus.9d783e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_01_District_outline.e59a9a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_02_RunnersLair_focus.8de3f5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_02_RunnersLair_outline.cf3b83.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_03_TheRunners_focus.89da59.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_03_TheRunners_outline.32a1b1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_04_Dashes_focus.d9402c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_04_Dashes_outline.ba09c1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_05_ElysiumBuilding_focus.e87b0a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_05_ElysiumBuilding_outline.4afe3e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BeatLE_focus.cb4eb2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BeatLE_outline.b97eb2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BillboardHacking_focus.85e728.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BillboardHacking_outline.144fc0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_TimeTrials_focus.b66fb2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_TimeTrials_outline.7d0369.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_01_BlackNovember_focus.9d3678.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_01_BlackNovember_outline.d127f6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_02_Rebecca_focus.169292.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_02_Rebecca_outline.4b5b21.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_03_SentryTurretsSniper_focus.82eb12.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_03_SentryTurretsSniper_outline.f91675.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_04_OmnistatAgent_focus.ed7406.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_04_OmnistatAgent_outline.a13134.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_05_HistoryLesson_focus.8abf51.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_05_HistoryLesson_outline.4ebb54.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_01_District_focus.f2a64b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_01_District_outline.4785f0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_02_CallahanConstruction_focus.a51d5f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_02_CallahanConstruction_outline.dad907.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_03_Enforcer_focus.8e1aa5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_03_Enforcer_outline.793739.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_04_ShockProtector_focus.fc4738.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_04_ShockProtector_outline.d3300d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_05_Protector_focus.7406bb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_05_Protector_outline.f44b3e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack.3b92f2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack_focus.d1352a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack_outline.5404d8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery.13a57c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery_focus.8a621f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery_outline.e33f71.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion.d222b7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion_focus.d53500.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion_outline.562c6d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode.52763a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode_focus.4e540f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode_outline.aba554.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain.e3ba4e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_focus.464e85.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_outline.331665.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_unselected.6de7ae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide.39aac5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide_focus.2a3f7b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide_outline.029082.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'player.4b5cee.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis.804e69.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis_focus.46500e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis_outline.43d0a3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit.7c742a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit_focus.49d6ca.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit_outline.629488.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute.d90a18.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus.7fe85f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus1.85b0f2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus2.040b1b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus3.059c3a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline.6295b4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline1.efe519.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline2.26003e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline3.55d192.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse.0c75e0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse_focus.48e521.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse_outline.6467ae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub.463a5f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub_focus.4b547a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub_outline.98d2d9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thebeat.47bf36.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thebeat_outline.a084c0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial.ac5690.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrialCheckpoint.4a1221.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrialFinish.ab1ab5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial_focus.677d7d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial_outline.b523bd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down.99dbad.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down_focus.1f76ed.png';
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down_outline.1fdbae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up.042438.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up_focus.021d66.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up_outline.c86b24.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack_outline.1037d7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery_outline.64affc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion_outline.4e6011.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode_outline.a6d5c7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_outline.7fba55.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide_outline.df8f97.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis_outline.620f38.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit_outline.aebf2f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline.2a5040.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse_outline.18c021.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub_outline.c0b628.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial_outline.34c301.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down_outline.d9128b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'loc_downtown.882cd1.jpg'
        },
        function (e, t) {
          e.exports = {
            bg: 'blocks_02',
            frame: 'Basic_Pentagon',
            detail: 'bop-chaser'
          }
        },
        function (e, t, n) {
          function r(e) {
            var t = - 1,
            n = e ? e.length : 0;
            for (this.clear(); ++t < n; ) {
              var r = e[t];
              this.set(r[0], r[1])
            }
          }
          var a = n(1573),
          i = n(1574),
          o = n(1575),
          s = n(1576),
          c = n(1577);
          r.prototype.clear = a,
          r.prototype['delete'] = i,
          r.prototype.get = o,
          r.prototype.has = s,
          r.prototype.set = c,
          e.exports = r
        },
        function (e, t, n) {
          var r = n(47),
          a = r.Symbol;
          e.exports = a
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = e.length; ++n < r && t(e[n], n, e) !== !1; );
            return e
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = t.length, a = e.length; ++n < r; ) e[a + n] = t[n];
            return e
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t, n, r) {
            var a = - 1,
            i = e.length;
            for (r && i && (n = e[++a]); ++a < i; ) n = t(n, e[a], a, e);
            return n
          }
          e.exports = n
        },
        function (e, t, n) {
          var r = n(1523),
          a = n(1555),
          i = a(r);
          e.exports = i
        },
        function (e, t, n) {
          function r(e, t, n, s, c) {
            return e === t ? !0 : null == e ||
            null == t ||
            !i(e) &&
            !o(t) ? e !== e &&
            t !== t : a(e, t, r, n, s, c)
          }
          var a = n(1526),
          i = n(41),
          o = n(56);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = new e.constructor(e.byteLength);
            return new a(t).set(new a(e)),
            t
          }
          var a = n(458);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r) {
            n ||
            (n = {});
            for (var i = - 1, o = t.length; ++i < o; ) {
              var s = t[i],
              c = r ? r(n[s], e[s], s, n, e) : e[s];
              a(n, s, c)
            }
            return n
          }
          var a = n(461);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return r(Object(e))
          }
          var r = Object.getOwnPropertySymbols;
          r ||
          (n = function () {
            return []
          }),
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            var t = e &&
            e.constructor,
            n = 'function' == typeof t &&
            t.prototype ||
            r;
            return e === n
          }
          var r = Object.prototype;
          e.exports = n
        },
        function (e, t, n) {
          e.exports = n(1588)
        },
        function (e, t, n) {
          function r(e) {
            return i(e) &&
            a(e.length) &&
            !!w[R.call(e)]
          }
          var a = n(115),
          i = n(56),
          o = '[object Arguments]',
          s = '[object Array]',
          c = '[object Boolean]',
          l = '[object Date]',
          u = '[object Error]',
          p = '[object Function]',
          d = '[object Map]',
          f = '[object Number]',
          m = '[object Object]',
          h = '[object RegExp]',
          _ = '[object Set]',
          g = '[object String]',
          v = '[object WeakMap]',
          E = '[object ArrayBuffer]',
          I = '[object DataView]',
          b = '[object Float32Array]',
          y = '[object Float64Array]',
          T = '[object Int8Array]',
          S = '[object Int16Array]',
          C = '[object Int32Array]',
          D = '[object Uint8Array]',
          A = '[object Uint8ClampedArray]',
          O = '[object Uint16Array]',
          N = '[object Uint32Array]',
          w = {};
          w[b] = w[y] = w[T] = w[S] = w[C] = w[D] = w[A] = w[O] = w[N] = !0,
          w[o] = w[s] = w[E] = w[c] = w[I] = w[l] = w[u] = w[p] = w[d] = w[f] = w[m] = w[h] = w[_] = w[g] = w[v] = !1;
          var x = Object.prototype,
          R = x.toString;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            for (
              var t = - 1,
              n = s(e),
              r = a(e),
              c = r.length,
              u = i(e),
              p = !!u,
              d = u ||
              [],
              f = d.length;
              ++t < c;
            ) {
              var m = r[t];
              p &&
              ('length' == m || o(m, f)) ||
              'constructor' == m &&
              (n || !l.call(e, m)) ||
              d.push(m)
            }
            return d
          }
          var a = n(1529),
          i = n(480),
          o = n(106),
          s = n(283),
          c = Object.prototype,
          l = c.hasOwnProperty;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r() {
            this._callbacks = null,
            this._contexts = null
          }
          var a = n(51),
          i = n(7),
          o = n(5);
          i(
            r.prototype,
            {
              enqueue: function (e, t) {
                this._callbacks = this._callbacks ||
                [],
                this._contexts = this._contexts ||
                [],
                this._callbacks.push(e),
                this._contexts.push(t)
              },
              notifyAll: function () {
                var e = this._callbacks,
                t = this._contexts;
                if (e) {
                  e.length !== t.length ? o(!1) : void 0,
                  this._callbacks = null,
                  this._contexts = null;
                  for (var n = 0; n < e.length; n++) e[n].call(t[n]);
                  e.length = 0,
                  t.length = 0
                }
              },
              reset: function () {
                this._callbacks = null,
                this._contexts = null
              },
              destructor: function () {
                this.reset()
              }
            }
          ),
          a.addPoolingTo(r),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return u.hasOwnProperty(e) ? !0 : l.hasOwnProperty(e) ? !1 : c.test(e) ? (u[e] = !0, !0) : (l[e] = !0, !1)
          }
          function a(e, t) {
            return null == t ||
            e.hasBooleanValue &&
            !t ||
            e.hasNumericValue &&
            isNaN(t) ||
            e.hasPositiveNumericValue &&
            1 > t ||
            e.hasOverloadedBooleanValue &&
            t === !1
          }
          var i = n(69),
          o = n(34),
          s = n(1676),
          c = (n(9), /^[a-zA-Z_][\w\.\-]*$/),
          l = {},
          u = {},
          p = {
            createMarkupForID: function (e) {
              return i.ID_ATTRIBUTE_NAME + '=' + s(e)
            },
            setAttributeForID: function (e, t) {
              e.setAttribute(i.ID_ATTRIBUTE_NAME, t)
            },
            createMarkupForProperty: function (e, t) {
              var n = i.properties.hasOwnProperty(e) ? i.properties[e] : null;
              if (n) {
                if (a(n, t)) return '';
                var r = n.attributeName;
                return n.hasBooleanValue ||
                n.hasOverloadedBooleanValue &&
                t === !0 ? r + '=""' : r + '=' + s(t)
              }
              return i.isCustomAttribute(e) ? null == t ? '' : e + '=' + s(t) : null
            },
            createMarkupForCustomAttribute: function (e, t) {
              return r(e) &&
              null != t ? e + '=' + s(t) : ''
            },
            setValueForProperty: function (e, t, n) {
              var r = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
              if (r) {
                var o = r.mutationMethod;
                if (o) o(e, n);
                 else if (a(r, n)) this.deleteValueForProperty(e, t);
                 else if (r.mustUseAttribute) {
                  var s = r.attributeName,
                  c = r.attributeNamespace;
                  c ? e.setAttributeNS(c, s, '' + n) : r.hasBooleanValue ||
                  r.hasOverloadedBooleanValue &&
                  n === !0 ? e.setAttribute(s, '') : e.setAttribute(s, '' + n)
                } else {
                  var l = r.propertyName;
                  r.hasSideEffects &&
                  '' + e[l] == '' + n ||
                  (e[l] = n)
                }
              } else i.isCustomAttribute(t) &&
              p.setValueForAttribute(e, t, n)
            },
            setValueForAttribute: function (e, t, n) {
              r(t) &&
              (null == n ? e.removeAttribute(t) : e.setAttribute(t, '' + n))
            },
            deleteValueForProperty: function (e, t) {
              var n = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
              if (n) {
                var r = n.mutationMethod;
                if (r) r(e, void 0);
                 else if (n.mustUseAttribute) e.removeAttribute(n.attributeName);
                 else {
                  var a = n.propertyName,
                  o = i.getDefaultValueForProperty(e.nodeName, a);
                  n.hasSideEffects &&
                  '' + e[a] === o ||
                  (e[a] = o)
                }
              } else i.isCustomAttribute(t) &&
              e.removeAttribute(t)
            }
          };
          o.measureMethods(
            p,
            'DOMPropertyOperations',
            {
              setValueForProperty: 'setValueForProperty',
              setValueForAttribute: 'setValueForAttribute',
              deleteValueForProperty: 'deleteValueForProperty'
            }
          ),
          e.exports = p
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            null != e.checkedLink &&
            null != e.valueLink ? l(!1) : void 0
          }
          function a(e) {
            r(e),
            null != e.value ||
            null != e.onChange ? l(!1) : void 0
          }
          function i(e) {
            r(e),
            null != e.checked ||
            null != e.onChange ? l(!1) : void 0
          }
          function o(e) {
            if (e) {
              var t = e.getName();
              if (t) return ' Check the render method of `' + t + '`.'
            }
            return ''
          }
          var s = n(513),
          c = n(121),
          l = n(5),
          u = (
            n(9),
            {
              button: !0,
              checkbox: !0,
              image: !0,
              hidden: !0,
              radio: !0,
              reset: !0,
              submit: !0
            }
          ),
          p = {
            value: function (e, t, n) {
              return !e[t] ||
              u[e.type] ||
              e.onChange ||
              e.readOnly ||
              e.disabled ? null : new Error(
                'You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.'
              )
            },
            checked: function (e, t, n) {
              return !e[t] ||
              e.onChange ||
              e.readOnly ||
              e.disabled ? null : new Error(
                'You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.'
              )
            },
            onChange: s.func
          },
          d = {},
          f = {
            checkPropTypes: function (e, t, n) {
              for (var r in p) {
                if (p.hasOwnProperty(r)) var a = p[r](t, r, e, c.prop);
                if (a instanceof Error && !(a.message in d)) {
                  d[a.message] = !0;
                  o(n)
                }
              }
            },
            getValue: function (e) {
              return e.valueLink ? (a(e), e.valueLink.value) : e.value
            },
            getChecked: function (e) {
              return e.checkedLink ? (i(e), e.checkedLink.value) : e.checked
            },
            executeOnChange: function (e, t) {
              return e.valueLink ? (a(e), e.valueLink.requestChange(t.target.value)) : e.checkedLink ? (i(e), e.checkedLink.requestChange(t.target.checked)) : e.onChange ? e.onChange.call(void 0, t) : void 0
            }
          };
          e.exports = f
        },
        function (e, t, n) {
          'use strict';
          var r = n(293),
          a = n(28),
          i = {
            processChildrenUpdates: r.dangerouslyProcessChildrenUpdates,
            replaceNodeWithMarkupByID: r.dangerouslyReplaceNodeWithMarkupByID,
            unmountIDFromEnvironment: function (e) {
              a.purgeID(e)
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = !1,
          i = {
            unmountIDFromEnvironment: null,
            replaceNodeWithMarkupByID: null,
            processChildrenUpdates: null,
            injection: {
              injectEnvironment: function (e) {
                a ? r(!1) : void 0,
                i.unmountIDFromEnvironment = e.unmountIDFromEnvironment,
                i.replaceNodeWithMarkupByID = e.replaceNodeWithMarkupByID,
                i.processChildrenUpdates = e.processChildrenUpdates,
                a = !0
              }
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(49),
          a = n(501),
          i = n(503),
          o = n(70),
          s = n(28),
          c = n(34),
          l = n(58),
          u = n(35),
          p = n(295),
          d = n(296),
          f = n(1677);
          n(9);
          i.inject();
          var m = c.measure('React', 'render', s.render),
          h = {
            findDOMNode: d,
            render: m,
            unmountComponentAtNode: s.unmountComponentAtNode,
            version: p,
            unstable_batchedUpdates: u.batchedUpdates,
            unstable_renderSubtreeIntoContainer: f
          };
          'undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
          'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject &&
          __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
            CurrentOwner: r,
            InstanceHandles: o,
            Mount: s,
            Reconciler: l,
            TextComponent: a
          });
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          var r = n(494),
          a = n(288),
          i = n(28),
          o = n(34),
          s = n(5),
          c = {
            dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
            style: '`style` must be set using `updateStylesByID()`.'
          },
          l = {
            updatePropertyByID: function (e, t, n) {
              var r = i.getNode(e);
              c.hasOwnProperty(t) ? s(!1) : void 0,
              null != n ? a.setValueForProperty(r, t, n) : a.deleteValueForProperty(r, t)
            },
            dangerouslyReplaceNodeWithMarkupByID: function (e, t) {
              var n = i.getNode(e);
              r.dangerouslyReplaceNodeWithMarkup(n, t)
            },
            dangerouslyProcessChildrenUpdates: function (e, t) {
              for (var n = 0; n < e.length; n++) e[n].parentNode = i.getNode(e[n].parentID);
              r.processUpdates(e, t)
            }
          };
          o.measureMethods(
            l,
            'ReactDOMIDOperations',
            {
              dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
              dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
            }
          ),
          e.exports = l
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            s.enqueueUpdate(e)
          }
          function a(e, t) {
            var n = o.get(e);
            return n ? n : null
          }
          var i = (n(49), n(30)),
          o = n(88),
          s = n(35),
          c = n(7),
          l = n(5),
          u = (
            n(9),
            {
              isMounted: function (e) {
                var t = o.get(e);
                return t ? !!t._renderedComponent : !1
              },
              enqueueCallback: function (e, t) {
                'function' != typeof t ? l(!1) : void 0;
                var n = a(e);
                return n ? (
                  n._pendingCallbacks ? n._pendingCallbacks.push(t) : n._pendingCallbacks = [
                    t
                  ],
                  void r(n)
                ) : null
              },
              enqueueCallbackInternal: function (e, t) {
                'function' != typeof t ? l(!1) : void 0,
                e._pendingCallbacks ? e._pendingCallbacks.push(t) : e._pendingCallbacks = [
                  t
                ],
                r(e)
              },
              enqueueForceUpdate: function (e) {
                var t = a(e, 'forceUpdate');
                t &&
                (t._pendingForceUpdate = !0, r(t))
              },
              enqueueReplaceState: function (e, t) {
                var n = a(e, 'replaceState');
                n &&
                (n._pendingStateQueue = [
                  t
                ], n._pendingReplaceState = !0, r(n))
              },
              enqueueSetState: function (e, t) {
                var n = a(e, 'setState');
                if (n) {
                  var i = n._pendingStateQueue ||
                  (n._pendingStateQueue = []);
                  i.push(t),
                  r(n)
                }
              },
              enqueueSetProps: function (e, t) {
                var n = a(e, 'setProps');
                n &&
                u.enqueueSetPropsInternal(n, t)
              },
              enqueueSetPropsInternal: function (e, t) {
                var n = e._topLevelWrapper;
                n ? void 0 : l(!1);
                var a = n._pendingElement ||
                n._currentElement,
                o = a.props,
                s = c({
                }, o.props, t);
                n._pendingElement = i.cloneAndReplaceProps(a, i.cloneAndReplaceProps(o, s)),
                r(n)
              },
              enqueueReplaceProps: function (e, t) {
                var n = a(e, 'replaceProps');
                n &&
                u.enqueueReplacePropsInternal(n, t)
              },
              enqueueReplacePropsInternal: function (e, t) {
                var n = e._topLevelWrapper;
                n ? void 0 : l(!1);
                var a = n._pendingElement ||
                n._currentElement,
                o = a.props;
                n._pendingElement = i.cloneAndReplaceProps(a, i.cloneAndReplaceProps(o, t)),
                r(n)
              },
              enqueueElementInternal: function (e, t) {
                e._pendingElement = t,
                r(e)
              }
            }
          );
          e.exports = u
        },
        function (e, t) {
          'use strict';
          e.exports = '0.14.8'
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return null == e ? null : 1 === e.nodeType ? e : a.has(e) ? i.getNodeFromInstance(e) : (
              null != e.render &&
              'function' == typeof e.render ? o(!1) : void 0,
              void o(!1)
            )
          }
          var a = (n(49), n(88)),
          i = n(28),
          o = n(5);
          n(9);
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t,
            n = e.keyCode;
            return 'charCode' in e ? (t = e.charCode, 0 === t && 13 === n && (t = 13)) : t = n,
            t >= 32 ||
            13 === t ? t : 0
          }
          e.exports = n
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = this,
            n = t.nativeEvent;
            if (n.getModifierState) return n.getModifierState(e);
            var r = a[e];
            return r ? !!n[r] : !1
          }
          function r(e) {
            return n
          }
          var a = {
            Alt: 'altKey',
            Control: 'ctrlKey',
            Meta: 'metaKey',
            Shift: 'shiftKey'
          };
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = e.target ||
            e.srcElement ||
            window;
            return 3 === t.nodeType ? t.parentNode : t
          }
          e.exports = n
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = e &&
            (r && e[r] || e[a]);
            return 'function' == typeof t ? t : void 0
          }
          var r = 'function' == typeof Symbol &&
          Symbol.iterator,
          a = '@@iterator';
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return 'function' == typeof e &&
            'undefined' != typeof e.prototype &&
            'function' == typeof e.prototype.mountComponent &&
            'function' == typeof e.prototype.receiveComponent
          }
          function a(e) {
            var t;
            if (null === e || e === !1) t = new o(a);
             else if ('object' == typeof e) {
              var n = e;
              !n ||
              'function' != typeof n.type &&
              'string' != typeof n.type ? l(!1) : void 0,
              t = 'string' == typeof n.type ? s.createInternalComponent(n) : r(n.type) ? new n.type(n) : new u
            } else 'string' == typeof e ||
            'number' == typeof e ? t = s.createInstanceForText(e) : l(!1);
            return t.construct(e),
            t._mountIndex = 0,
            t._mountImage = null,
            t
          }
          var i = n(1636),
          o = n(505),
          s = n(511),
          c = n(7),
          l = n(5),
          u = (n(9), function () {
          });
          c(u.prototype, i.Mixin, {
            _instantiateReactComponent: a
          }),
          e.exports = a
        },
        function (e, t, n) {
          'use strict'; /**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
          function r(e, t) {
            if (!i.canUseDOM || t && !('addEventListener' in document)) return !1;
            var n = 'on' + e,
            r = n in document;
            if (!r) {
              var o = document.createElement('div');
              o.setAttribute(n, 'return;'),
              r = 'function' == typeof o[n]
            }
            return !r &&
            a &&
            'wheel' === e &&
            (r = document.implementation.hasFeature('Events.wheel', '3.0')),
            r
          }
          var a,
          i = n(23);
          i.canUseDOM &&
          (
            a = document.implementation &&
            document.implementation.hasFeature &&
            document.implementation.hasFeature('', '') !== !0
          ),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(23),
          a = n(125),
          i = n(126),
          o = function (e, t) {
            e.textContent = t
          };
          r.canUseDOM &&
          (
            'textContent' in document.documentElement ||
            (o = function (e, t) {
              i(e, a(t))
            })
          ),
          e.exports = o
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            var n = null === e ||
            e === !1,
            r = null === t ||
            t === !1;
            if (n || r) return n === r;
            var a = typeof e,
            i = typeof t;
            return 'string' === a ||
            'number' === a ? 'string' === i ||
            'number' === i : 'object' === i &&
            e.type === t.type &&
            e.key === t.key
          }
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return h[e]
          }
          function a(e, t) {
            return e &&
            null != e.key ? o(e.key) : t.toString(36)
          }
          function i(e) {
            return ('' + e).replace(_, r)
          }
          function o(e) {
            return '$' + i(e)
          }
          function s(e, t, n, r) {
            var i = typeof e;
            if (
              'undefined' !== i &&
              'boolean' !== i ||
              (e = null),
              null === e ||
              'string' === i ||
              'number' === i ||
              l.isValidElement(e)
            ) return n(r, e, '' === t ? f + a(e, 0) : t),
            1;
            var c,
            u,
            h = 0,
            _ = '' === t ? f : t + m;
            if (Array.isArray(e)) for (var g = 0; g < e.length; g++) c = e[g],
            u = _ + a(c, g),
            h += s(c, u, n, r);
             else {
              var v = p(e);
              if (v) {
                var E,
                I = v.call(e);
                if (v !== e.entries) for (var b = 0; !(E = I.next()).done; ) c = E.value,
                u = _ + a(c, b++),
                h += s(c, u, n, r);
                 else for (; !(E = I.next()).done; ) {
                  var y = E.value;
                  y &&
                  (c = y[1], u = _ + o(y[0]) + m + a(c, 0), h += s(c, u, n, r))
                }
              } else if ('object' === i) {
                String(e);
                d(!1)
              }
            }
            return h
          }
          function c(e, t, n) {
            return null == e ? 0 : s(e, '', t, n)
          }
          var l = (n(49), n(30)),
          u = n(70),
          p = n(300),
          d = n(5),
          f = (n(9), u.SEPARATOR),
          m = ':',
          h = {
            '=': '=0',
            '.': '=1',
            ':': '=2'
          },
          _ = /[=.:]/g;
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          var r = (n(7), n(36)),
          a = (n(9), r);
          e.exports = a
        },
        function (e, t, n) {
          (
            function (e, r) {
              function a(e, n) {
                var r = {
                  seen: [],
                  stylize: o
                };
                return arguments.length >= 3 &&
                (r.depth = arguments[2]),
                arguments.length >= 4 &&
                (r.colors = arguments[3]),
                h(n) ? r.showHidden = n : n &&
                t._extend(r, n),
                b(r.showHidden) &&
                (r.showHidden = !1),
                b(r.depth) &&
                (r.depth = 2),
                b(r.colors) &&
                (r.colors = !1),
                b(r.customInspect) &&
                (r.customInspect = !0),
                r.colors &&
                (r.stylize = i),
                c(r, e, r.depth)
              }
              function i(e, t) {
                var n = a.styles[t];
                return n ? '[' + a.colors[n][0] + 'm' + e + '[' + a.colors[n][1] + 'm' : e
              }
              function o(e, t) {
                return e
              }
              function s(e) {
                var t = {};
                return e.forEach(function (e, n) {
                  t[e] = !0
                }),
                t
              }
              function c(e, n, r) {
                if (
                  e.customInspect &&
                  n &&
                  D(n.inspect) &&
                  n.inspect !== t.inspect &&
                  (!n.constructor || n.constructor.prototype !== n)
                ) {
                  var a = n.inspect(r, e);
                  return E(a) ||
                  (a = c(e, a, r)),
                  a
                }
                var i = l(e, n);
                if (i) return i;
                var o = Object.keys(n),
                h = s(o);
                if (
                  e.showHidden &&
                  (o = Object.getOwnPropertyNames(n)),
                  C(n) &&
                  (o.indexOf('message') >= 0 || o.indexOf('description') >= 0)
                ) return u(n);
                if (0 === o.length) {
                  if (D(n)) {
                    var _ = n.name ? ': ' + n.name : '';
                    return e.stylize('[Function' + _ + ']', 'special')
                  }
                  if (y(n)) return e.stylize(RegExp.prototype.toString.call(n), 'regexp');
                  if (S(n)) return e.stylize(Date.prototype.toString.call(n), 'date');
                  if (C(n)) return u(n)
                }
                var g = '',
                v = !1,
                I = [
                  '{',
                  '}'
                ];
                if (m(n) && (v = !0, I = [
                  '[',
                  ']'
                ]), D(n)) {
                  var b = n.name ? ': ' + n.name : '';
                  g = ' [Function' + b + ']'
                }
                if (
                  y(n) &&
                  (g = ' ' + RegExp.prototype.toString.call(n)),
                  S(n) &&
                  (g = ' ' + Date.prototype.toUTCString.call(n)),
                  C(n) &&
                  (g = ' ' + u(n)),
                  0 === o.length &&
                  (!v || 0 == n.length)
                ) return I[0] + g + I[1];
                if (0 > r) return y(n) ? e.stylize(RegExp.prototype.toString.call(n), 'regexp') : e.stylize('[Object]', 'special');
                e.seen.push(n);
                var T;
                return T = v ? p(e, n, r, h, o) : o.map(function (t) {
                  return d(e, n, r, h, t, v)
                }),
                e.seen.pop(),
                f(T, g, I)
              }
              function l(e, t) {
                if (b(t)) return e.stylize('undefined', 'undefined');
                if (E(t)) {
                  var n = '\'' + JSON.stringify(t).replace(/^"|"$/g, '').replace(/'/g, '\\\'').replace(/\\"/g, '"') + '\'';
                  return e.stylize(n, 'string')
                }
                return v(t) ? e.stylize('' + t, 'number') : h(t) ? e.stylize('' + t, 'boolean') : _(t) ? e.stylize('null', 'null') : void 0
              }
              function u(e) {
                return '[' + Error.prototype.toString.call(e) + ']'
              }
              function p(e, t, n, r, a) {
                for (var i = [], o = 0, s = t.length; s > o; ++o) x(t, String(o)) ? i.push(d(e, t, n, r, String(o), !0)) : i.push('');
                return a.forEach(function (a) {
                  a.match(/^\d+$/) ||
                  i.push(d(e, t, n, r, a, !0))
                }),
                i
              }
              function d(e, t, n, r, a, i) {
                var o,
                s,
                l;
                if (
                  l = Object.getOwnPropertyDescriptor(t, a) ||
                  {
                    value: t[a]
                  },
                  l.get ? s = l.set ? e.stylize('[Getter/Setter]', 'special') : e.stylize('[Getter]', 'special') : l.set &&
                  (s = e.stylize('[Setter]', 'special')),
                  x(r, a) ||
                  (o = '[' + a + ']'),
                  s ||
                  (
                    e.seen.indexOf(l.value) < 0 ? (
                      s = _(n) ? c(e, l.value, null) : c(e, l.value, n - 1),
                      s.indexOf('\n') > - 1 &&
                      (
                        s = i ? s.split('\n').map(function (e) {
                          return '  ' + e
                        }).join('\n').substr(2) : '\n' + s.split('\n').map(function (e) {
                          return '   ' + e
                        }).join('\n')
                      )
                    ) : s = e.stylize('[Circular]', 'special')
                  ),
                  b(o)
                ) {
                  if (i && a.match(/^\d+$/)) return s;
                  o = JSON.stringify('' + a),
                  o.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o = o.substr(1, o.length - 2), o = e.stylize(o, 'name')) : (
                    o = o.replace(/'/g, '\\\'').replace(/\\"/g, '"').replace(/(^"|"$)/g, '\''),
                    o = e.stylize(o, 'string')
                  )
                }
                return o + ': ' + s
              }
              function f(e, t, n) {
                var r = 0,
                a = e.reduce(
                  function (e, t) {
                    return r++,
                    t.indexOf('\n') >= 0 &&
                    r++,
                    e + t.replace(/\u001b\[\d\d?m/g, '').length + 1
                  },
                  0
                );
                return a > 60 ? n[0] + ('' === t ? '' : t + '\n ') + ' ' + e.join(',\n  ') + ' ' + n[1] : n[0] + t + ' ' + e.join(', ') + ' ' + n[1]
              }
              function m(e) {
                return Array.isArray(e)
              }
              function h(e) {
                return 'boolean' == typeof e
              }
              function _(e) {
                return null === e
              }
              function g(e) {
                return null == e
              }
              function v(e) {
                return 'number' == typeof e
              }
              function E(e) {
                return 'string' == typeof e
              }
              function I(e) {
                return 'symbol' == typeof e
              }
              function b(e) {
                return void 0 === e
              }
              function y(e) {
                return T(e) &&
                '[object RegExp]' === O(e)
              }
              function T(e) {
                return 'object' == typeof e &&
                null !== e
              }
              function S(e) {
                return T(e) &&
                '[object Date]' === O(e)
              }
              function C(e) {
                return T(e) &&
                ('[object Error]' === O(e) || e instanceof Error)
              }
              function D(e) {
                return 'function' == typeof e
              }
              function A(e) {
                return null === e ||
                'boolean' == typeof e ||
                'number' == typeof e ||
                'string' == typeof e ||
                'symbol' == typeof e ||
                'undefined' == typeof e
              }
              function O(e) {
                return Object.prototype.toString.call(e)
              }
              function N(e) {
                return 10 > e ? '0' + e.toString(10) : e.toString(10)
              }
              function w() {
                var e = new Date,
                t = [
                  N(e.getHours()),
                  N(e.getMinutes()),
                  N(e.getSeconds())
                ].join(':');
                return [e.getDate(),
                M[e.getMonth()],
                t].join(' ')
              }
              function x(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
              }
              var R = /%[sdj%]/g;
              t.format = function (e) {
                if (!E(e)) {
                  for (var t = [], n = 0; n < arguments.length; n++) t.push(a(arguments[n]));
                  return t.join(' ')
                }
                for (
                  var n = 1,
                  r = arguments,
                  i = r.length,
                  o = String(e).replace(
                    R,
                    function (e) {
                      if ('%%' === e) return '%';
                      if (n >= i) return e;
                      switch (e) {
                        case '%s':
                          return String(r[n++]);
                        case '%d':
                          return Number(r[n++]);
                        case '%j':
                          try {
                            return JSON.stringify(r[n++])
                          } catch (t) {
                            return '[Circular]'
                          }
                        default:
                          return e
                      }
                    }
                  ),
                  s = r[n];
                  i > n;
                  s = r[++n]
                ) o += _(s) ||
                !T(s) ? ' ' + s : ' ' + a(s);
                return o
              },
              t.deprecate = function (n, a) {
                function i() {
                  if (!o) {
                    if (r.throwDeprecation) throw new Error(a);
                    r.traceDeprecation ? console.trace(a) : console.error(a),
                    o = !0
                  }
                  return n.apply(this, arguments)
                }
                if (b(e.process)) return function () {
                  return t.deprecate(n, a).apply(this, arguments)
                };
                if (r.noDeprecation === !0) return n;
                var o = !1;
                return i
              };
              var L,
              P = {};
              t.debuglog = function (e) {
                if (
                  b(L) &&
                  (
                    L = {
                      NODE_ENV: 'production',
                      PAMPLONA_ENV: 'production',
                      PAMPLONA_CONFIG: '',
                      BUILD_NUMBER: '21',
                      GIT_REVISION: '560420d8c6e8bf7ed232fab881d9fb331ff5b17a',
                      GIT_BRANCH: 'master'
                    }.NODE_DEBUG ||
                    ''
                  ),
                  e = e.toUpperCase(),
                  !P[e]
                ) if (new RegExp('\\b' + e + '\\b', 'i').test(L)) {
                  var n = r.pid;
                  P[e] = function () {
                    var r = t.format.apply(t, arguments);
                    console.error('%s %d: %s', e, n, r)
                  }
                } else P[e] = function () {
                };
                return P[e]
              },
              t.inspect = a,
              a.colors = {
                bold: [
                  1,
                  22
                ],
                italic: [
                  3,
                  23
                ],
                underline: [
                  4,
                  24
                ],
                inverse: [
                  7,
                  27
                ],
                white: [
                  37,
                  39
                ],
                grey: [
                  90,
                  39
                ],
                black: [
                  30,
                  39
                ],
                blue: [
                  34,
                  39
                ],
                cyan: [
                  36,
                  39
                ],
                green: [
                  32,
                  39
                ],
                magenta: [
                  35,
                  39
                ],
                red: [
                  31,
                  39
                ],
                yellow: [
                  33,
                  39
                ]
              },
              a.styles = {
                special: 'cyan',
                number: 'yellow',
                'boolean': 'yellow',
                undefined: 'grey',
                'null': 'bold',
                string: 'green',
                date: 'magenta',
                regexp: 'red'
              },
              t.isArray = m,
              t.isBoolean = h,
              t.isNull = _,
              t.isNullOrUndefined = g,
              t.isNumber = v,
              t.isString = E,
              t.isSymbol = I,
              t.isUndefined = b,
              t.isRegExp = y,
              t.isObject = T,
              t.isDate = S,
              t.isError = C,
              t.isFunction = D,
              t.isPrimitive = A,
              t.isBuffer = n(1722);
              var M = [
                'Jan',
                'Feb',
                'Mar',
                'Apr',
                'May',
                'Jun',
                'Jul',
                'Aug',
                'Sep',
                'Oct',
                'Nov',
                'Dec'
              ];
              t.log = function () {
                console.log('%s - %s', w(), t.format.apply(t, arguments))
              },
              t.inherits = n(1721),
              t._extend = function (e, t) {
                if (!t || !T(t)) return e;
                for (var n = Object.keys(t), r = n.length; r--; ) e[n[r]] = t[n[r]];
                return e
              }
            }
          ).call(t, function () {
            return this
          }(), n(529))
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './AD.png': 824,
            './AE.png': 825,
            './AF.png': 826,
            './AG.png': 827,
            './AI.png': 828,
            './AL.png': 829,
            './AM.png': 830,
            './AN.png': 831,
            './AO.png': 832,
            './AQ.png': 833,
            './AR.png': 834,
            './AS.png': 835,
            './AT.png': 836,
            './AU.png': 837,
            './AW.png': 838,
            './AX.png': 839,
            './AZ.png': 840,
            './BA.png': 841,
            './BB.png': 842,
            './BD.png': 843,
            './BE.png': 844,
            './BF.png': 845,
            './BG.png': 846,
            './BH.png': 847,
            './BI.png': 848,
            './BJ.png': 849,
            './BL.png': 850,
            './BM.png': 851,
            './BN.png': 852,
            './BO.png': 853,
            './BR.png': 854,
            './BS.png': 855,
            './BT.png': 856,
            './BW.png': 857,
            './BY.png': 858,
            './BZ.png': 859,
            './CA.png': 860,
            './CC.png': 861,
            './CD.png': 862,
            './CF.png': 863,
            './CG.png': 864,
            './CH.png': 865,
            './CI.png': 866,
            './CK.png': 867,
            './CL.png': 868,
            './CM.png': 869,
            './CN.png': 870,
            './CO.png': 871,
            './CR.png': 872,
            './CU.png': 873,
            './CV.png': 874,
            './CW.png': 875,
            './CX.png': 876,
            './CY.png': 877,
            './CZ.png': 878,
            './DE.png': 879,
            './DJ.png': 880,
            './DK.png': 881,
            './DM.png': 882,
            './DO.png': 883,
            './DZ.png': 884,
            './EC.png': 885,
            './EE.png': 886,
            './EG.png': 887,
            './EH.png': 888,
            './ER.png': 889,
            './ES.png': 890,
            './ET.png': 891,
            './EU.png': 892,
            './FI.png': 893,
            './FJ.png': 894,
            './FK.png': 895,
            './FM.png': 896,
            './FO.png': 897,
            './FR.png': 898,
            './GA.png': 899,
            './GB.png': 900,
            './GD.png': 901,
            './GE.png': 902,
            './GG.png': 903,
            './GH.png': 904,
            './GI.png': 905,
            './GL.png': 906,
            './GM.png': 907,
            './GN.png': 908,
            './GQ.png': 909,
            './GR.png': 910,
            './GS.png': 911,
            './GT.png': 912,
            './GU.png': 913,
            './GW.png': 914,
            './GY.png': 915,
            './HK.png': 916,
            './HN.png': 917,
            './HR.png': 918,
            './HT.png': 919,
            './HU.png': 920,
            './IC.png': 921,
            './ID.png': 922,
            './IE.png': 923,
            './IL.png': 924,
            './IM.png': 925,
            './IN.png': 926,
            './IQ.png': 927,
            './IR.png': 928,
            './IS.png': 929,
            './IT.png': 930,
            './JE.png': 931,
            './JM.png': 932,
            './JO.png': 933,
            './JP.png': 934,
            './KE.png': 935,
            './KG.png': 936,
            './KH.png': 937,
            './KI.png': 938,
            './KM.png': 939,
            './KN.png': 940,
            './KP.png': 941,
            './KR.png': 942,
            './KW.png': 943,
            './KY.png': 944,
            './KZ.png': 945,
            './LA.png': 946,
            './LB.png': 947,
            './LC.png': 948,
            './LI.png': 949,
            './LK.png': 950,
            './LR.png': 951,
            './LS.png': 952,
            './LT.png': 953,
            './LU.png': 954,
            './LV.png': 955,
            './LY.png': 956,
            './MA.png': 957,
            './MC.png': 958,
            './MD.png': 959,
            './ME.png': 960,
            './MF.png': 961,
            './MG.png': 962,
            './MH.png': 963,
            './MK.png': 964,
            './ML.png': 965,
            './MM.png': 966,
            './MN.png': 967,
            './MO.png': 968,
            './MP.png': 969,
            './MQ.png': 970,
            './MR.png': 971,
            './MS.png': 972,
            './MT.png': 973,
            './MU.png': 974,
            './MV.png': 975,
            './MW.png': 976,
            './MX.png': 977,
            './MY.png': 978,
            './MZ.png': 979,
            './NA.png': 980,
            './NC.png': 981,
            './NE.png': 982,
            './NF.png': 983,
            './NG.png': 984,
            './NI.png': 985,
            './NL.png': 986,
            './NO.png': 987,
            './NP.png': 988,
            './NR.png': 989,
            './NU.png': 990,
            './NZ.png': 991,
            './OM.png': 992,
            './PA.png': 993,
            './PE.png': 994,
            './PF.png': 995,
            './PG.png': 996,
            './PH.png': 997,
            './PK.png': 998,
            './PL.png': 999,
            './PN.png': 1000,
            './PR.png': 1001,
            './PS.png': 1002,
            './PT.png': 1003,
            './PW.png': 1004,
            './PY.png': 1005,
            './QA.png': 1006,
            './RO.png': 1007,
            './RS.png': 1008,
            './RU.png': 1009,
            './RW.png': 1010,
            './SA.png': 1011,
            './SB.png': 1012,
            './SC.png': 1013,
            './SD.png': 1014,
            './SE.png': 1015,
            './SG.png': 1016,
            './SH.png': 1017,
            './SI.png': 1018,
            './SK.png': 1019,
            './SL.png': 1020,
            './SM.png': 1021,
            './SN.png': 1022,
            './SO.png': 1023,
            './SR.png': 1024,
            './SS.png': 1025,
            './ST.png': 1026,
            './SV.png': 1027,
            './SY.png': 1028,
            './SZ.png': 1029,
            './TC.png': 1030,
            './TD.png': 1031,
            './TF.png': 1032,
            './TG.png': 1033,
            './TH.png': 1034,
            './TJ.png': 1035,
            './TK.png': 1036,
            './TL.png': 1037,
            './TM.png': 1038,
            './TN.png': 1039,
            './TO.png': 1040,
            './TR.png': 1041,
            './TT.png': 1042,
            './TV.png': 1043,
            './TW.png': 1044,
            './TZ.png': 1045,
            './UA.png': 1046,
            './UG.png': 1047,
            './US.png': 1048,
            './UY.png': 1049,
            './UZ.png': 1050,
            './VA.png': 1051,
            './VC.png': 1052,
            './VE.png': 1053,
            './VG.png': 1054,
            './VI.png': 1055,
            './VN.png': 1056,
            './VU.png': 1057,
            './WF.png': 1058,
            './WS.png': 1059,
            './YE.png': 1060,
            './YT.png': 1061,
            './ZA.png': 1062,
            './ZM.png': 1063,
            './ZW.png': 1064,
            './_abkhazia.png': 1065,
            './_basque-country.png': 1066,
            './_british-antarctic-territory.png': 1067,
            './_commonwealth.png': 1068,
            './_england.png': 1069,
            './_gosquared.png': 1070,
            './_kosovo.png': 1071,
            './_mars.png': 1072,
            './_nagorno-karabakh.png': 1073,
            './_nato.png': 1074,
            './_northern-cyprus.png': 1075,
            './_olympics.png': 1076,
            './_red-cross.png': 1077,
            './_scotland.png': 1078,
            './_somaliland.png': 1079,
            './_south-ossetia.png': 1080,
            './_united-nations.png': 1081,
            './_unknown.png': 1082,
            './_wales.png': 1083
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 308
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './blocks_01.jpg': 1108,
            './blocks_02.jpg': 1109,
            './blocks_03.jpg': 1110,
            './crystaline_01.jpg': 1111,
            './crystaline_02.jpg': 1112,
            './crystaline_03.jpg': 1113,
            './crystaline_04.jpg': 1114,
            './crystaline_05.jpg': 1115,
            './crystaline_06.jpg': 1116,
            './crystaline_07.jpg': 1117,
            './crystaline_08.jpg': 1118,
            './grid_01.jpg': 1119,
            './grid_02.jpg': 1120,
            './grid_03.jpg': 1121,
            './grid_04.jpg': 1122,
            './grid_05.jpg': 1123,
            './hex_01.jpg': 1124,
            './hex_02.jpg': 1125,
            './hex_03.jpg': 1126,
            './organic_01.jpg': 1127,
            './organic_02.jpg': 1128,
            './organic_03.jpg': 1129,
            './organic_04.jpg': 1130,
            './organic_05.jpg': 1131,
            './preorder_combat_bg.jpg': 1132,
            './preorder_speedrunner_bg.jpg': 1133,
            './renewed_faith_reward_bg.jpg': 1134,
            './spheres_01.jpg': 1135,
            './spheres_02.jpg': 1136,
            './spheres_03.jpg': 1137,
            './spheres_04.jpg': 1138
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 309
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './3-stars.png': 1139,
            './anchor.png': 1140,
            './angel-wings.png': 1141,
            './battlefield-dog-tag.png': 1142,
            './bee.png': 1143,
            './big-thick-book.png': 1144,
            './black-november.png': 1145,
            './bop-Interceptor.png': 1146,
            './bop-apex.png': 1147,
            './bop-chaser.png': 1148,
            './bop-deer.png': 1149,
            './bop-longranger.png': 1150,
            './bop-lowflier.png': 1151,
            './bop-predator.png': 1152,
            './bop-stalker.png': 1153,
            './butterfly.png': 1154,
            './c4.png': 1155,
            './cat-profile.png': 1156,
            './chains.png': 1157,
            './che-noah.png': 1158,
            './cheetah.png': 1159,
            './claw-marks.png': 1160,
            './closed-fist-revolutionary.png': 1161,
            './closed-fist.png': 1162,
            './cowboyhat-and-bandana.png': 1163,
            './crocodile.png': 1164,
            './delivery.png': 1165,
            './destoyed-security-camera.png': 1166,
            './dice-logo.png': 1167,
            './double-dragon.png': 1168,
            './ea-frostbite.png': 1169,
            './ea-logo.png': 1170,
            './falling-dominoes.png': 1171,
            './feather-2.png': 1172,
            './feather.png': 1173,
            './fist.png': 1174,
            './fly.png': 1175,
            './geococcyx.png': 1176,
            './ghost.png': 1177,
            './gift.png': 1178,
            './glass-pieces.png': 1179,
            './hood.png': 1180,
            './huma-persepolis.png': 1181,
            './hunter.png': 1182,
            './ikarus_portrait.png': 1183,
            './jacknife.png': 1184,
            './july-revolution.png': 1185,
            './key.png': 1186,
            './leon.png': 1187,
            './lion.png': 1188,
            './me-logo.png': 1189,
            './mercury-god-helmet.png': 1190,
            './mountain-peak.png': 1191,
            './open-hand-with-droplet.png': 1192,
            './pickpocketing-hand.png': 1193,
            './pigeon.png': 1194,
            './pith-helmet.png': 1195,
            './queen.png': 1196,
            './ram.png': 1197,
            './rat.png': 1198,
            './rising-sun.png': 1199,
            './shattered-enforcer-helmet.png': 1200,
            './shattered-glass-panel.png': 1201,
            './shattered-light-bulb.png': 1202,
            './shattered-oldschool-footprint.png': 1203,
            './shattered-protector-helmet.png': 1204,
            './shattered-shock-protector-helmet.png': 1205,
            './shattered-turret.png': 1206,
            './shattered_senteniel_armor.png': 1207,
            './shattered_senteniel_helmet.png': 1208,
            './shatteret-padlock.png': 1209,
            './shatteret-shard-building.png': 1210,
            './singe-bird-wing.png': 1211,
            './small-book.png': 1212,
            './spider.png': 1213,
            './stallion.png': 1214,
            './target.png': 1215,
            './thumbs-crossed.png': 1216,
            './thumbs-up.png': 1217,
            './tiger.png': 1218,
            './two-pigeons.png': 1219
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 310
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './Basic_Arrow.png': 1301,
            './Basic_Circle.png': 1302,
            './Basic_Diamond.png': 1303,
            './Basic_Hexagon.png': 1304,
            './Basic_Octagon.png': 1305,
            './Basic_Pentagon.png': 1306,
            './Basic_Shield.png': 1307,
            './Basic_Square.png': 1308,
            './Basic_Star.png': 1309,
            './Basic_Triangle.png': 1310,
            './Elite_Arrow.png': 1311,
            './Elite_Blades.png': 1312,
            './Elite_Buzzsaw.png': 1313,
            './Elite_Circle.png': 1314,
            './Elite_Hexagon.png': 1315,
            './Elite_Nova_Prime.png': 1316,
            './Elite_Pentagon.png': 1317,
            './Elite_Prism.png': 1318,
            './Elite_Razor_Claw.png': 1319,
            './Elite_Shield.png': 1320,
            './Elite_Shift.png': 1321,
            './Elite_Shinobi.png': 1322,
            './Elite_Shuriken.png': 1323,
            './Elite_The_Hood.png': 1324,
            './Evolved_Arrow.png': 1325,
            './Evolved_Celtic.png': 1326,
            './Evolved_Circle.png': 1327,
            './Evolved_Cross.png': 1328,
            './Evolved_Crusher.png': 1329,
            './Evolved_Frame.png': 1330,
            './Evolved_Hexagon.png': 1331,
            './Evolved_Hexangle.png': 1332,
            './Evolved_Invincible.png': 1333,
            './Evolved_Nova.png': 1334,
            './Evolved_Shield.png': 1335,
            './Evolved_Square.png': 1336,
            './Evolved_Triburst.png': 1337,
            './Evolved_Triforce.png': 1338
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 311
        },
        [
          1734,
          556,
          557,
          71
        ],
        [
          1740,
          558,
          560,
          561
        ],
        [
          1737,
          576,
          578,
          315
        ],
        [
          1734,
          582,
          583,
          21
        ],
        [
          1740,
          584,
          586,
          587
        ],
        function (e, t, n) {
          function r(e, t) {
            return e = 'number' == typeof e ||
            l.test(e) ? + e : - 1,
            t = null == t ? d : t,
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          function a(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            d >= e
          }
          function i(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function o(e) {
            if (null == e) return [];
            i(e) ||
            (e = Object(e));
            var t = e.length;
            t = t &&
            a(t) &&
            (c(e) || s(e)) &&
            t ||
            0;
            for (
              var n = e.constructor,
              o = - 1,
              l = 'function' == typeof n &&
              n.prototype === e,
              u = Array(t),
              d = t > 0;
              ++o < t;
            ) u[o] = o + '';
            for (var f in e) d &&
            r(f, t) ||
            'constructor' == f &&
            (l || !p.call(e, f)) ||
            u.push(f);
            return u
          }
          var s = n(630),
          c = n(21),
          l = /^\d+$/,
          u = Object.prototype,
          p = u.hasOwnProperty,
          d = 9007199254740991;
          e.exports = o
        },
        [
          1736,
          645
        ],
        function (e, t, n) {
          'use strict';
          var r = n(26),
          a = function i() {
            r.analytics.enabled &&
            window.GoogleAnalyticsObject &&
            (
              window[window.GoogleAnalyticsObject] === i ? i.q.push(arguments) : window[window.GoogleAnalyticsObject].apply(this, arguments),
              r.analytics.logEnabled &&
              console.log('ga', arguments)
            )
          };
          a.q = [],
          a.l = 1 * new Date,
          a.init = function (e) {
            if (r.analytics.enabled && !e) {
              window.GoogleAnalyticsObject = 'ga',
              window.ga = a,
              a('create', r.analytics.gaId, 'auto');
              var t = document.createElement('script');
              t.src = '//www.google-analytics.com/analytics.js',
              t.async = !0;
              var n = document.getElementsByTagName('script') [0];
              n.parentNode.insertBefore(t, n)
            }
          },
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(2),
          s = n(68),
          c = n(91).EventEmitter,
          l = n(31),
          u = n(72),
          p = n(653),
          d = n(651),
          f = n(73),
          m = n(4),
          h = n(142),
          _ = n(343),
          g = n(344),
          v = n(24).RouterStore,
          E = n(327),
          I = [
            'billboardHack',
            'delivery',
            'diversion',
            'gridNode',
            'missionMain',
            'missionSide',
            'player',
            'reachThis',
            'runnerKit',
            'runnersRoute',
            'safeHouse',
            'securityHub',
            'thebeat',
            'timeTrial',
            'Anchor_01_District',
            'Anchor_02_Plastic',
            'Anchor_03_AnansiEmporium',
            'Anchor_04_CityAlert',
            'Anchor_05_AllCom',
            'Anchor_GridLeaks',
            'Anchor_GridNodes',
            'Anchor_ReflectionHubs',
            'Downtown_01_District',
            'Downtown_02_RunnersLair',
            'Downtown_03_TheRunners',
            'Downtown_04_Dashes',
            'Downtown_05_ElysiumBuilding',
            'Downtown_BeatLE',
            'Downtown_BillboardHacking',
            'Downtown_TimeTrials',
            'OmnistatTunnels_01_BlackNovember',
            'OmnistatTunnels_02_Rebecca',
            'OmnistatTunnels_03_SentryTurretsSniper',
            'OmnistatTunnels_04_OmnistatAgent',
            'OmnistatTunnels_05_HistoryLesson',
            'Rezoning_01_District',
            'Rezoning_02_CallahanConstruction',
            'Rezoning_03_Enforcer',
            'Rezoning_04_ShockProtector',
            'Rezoning_05_Protector'
          ],
          b = function () {
            var e = this;
            c.call(this);
            var t = null;
            m.addChangeListener(
              function () {
                if (m.getIsReady()) {
                  var n = m.getIsLoggedIn() ||
                  m.getIsGuest();
                  null === t ? (t = n, n && (console.log('Emit initial login'), e.emit('login'))) : t !== n &&
                  (
                    n ? (console.log('Emit login'), e.emit('login')) : (console.log('Emit logout'), e.emit('logout')),
                    t = n
                  )
                }
              }
            );
            var n = (v.getRoutePrefix() || '') + v.getCurrentPath();
            v.addChangeListener(
              function () {
                var t = (v.getRoutePrefix() || '') + v.getCurrentPath();
                n !== t &&
                (
                  console.log('Emit route change: ' + t),
                  e.emit('routeChange', t),
                  n = t
                )
              }
            ),
            h.addChangeListener(
              function () {
                e.emit('notificationsChange', e.getNotifications())
              }
            )
          };
          b.prototype.closePanels = function () {
            l.reset()
          },
          b.prototype.login = function () {
            m.getIsLoggedIn() ||
            m.getIsGuest() ? console.log('Already logged in') : (console.log('Start Origin login...'), u.showLogin())
          },
          b.prototype.logout = function () {
            m.getIsLoggedIn() ? (console.log('Start Origin logout...'), u.showLogout()) : m.getIsGuest() ? (console.log('Start guest logout...'), f.logoutAsGuest()) : console.log('Already logged out')
          },
          b.prototype.pauseMap = function (e) {
            p.mapState(e)
          },
          b.prototype.addIntel = function (e) {
            e = e.filter(
              function (e) {
                return - 1 === I.indexOf(e.icon) ? (console.error('Invalid icon for hotspot: ' + e.icon), !1) : !0
              }
            ),
            d.addIntel(e)
          },
          b.prototype.removeIntel = function (e) {
            d.removeIntel(e)
          },
          b.prototype.clearIntel = function () {
            d.resetIntel()
          },
          b.prototype.renderUserWidget = function (e, t) {
            s.render(
              o.createElement(
                'div',
                void 0 === t ||
                t ? {
                  className: 'companion-app'
                }
                 : {
                },
                o.createElement(
                  'div',
                  {
                    className: 'user-widget'
                  },
                  o.createElement(_),
                  o.createElement(g)
                )
              ),
              e
            )
          },
          b.prototype.getNotifications = function () {
            var e = h.getNotifications();
            if (!e) return null;
            var t = e.slice(0).sort(function (e, t) {
              return t.timestamp - e.timestamp
            });
            return t.map(function (e) {
              return E(e)
            }).filter(function (e) {
              return void 0 !== e
            })
          },
          b.prototype.getPersonaId = function () {
            if (!m.getIsLoggedIn()) return null;
            var e = m.getCurrentPersona();
            return e ? e.personaId : null
          },
          b.prototype.getProfileUrl = function () {
            var e = this.getPersonaId();
            return e ? v.createPath('profile', {
              id: e
            }) : null
          },
          b.prototype.setPath = function (e) {
            l.navigatePath(e)
          },
          (0, i['default']) (b.prototype, c.prototype),
          e.exports = new b
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(100).Dispatcher,
          s = n(6),
          c = (0, i['default']) (
            new o,
            {
              handleRouterAction: function (e) {
                var t = {
                  source: s.PayloadSources.ROUTER_ACTION,
                  action: e
                };
                this.dispatch(t)
              }
            }
          );
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            set: function (e) {
              r.handleViewAction({
                type: a.SETTINGS_SET,
                settings: e
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(456);
          e.exports = r({
            APP_START: null,
            SESSION_VALIDATED: null,
            SESSION_INVALIDATED: null,
            SESSION_LOGIN_GUEST: null,
            SESSION_LOGOUT_GUEST: null,
            SESSION_ACCEPT_SHARING: null,
            SESSION_DISMISS_WELCOME: null,
            ROUTER_NAVIGATE: null,
            ROUTER_NAVIGATE_PATH: null,
            ROUTER_REPLACE: null,
            ROUTER_BACK: null,
            ROUTER_CLOSE: null,
            LEGEND_SYNC: null,
            LEGEND_ADD: null,
            LEGEND_REMOVE: null,
            EMBLEM_SET: null,
            EMBLEM_EDIT: null,
            EMBLEM_RESET: null,
            BOOKMARK_SYNC: null,
            BOOKMARK_ADD_UGC: null,
            BOOKMARK_ADD_CHALLENGE: null,
            BOOKMARK_REMOVE: null,
            ORIGIN_SHOW_LOGIN: null,
            ORIGIN_HIDE_LOGIN: null,
            ORIGIN_SHOW_LOGOUT: null,
            ORIGIN_HIDE_LOGOUT: null,
            ORIGIN_ACCEPT_TOS: null,
            ORIGIN_SET_GUEST: null,
            UGCDATA_REQUEST: null,
            UGCDATA: null,
            UGCDATA_ERROR: null,
            SETTINGS_SET: null,
            INTEL_ADD: null,
            INTEL_REMOVE: null,
            INTEL_RESET: null,
            MAP_PAUSED: null,
            DEVTOOLS_SHOW: null,
            DEVTOOLS_HIDE: null
          })
        },
        function (e, t) {
          'use strict';
          function n() {
            var e = !!window.matchMedia('(min-width: 1400px)').matches,
            t = !e &&
            !!window.matchMedia('(min-width: 769px)').matches,
            n = !e &&
            !t;
            return e ? 'desktop' : t ? 'tablet' : n ? 'mobile' : void 0
          }
          t.getDevice = n
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(15),
          i = n(326);
          n(782);
          var o = r.createClass({
            displayName: 'LocationCreator',
            getInitialState: function () {
              return {
                locationList: null,
                hover: !1
              }
            },
            componentWillUnmount: function () {
              this.clearTimer(),
              removeEventListener('mousedown', this.click, !1)
            },
            componentDidMount: function () {
              addEventListener('mousedown', this.click, !1)
            },
            search: function (e) {
              this.clearTimer();
              var t = e.target.value,
              n = this;
              this.delayTimer = setTimeout(
                function () {
                  t.length >= 3 &&
                  a.request('PamplonaAuthenticated.geoQuery', {
                    query: t
                  }).then(function (e) {
                    n.setState({
                      locationList: e.areas
                    })
                  })
                },
                1000
              )
            },
            processData: function (e, t) {
              this.props.clicked(e, t),
              this.clearFields()
            },
            click: function (e) {
              this.clearTimer(),
              this.refs.locationContainer.contains(e.target) ||
              this.clearFields()
            },
            clearFields: function () {
              this.refs.locationField.value = '',
              this.setState({
                locationList: ''
              })
            },
            clearTimer: function () {
              clearTimeout(this.delayTimer)
            },
            renderInputField: function () {
              var e,
              t = this;
              return this.state.locationList &&
              (
                e = r.createElement(
                  'div',
                  {
                    className: 'locationList',
                    ref: 'locationList'
                  },
                  this.state.locationList.map(
                    function (e, n) {
                      return r.createElement(
                        'a',
                        {
                          key: 'location' + n,
                          onClick: function () {
                            t.processData(e.id, e)
                          }
                        },
                        i(e)
                      )
                    }
                  )
                )
              ),
              r.createElement(
                'div',
                {
                  className: 'locationContainer',
                  ref: 'locationContainer'
                },
                r.createElement(
                  'input',
                  {
                    type: 'text',
                    className: 'locationField',
                    ref: 'locationField',
                    onKeyUp: this.search
                  }
                ),
                e
              )
            },
            render: function () {
              var e = this.renderInputField();
              return e
            }
          });
          e.exports = o
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(16),
              a = {
                Alabama: 'AL',
                Alaska: 'AK',
                'American Samoa': 'AS',
                Arizona: 'AZ',
                Arkansas: 'AR',
                California: 'CA',
                Colorado: 'CO',
                Connecticut: 'CT',
                Delaware: 'DE',
                'District Of Columbia': 'DC',
                'Federated States Of Micronesia': 'FM',
                Florida: 'FL',
                Georgia: 'GA',
                Guam: 'GU',
                Hawaii: 'HI',
                Idaho: 'ID',
                Illinois: 'IL',
                Indiana: 'IN',
                Iowa: 'IA',
                Kansas: 'KS',
                Kentucky: 'KY',
                Louisiana: 'LA',
                Maine: 'ME',
                'Marshall Islands': 'MH',
                Maryland: 'MD',
                Massachusetts: 'MA',
                Michigan: 'MI',
                Minnesota: 'MN',
                Mississippi: 'MS',
                Missouri: 'MO',
                Montana: 'MT',
                Nebraska: 'NE',
                Nevada: 'NV',
                'New Hampshire': 'NH',
                'New Jersey': 'NJ',
                'New Mexico': 'NM',
                'New York': 'NY',
                'North Carolina': 'NC',
                'North Dakota': 'ND',
                'Northern Mariana Islands': 'MP',
                Ohio: 'OH',
                Oklahoma: 'OK',
                Oregon: 'OR',
                Palau: 'PW',
                Pennsylvania: 'PA',
                'Puerto Rico': 'PR',
                'Rhode Island': 'RI',
                'South Carolina': 'SC',
                'South Dakota': 'SD',
                Tennessee: 'TN',
                Texas: 'TX',
                Utah: 'UT',
                Vermont: 'VT',
                'Virgin Islands': 'VI',
                Virginia: 'VA',
                Washington: 'WA',
                'West Virginia': 'WV',
                Wisconsin: 'WI',
                Wyoming: 'WY'
              };
              e.exports = function (e) {
                Array.isArray(e) ||
                (e = [
                  e
                ]);
                var n = '',
                i = r(e, function (e) {
                  return 'locality' === e.type
                });
                i &&
                (n += i.name + ', ');
                var o = r(e, function (e) {
                  return 'state' === e.type
                });
                o &&
                (n += (i && a[o.name] || o.name) + ', ');
                var s = r(e, function (e) {
                  return 'country' === e.type
                });
                return s ? n += t('ID_COUNTRY_' + s.cc) : o ? n += t('ID_COUNTRY_' + o.cc) : i &&
                (n += t('ID_COUNTRY_' + i.cc)),
                n ||
                null
              }
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(16),
              a = n(37),
              i = n(135),
              o = n(24).RouterStore,
              s = n(455),
              c = n(453);
              e.exports = function (e) {
                var n = {};
                if ('newTimeTrialRecord' === e.type) n.message = e.fromPersonaName + ' ' + t('ID_WEB_NOTIFICATIONS_SET_A_RECORD') + (e.data.contentName || t('ID_WEB_NOTIFICATIONS_A_CHALLENGE')),
                n.route = {
                  name: 'TimeTrial',
                  params: {
                    platform: e.platform,
                    userId: e.data.ugcId.userId,
                    id: e.data.ugcId.id
                  }
                };
                 else if ('newChallengeRecord' === e.type) {
                  var l = r(s, {
                    contentId: e.data.contentId
                  });
                  if (l) n.message = e.fromPersonaName + ' ' + t('ID_WEB_NOTIFICATIONS_SET_A_RECORD') + (t(l.displayName) || t('ID_WEB_NOTIFICATIONS_A_CHALLENGE')),
                  n.route = {
                    name: 'RunnersRoute',
                    params: {
                      platform: e.platform,
                      id: l.id
                    }
                  };
                   else {
                    var u = r(c, {
                      contentId: e.data.contentId
                    });
                    if (!u) return;
                    n.message = i(
                      t('ID_SGM_BEAT_YOU_BILLBOARD').toLowerCase(),
                      [
                        e.fromPersonaName,
                        t(u.displayName) ||
                        t('ID_WEB_NOTIFICATIONS_A_CHALLENGE')
                      ]
                    ),
                    n.route = {
                      name: 'HackableBillboard',
                      params: {
                        platform: e.platform,
                        id: u.id
                      }
                    }
                  }
                } else if ('createdUgc' === e.type) if (
                  n.message = e.fromPersonaName + ' ' + t('ID_WEB_NOTIFICATIONS_CREATED') + ' ',
                  144833713 === e.data.contentKey
                ) n.message += t('ID_WEB_MAP_TIMETRIAL'),
                n.route = {
                  name: 'TimeTrial',
                  params: {
                    platform: e.platform,
                    userId: e.data.ugcId.userId,
                    id: e.data.ugcId.id
                  }
                };
                 else {
                  if (2214567805 !== e.data.contentKey) return;
                  n.message += t('ID_WEB_MAP_REACHTHIS'),
                  n.route = {
                    name: 'ReachThis',
                    params: {
                      platform: e.platform,
                      userId: e.data.ugcId.userId,
                      id: e.data.ugcId.id
                    }
                  }
                } else {
                  if ('touchedReachThis' !== e.type) return;
                  n.message = e.fromPersonaName + ' ' + t('ID_WEB_NOTIFICATIONS_FOUND') + ' ' + t('ID_WEB_TITLE_REACHTHIS'),
                  e.data.contentName &&
                  (n.message += ' - ' + e.data.contentName),
                  n.route = {
                    name: 'ReachThis',
                    params: {
                      platform: e.platform,
                      userId: e.data.ugcId.userId,
                      id: e.data.ugcId.id
                    }
                  }
                }
                return n.url = o.createPath(n.route.name, n.route.params),
                n.time = a.friendlyTimeStamp(1000 * e.timestamp),
                n
              }
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(55),
          i = r(a),
          o = n(776),
          s = {};
          e.exports = function (e) {
            return new i['default'](
              function (t, n) {
                var r = e.filter(function (e) {
                  return s[e] !== !0
                });
                r.length ||
                t(),
                i['default'].all(
                  r.map(
                    function (e) {
                      if (!s[e]) {
                        var n = new o(e);
                        s[e] = new i['default'](function (e, t) {
                          n.check().then(e, e)
                        }),
                        s[e].then(function () {
                          return s[e] = !0
                        })
                      }
                      return s[e].then(t)
                    }
                  )
                ).then(t)
              }
            )
          }
        },
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.map(function (e) {
              return {
                id: e.id,
                meta: e
              }
            })
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1474),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.map(function (e) {
              return {
                id: e.id,
                meta: e
              }
            })
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1477),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.map(function (e) {
              return {
                id: e.id,
                meta: e
              }
            })
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1479),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            u = e
          }
          function i() {
            u = null
          }
          var o = n(3),
          s = r(o),
          c = n(12),
          l = n(14),
          u = null,
          p = (0, s['default']) ({
          }, c, {
            getInventory: function () {
              return u
            },
            getItems: function () {
              return u &&
              u.items
            },
            getKits: function () {
              return u &&
              u.kits
            }
          });
          p.gatewayDispatchToken = l.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'PamplonaAuthenticated.getInventory':
                  a(t.data),
                  p.emitChange();
                  break;
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  p.emitChange()
              }
            }
          ),
          e.exports = p
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return l(h, function (t) {
              return t.id === e
            })
          }
          function i(e, t) {
            e.forEach(
              function (e, n) {
                var r,
                i = e.id ||
                e.meta &&
                e.meta.id ||
                t[n],
                o = (0, c['default']) ({
                }, e);
                r = e.meta ? e.meta : l(m, function (e) {
                  return e.id === i
                });
                var s = a(i);
                s ? (0, c['default']) (s, o, {
                  id: i,
                  meta: r
                }) : (
                  o = (0, c['default']) ({
                  }, o, {
                    id: i,
                    meta: r
                  }),
                  h.push((0, c['default']) ({
                  }, o))
                )
              }
            )
          }
          function o() {
            var e = [],
            t = [];
            m.map(function (n) {
              e.push({
                meta: n
              }),
              t.push({
                id: n.id
              })
            }),
            i(e, t)
          }
          var s = n(3),
          c = r(s),
          l = n(16),
          u = n(12),
          p = n(6).ActionTypes,
          d = n(10),
          f = n(14),
          m = n(1482),
          h = [],
          _ = (0, c['default']) ({
          }, u, {
            getAll: function () {
              return h
            }
          });
          _.dispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case p.APP_START:
                  o(),
                  _.emitChange()
              }
            }
          ),
          _.gatewayDispatchToken = f.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  o(),
                  _.emitChange()
              }
            }
          ),
          e.exports = _
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return l(h, function (t) {
              return t.id === e
            })
          }
          function i(e, t) {
            e.forEach(
              function (e, n) {
                var r,
                i = e.id ||
                e.meta &&
                e.meta.id ||
                t[n],
                o = (0, c['default']) ({
                }, e);
                r = e.meta ? e.meta : l(m, function (e) {
                  return e.id === i
                });
                var s = a(i);
                s ? (0, c['default']) (s, o, {
                  id: i,
                  meta: r
                }) : (
                  o = (0, c['default']) ({
                  }, o, {
                    id: i,
                    meta: r
                  }),
                  h.push((0, c['default']) ({
                  }, o))
                )
              }
            )
          }
          function o() {
            var e = [],
            t = [];
            m.map(function (n) {
              e.push({
                meta: n
              }),
              t.push({
                id: n.id
              })
            }),
            i(e, t)
          }
          var s = n(3),
          c = r(s),
          l = n(16),
          u = n(12),
          p = n(6).ActionTypes,
          d = n(10),
          f = n(14),
          m = n(1483),
          h = [],
          _ = (0, c['default']) ({
          }, u, {
            getAll: function () {
              return h
            }
          });
          _.dispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case p.APP_START:
                  o(),
                  _.emitChange()
              }
            }
          ),
          _.gatewayDispatchToken = f.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  o(),
                  _.emitChange()
              }
            }
          ),
          e.exports = _
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.map(function (e) {
              return {
                id: e.id,
                meta: e
              }
            })
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1484),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(68),
              i = n(8),
              o = n(19),
              s = n(20),
              c = n(327),
              l = n(24).RouterStore,
              u = n(4),
              p = n(142),
              d = n(45),
              f = n(15);
              n(800);
              var m = r.createClass({
                displayName: 'Notifications',
                mixins: [
                  i.create(u, l, p)
                ],
                getInitialState: function () {
                  return {
                    showNotifyPopup: !1
                  }
                },
                componentDidMount: function () {
                  addEventListener('mousedown', this.onWindowClick, !1),
                  addEventListener('touchstart', this.onWindowClick, !1)
                },
                componentWillUnmount: function () {
                  removeEventListener('mousedown', this.onWindowClick, !1),
                  removeEventListener('touchstart', this.onWindowClick, !1)
                },
                componentDidUpdate: function (e, t) {
                  t.currentRoute !== this.state.currentRoute ? this.closeNotifyPopup() : !t.showNotifyPopup &&
                  this.state.showNotifyPopup &&
                  f.getNotifications()
                },
                getStateFromStore: function () {
                  return {
                    currentRoute: l.getCurrentState(),
                    isLoggedIn: u.getIsLoggedIn(),
                    notifications: p.getNotifications(),
                    runnersRoutes: d.getAll(),
                    hideWidget: !l.getIsEmbedded() &&
                    !l.isActive('home') &&
                    !l.isActive('map')
                  }
                },
                onClearClick: function () {
                  f.updateLastReadNotificationTimestamp()
                },
                onWindowClick: function (e) {
                  this.state.showNotifyPopup !== !0 ||
                  a.findDOMNode(this).contains(e.target) ||
                  this.closeNotifyPopup()
                },
                closeNotifyPopup: function () {
                  this.setState({
                    showNotifyPopup: !1
                  })
                },
                toggleNotifyPopup: function () {
                  this.setState({
                    showNotifyPopup: !this.state.showNotifyPopup
                  })
                },
                render: function () {
                  if (!this.state.isLoggedIn) return null;
                  var e;
                  if (this.state.notifications) {
                    var n = this.state.notifications.slice().sort(function (e, t) {
                      return t.timestamp - e.timestamp
                    });
                    e = n.map(function (e) {
                      return c(e)
                    }).filter(function (e) {
                      return void 0 !== e
                    }).map(
                      function (e, t) {
                        return r.createElement(
                          s,
                          {
                            to: e.route.name,
                            params: e.route.params,
                            key: t,
                            className: 'notification'
                          },
                          e.message,
                          r.createElement('div', {
                            className: 'time'
                          }, e.time)
                        )
                      }
                    )
                  }
                  var a;
                  return this.state.showNotifyPopup &&
                  (
                    a = r.createElement(
                      'div',
                      {
                        className: 'notify-popup'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'dynamic_notifications'
                        },
                        e &&
                        e.length ? e : r.createElement('div', {
                          className: 'message'
                        }, t('ID_WEB_NOTIFICATIONS_NONEW'))
                      ),
                      e &&
                      e.length ? r.createElement(
                        'button',
                        {
                          type: 'button',
                          className: 'clearNotificationsButton',
                          onClick: this.onClearClick
                        },
                        r.createElement('i', {
                          className: 'fa fa-trash'
                        })
                      ) : null
                    )
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'notifications'
                    },
                    r.createElement(
                      'div',
                      {
                        className: o('notify-widget', {
                          hidden: this.state.hideWidget
                        }),
                        onClick: this.toggleNotifyPopup
                      },
                      e &&
                      e.length ? r.createElement('div', {
                        className: 'notify-count'
                      }, e.length) : null
                    ),
                    a
                  )
                }
              });
              e.exports = m
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(68),
              i = n(8),
              o = n(19),
              s = n(72),
              c = n(20),
              l = n(4),
              u = n(17),
              p = n(24).RouterStore,
              d = n(75);
              n(815);
              var f = r.createClass({
                displayName: 'ProfileWidget',
                mixins: [
                  i.create(u, l, p)
                ],
                componentDidMount: function () {
                  addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  removeEventListener('mousedown', this.pageClick, !1)
                },
                getStateFromStore: function () {
                  return {
                    isLoggedIn: l.getIsLoggedIn(),
                    currentPersona: l.getCurrentPersona(),
                    showProfilePopup: !1,
                    profileEmblem: l.getIsLoggedIn() ? u.getPlayerEmblem() : null,
                    hideWidget: !p.getIsEmbedded() &&
                    !p.isActive('home') &&
                    !p.isActive('map')
                  }
                },
                pageClick: function (e) {
                  this.state.showProfilePopup !== !0 ||
                  a.findDOMNode(this).contains(e.target) ||
                  this.setState({
                    showProfilePopup: !1
                  })
                },
                logoutClick: function () {
                  this.toggleProfilePopup(),
                  s.showLogout()
                },
                toggleProfilePopup: function () {
                  this.setState({
                    showProfilePopup: !this.state.showProfilePopup
                  })
                },
                render: function () {
                  if (!this.state.isLoggedIn) return null;
                  var e;
                  return this.state.showProfilePopup &&
                  (
                    e = r.createElement(
                      'div',
                      {
                        className: 'profile-widget-popup'
                      },
                      r.createElement(
                        c,
                        {
                          to: 'profile',
                          params: {
                            platform: this.state.currentPersona.platform,
                            id: this.state.currentPersona.personaId
                          }
                        },
                        t('ID_WEB_NAV_VIEW_PROFILE')
                      ),
                      r.createElement(
                        'a',
                        {
                          onClick: this.logoutClick,
                          style: {
                            cursor: 'pointer'
                          }
                        },
                        t('ID_WEB_COMMON_LOGOUT')
                      )
                    )
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'myprofile'
                    },
                    r.createElement(
                      'div',
                      {
                        className: o('profile-widget', {
                          hidden: this.state.hideWidget
                        }),
                        onClick: this.toggleProfilePopup
                      },
                      r.createElement(
                        d,
                        {
                          emblem: {
                            bg: {
                              source: null,
                              size: {
                                height: 44,
                                width: 44
                              },
                              margin: {
                                top: 0,
                                left: 0
                              }
                            },
                            detail: {
                              source: this.state.profileEmblem.detail,
                              size: {
                                height: 40,
                                width: 40
                              },
                              margin: {
                                top: 2,
                                left: 2
                              }
                            },
                            frame: {
                              source: this.state.profileEmblem.frame,
                              size: {
                                height: 40,
                                width: 40
                              },
                              margin: {
                                top: 2,
                                left: 2
                              }
                            }
                          }
                        }
                      )
                    ),
                    e
                  )
                }
              });
              e.exports = f
            }
          ).call(t, n(1))
        },
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          t.__esModule = !0;
          var a = n(3),
          i = r(a);
          t['default'] = i['default'] ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n) Object.prototype.hasOwnProperty.call(n, r) &&
              (e[r] = n[r])
            }
            return e
          }
        },
        ,
        function (e, t, n) {
          var r = n(79),
          a = n(33) ('toStringTag'),
          i = 'Arguments' == r(function () {
            return arguments
          }());
          e.exports = function (e) {
            var t,
            n,
            o;
            return void 0 === e ? 'Undefined' : null === e ? 'Null' : 'string' == typeof (n = (t = Object(e)) [a]) ? n : i ? r(t) : 'Object' == (o = r(t)) &&
            'function' == typeof t.callee ? 'Arguments' : o
          }
        },
        function (e, t, n) {
          var r = n(79);
          e.exports = Object('z').propertyIsEnumerable(0) ? Object : function (e) {
            return 'String' == r(e) ? e.split('') : Object(e)
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(148),
          a = n(81),
          i = n(150),
          o = n(147),
          s = n(146),
          c = n(82),
          l = n(750),
          u = n(97),
          p = n(29).getProto,
          d = n(33) ('iterator'),
          f = !([].keys && 'next' in [].keys()),
          m = '@@iterator',
          h = 'keys',
          _ = 'values',
          g = function () {
            return this
          };
          e.exports = function (e, t, n, v, E, I, b) {
            l(n, t, v);
            var y,
            T,
            S = function (e) {
              if (!f && e in O) return O[e];
              switch (e) {
                case h:
                  return function () {
                    return new n(this, e)
                  };
                case _:
                  return function () {
                    return new n(this, e)
                  }
              }
              return function () {
                return new n(this, e)
              }
            },
            C = t + ' Iterator',
            D = E == _,
            A = !1,
            O = e.prototype,
            N = O[d] ||
            O[m] ||
            E &&
            O[E],
            w = N ||
            S(E);
            if (N) {
              var x = p(w.call(new e));
              u(x, C, !0),
              !r &&
              s(O, m) &&
              o(x, d, g),
              D &&
              N.name !== _ &&
              (A = !0, w = function () {
                return N.call(this)
              })
            }
            if (r && !b || !f && !A && O[d] || o(O, d, w), c[t] = w, c[C] = g, E) if (y = {
              values: D ? w : S(_),
              keys: I ? w : S(h),
              entries: D ? S('entries') : w
            }, b) for (T in y) T in O ||
            i(O, T, y[T]);
             else a(a.P + a.F * (f || A), t, y);
            return y
          }
        },
        function (e, t, n) {
          var r = n(46),
          a = '__core-js_shared__',
          i = r[a] ||
          (r[a] = {});
          e.exports = function (e) {
            return i[e] ||
            (i[e] = {})
          }
        },
        function (e, t) {
          var n = Math.ceil,
          r = Math.floor;
          e.exports = function (e) {
            return isNaN(e = + e) ? 0 : (e > 0 ? r : n) (e)
          }
        },
        function (e, t, n) {
          var r = n(145);
          e.exports = function (e) {
            return Object(r(e))
          }
        },
        function (e, t) {
          var n = 0,
          r = Math.random();
          e.exports = function (e) {
            return 'Symbol('.concat(void 0 === e ? '' : e, ')_', (++n + r).toString(36))
          }
        },
        function (e, t) {
        },
        151,
        function (e, t, n) {
          e.exports = n.p + 'white-5.516828.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'eye.3c073c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_01_District_focus.755f21.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_01_District_outline.d663ce.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_02_Plastic_focus.f71e3b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_02_Plastic_outline.e5a27e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_03_AnansiEmporium_focus.a25599.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_03_AnansiEmporium_outline.e4b3ad.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_04_CityAlert_focus.743ea7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_04_CityAlert_outline.25aefe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_05_AllCom_focus.032f3e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_05_AllCom_outline.9d60ab.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridLeaks_focus.ac556f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridLeaks_outline.84422b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridNodes_focus.b7e632.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_GridNodes_outline.eb3bb8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_ReflectionHubs_focus.fc83ae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Anchor_ReflectionHubs_outline.e640a8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_01_District_focus.58e5ba.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_01_District_outline.1572ca.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_02_RunnersLair_focus.c31a47.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_02_RunnersLair_outline.692d80.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_03_TheRunners_focus.47e6c3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_03_TheRunners_outline.cbefff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_04_Dashes_focus.7e4df9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_04_Dashes_outline.84f981.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_05_ElysiumBuilding_focus.9fba8f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_05_ElysiumBuilding_outline.3a32fd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BeatLE_focus.4f0995.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BeatLE_outline.657e73.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BillboardHacking_focus.9cd1c0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_BillboardHacking_outline.a5b09f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_TimeTrials_focus.df5978.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Downtown_TimeTrials_outline.1850f4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_01_BlackNovember_focus.9a4095.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_01_BlackNovember_outline.963dcc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_02_Rebecca_focus.7b8b02.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_02_Rebecca_outline.fe8a9c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_03_SentryTurretsSniper_focus.7f3c6f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_03_SentryTurretsSniper_outline.b4c79a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_04_OmnistatAgent_focus.35afbf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_04_OmnistatAgent_outline.40eea0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_05_HistoryLesson_focus.8ace35.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OmnistatTunnels_05_HistoryLesson_outline.063736.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_01_District_focus.5130cc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_01_District_outline.7311d0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_02_CallahanConstruction_focus.88de49.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_02_CallahanConstruction_outline.56b72b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_03_Enforcer_focus.f64cf6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_03_Enforcer_outline.58f0b5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_04_ShockProtector_focus.8eb4af.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_04_ShockProtector_outline.404749.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_05_Protector_focus.8b8721.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Rezoning_05_Protector_outline.0a70ef.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack.ba1d56.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'billboardHack_focus.d30d41.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery.fbd32f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery_focus.e9187b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion.1253b0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'diversion_focus.4969a9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode.a702bd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gridNode_focus.d847bd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain.98a325.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_focus.020695.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionMain_unselected.6a1b9d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide.98576f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'missionSide_focus.eccb1a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis.c85658.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'reachThis_focus.bcbd00.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit.71a4b3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnerKit_focus.ca30b9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute.12f20c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus.2beb0f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus1.b74d6a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus2.46bb39.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_focus3.8cc67a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline1.b27c0c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline2.38a14f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'runnersRoute_outline3.41b010.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse.43de8c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'safeHouse_focus.ef7a0c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub.1d8e36.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'securityHub_focus.f9fd8d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thebeat.ee605f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thebeat_outline.bf725c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial.ff9fa5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrialCheckpoint.1676f8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrialFinish.ed0b93.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'timeTrial_focus.1511c7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down.75a83c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-down_focus.d74233.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up.eaf44c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up_focus.3e4bac.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'underground-up_outline.f1bbb1.png'
        },
        ,
        ,
        function (e, t) {
          e.exports = [
            {
              id: 'ch_hbb_dt2_tstamp',
              contentId: 23725140,
              displayName: 'ID_BILLBOARD_DT02',
              transform: {
                x: '-480.013733',
                y: '86.8042',
                z: '359.9833'
              }
            },
            {
              id: 'ch_hbb_anc02_tstamp',
              contentId: 1145204056,
              displayName: 'ID_BILLBOARD_ANC02',
              transform: {
                x: '316.9275',
                y: '109.360893',
                z: '262.190979'
              }
            },
            {
              id: 'ch_hbb_anc01_tstamp',
              contentId: 919185787,
              displayName: 'ID_BILLBOARD_ANC01',
              transform: {
                x: '433.887939',
                y: '92.15998',
                z: '514.4336'
              }
            },
            {
              id: 'ch_hbb_anc03_tstamp',
              contentId: 403919289,
              displayName: 'ID_BILLBOARD_ANC03',
              transform: {
                x: '397.2073',
                y: '123.379364',
                z: '112.0805'
              }
            },
            {
              id: 'ch_hbb_tvbb01_tstamp',
              contentId: 1705023253,
              displayName: 'ID_BILLBOARD_VW01',
              transform: {
                x: '1086.746',
                y: '38.8999977',
                z: '-415.8209'
              }
            },
            {
              id: 'ch_hbb_rz02_tstamp',
              contentId: 430943676,
              displayName: 'ID_BILLBOARD_REZ02',
              transform: {
                x: '-344.84967',
                y: '36.50273',
                z: '677.5861'
              }
            },
            {
              id: 'ch_hbb_rz01_tstamp',
              contentId: - 1687024545,
              displayName: 'ID_BILLBOARD_REZ01',
              transform: {
                x: '-374.4296',
                y: '36.8597145',
                z: '839.543457'
              }
            },
            {
              id: 'ch_hbb_dt1_tstamp',
              contentId: - 202293129,
              displayName: 'ID_BILLBOARD_DT01',
              transform: {
                x: '-303.612274',
                y: '73.11811',
                z: '191.50293'
              }
            },
            {
              id: 'ch_hbb_dt3_tstamp',
              contentId: - 717559627,
              displayName: 'ID_BILLBOARD_DT03',
              transform: {
                x: '68.83746',
                y: '83.0374451',
                z: '149.426117'
              }
            },
            {
              id: 'ch_hbb_dt4_tstamp',
              contentId: - 794849902,
              displayName: 'ID_BILLBOARD_DT04',
              transform: {
                x: '-263.537231',
                y: '76.1572342',
                z: '20.7005177'
              }
            },
            {
              id: 'ch_hbb_tvbb02_tstamp',
              contentId: 972942838,
              displayName: 'ID_BILLBOARD_VW02',
              transform: {
                x: '957.3563',
                y: '78.79834',
                z: '-96.67407'
              }
            },
            {
              id: 'ch_hbb_tvbb03_tstamp',
              contentId: - 1867484713,
              displayName: 'ID_BILLBOARD_VW03',
              transform: {
                x: '815.4367',
                y: '101.646019',
                z: '-14.7921543'
              }
            }
          ]
        },
        function (e, t) {
          e.exports = {
            layers: [
              {
                name: 'bg',
                tags: [
                  {
                    name: 'blocks_03',
                    hash: '232356850',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'blocks_01',
                    hash: '1950253329',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'blocks_02',
                    hash: '2973486374',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'crystaline_01',
                    hash: '4157003967',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_02',
                    hash: '2556762952',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'crystaline_03',
                    hash: '3814603228',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_04',
                    hash: '3804099507',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_05',
                    hash: '3176491650',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_06',
                    hash: '1056070740',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_07',
                    hash: '1437370938',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crystaline_08',
                    hash: '501936717',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'grid_01',
                    hash: '3542490953',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'grid_02',
                    hash: '2645211691',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'grid_03',
                    hash: '1508639107',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'grid_04',
                    hash: '2710233375',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'grid_05',
                    hash: '339938089',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'hex_01',
                    hash: '411643776',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'hex_02',
                    hash: '1118477620',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'hex_03',
                    hash: '866999881',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'organic_01',
                    hash: '2046797545',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'organic_02',
                    hash: '1399141803',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'organic_03',
                    hash: '2463240344',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'organic_04',
                    hash: '3331975617',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'organic_05',
                    hash: '2925611712',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'spheres_01',
                    hash: '3788651620',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'spheres_02',
                    hash: '2332386109',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'spheres_03',
                    hash: '524736417',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'spheres_04',
                    hash: '1183558251',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'preorder_combat_bg',
                    hash: '4189180625',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'preorder_speedrunner_bg',
                    hash: '3357235129',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'renewed_faith_reward_bg',
                    hash: '1310589350',
                    initialReward: !1,
                    unlockable: !1
                  }
                ]
              },
              {
                name: 'frame',
                tags: [
                  {
                    name: 'Elite_Nova_Prime',
                    hash: '2573550572',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Basic_Arrow',
                    hash: '3049936381',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Circle',
                    hash: '769109517',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Diamond',
                    hash: '3174165210',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Hexagon',
                    hash: '4096073036',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Octagon',
                    hash: '294373848',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Pentagon',
                    hash: '1679314630',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Shield',
                    hash: '1311986746',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Square',
                    hash: '996320292',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Star',
                    hash: '3732465449',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Basic_Triangle',
                    hash: '54308782',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'Elite_Arrow',
                    hash: '660883694',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Blades',
                    hash: '3333905111',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Buzzsaw',
                    hash: '742845892',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'Elite_Circle',
                    hash: '2190769590',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Hexagon',
                    hash: '3020191357',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Pentagon',
                    hash: '3776916059',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'Elite_Prism',
                    hash: '885519364',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'Elite_Razor_Claw',
                    hash: '1798401691',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Shield',
                    hash: '3963579151',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Shift',
                    hash: '795818827',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Shinobi',
                    hash: '3220149199',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Elite_Shuriken',
                    hash: '2030247615',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'Elite_The_Hood',
                    hash: '224056286',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Arrow',
                    hash: '2758977332',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Celtic',
                    hash: '1001049153',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Circle',
                    hash: '2387001060',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Cross',
                    hash: '3834883717',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Crusher',
                    hash: '3743738366',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Frame',
                    hash: '2398900257',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Hexagon',
                    hash: '1189189939',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Hexangle',
                    hash: '668878093',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Invincible',
                    hash: '2737174629',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Nova',
                    hash: '1120748012',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Shield',
                    hash: '3965951354',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Square',
                    hash: '1345791921',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Triburst',
                    hash: '4277077029',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'Evolved_Triforce',
                    hash: '1143444729',
                    initialReward: !1,
                    unlockable: !0
                  }
                ]
              },
              {
                name: 'detail',
                tags: [
                  {
                    name: 'butterfly',
                    hash: '4080907579',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: '3-stars',
                    hash: '1671216112',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'anchor',
                    hash: '2213229352',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'angel-wings',
                    hash: '24378910',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'battlefield-dog-tag',
                    hash: '2863864526',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'bee',
                    hash: '3784620829',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'big-thick-book',
                    hash: '1846159064',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'black-november',
                    hash: '4161462718',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'bop-apex',
                    hash: '4036434215',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-chaser',
                    hash: '1514008114',
                    initialReward: !0,
                    unlockable: !1
                  },
                  {
                    name: 'bop-deer',
                    hash: '858266763',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-Interceptor',
                    hash: '2442042401',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-longranger',
                    hash: '2109078557',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-lowflier',
                    hash: '917891668',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-predator',
                    hash: '4031159404',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'bop-stalker',
                    hash: '4014900984',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'c4',
                    hash: '2683930401',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'cat-profile',
                    hash: '3420869487',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'chains',
                    hash: '2923659657',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'cheetah',
                    hash: '944773566',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'che-noah',
                    hash: '216500560',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'claw-marks',
                    hash: '3051441250',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'closed-fist',
                    hash: '4166306586',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'closed-fist-revolutionary',
                    hash: '756825431',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'cowboyhat-and-bandana',
                    hash: '1956834512',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'crocodile',
                    hash: '3801457684',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'delivery',
                    hash: '3328861619',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'destoyed-security-camera',
                    hash: '3187831945',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'dice-logo',
                    hash: '1640298601',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'double-dragon',
                    hash: '1070254556',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'ea-frostbite',
                    hash: '223336015',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'ea-logo',
                    hash: '919580545',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'falling-dominoes',
                    hash: '311901076',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'feather',
                    hash: '2361194228',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'feather-2',
                    hash: '2479452814',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'fist',
                    hash: '2364205284',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'fly',
                    hash: '4201732671',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'geococcyx',
                    hash: '3924022394',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'ghost',
                    hash: '717478196',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'gift',
                    hash: '1396890443',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'glass-pieces',
                    hash: '799654273',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'hood',
                    hash: '1447546761',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'huma-persepolis',
                    hash: '4215488733',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'hunter',
                    hash: '2971321919',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'ikarus_portrait',
                    hash: '3089268753',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'jacknife',
                    hash: '70859530',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'july-revolution',
                    hash: '1824461692',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'key',
                    hash: '215898171',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'leon',
                    hash: '2743303796',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'lion',
                    hash: '3559324962',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'me-logo',
                    hash: '1145346986',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'mercury-god-helmet',
                    hash: '927967605',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'mountain-peak',
                    hash: '3814728368',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'open-hand-with-droplet',
                    hash: '940859624',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'pickpocketing-hand',
                    hash: '420718923',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'pigeon',
                    hash: '397901330',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'pith-helmet',
                    hash: '2167573479',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'queen',
                    hash: '459087517',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'ram',
                    hash: '679097399',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'rat',
                    hash: '1485773914',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'rising-sun',
                    hash: '3962444443',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shattered_senteniel_armor',
                    hash: '2043447743',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'shattered_senteniel_helmet',
                    hash: '333771292',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'shattered-enforcer-helmet',
                    hash: '4084486628',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'shattered-glass-panel',
                    hash: '2648777142',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shattered-light-bulb',
                    hash: '347023981',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shattered-oldschool-footprint',
                    hash: '4093061924',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shattered-protector-helmet',
                    hash: '3606065238',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shattered-shock-protector-helmet',
                    hash: '380632207',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'shattered-turret',
                    hash: '810778811',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shatteret-padlock',
                    hash: '948181069',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'shatteret-shard-building',
                    hash: '869446906',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'singe-bird-wing',
                    hash: '1288457120',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'small-book',
                    hash: '2303924955',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'spider',
                    hash: '4036551115',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'stallion',
                    hash: '1823346219',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'target',
                    hash: '4263830103',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'thumbs-crossed',
                    hash: '10278520',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'thumbs-up',
                    hash: '1758633580',
                    initialReward: !1,
                    unlockable: !0
                  },
                  {
                    name: 'tiger',
                    hash: '2184593557',
                    initialReward: !1,
                    unlockable: !1
                  },
                  {
                    name: 'two-pigeons',
                    hash: '3868061485',
                    initialReward: !1,
                    unlockable: !0
                  }
                ]
              }
            ]
          }
        },
        function (e, t) {
          e.exports = [
            {
              id: 'ch_rrt_tv2_time',
              contentId: 919100032,
              displayName: 'ID_NC_THEVIEW02',
              transform: {
                x: '1155.34131',
                y: '58.88002',
                z: '-190.95961'
              },
              threshold1Star: 4600,
              threshold2Star: 3800,
              threshold3Star: 3500
            },
            {
              id: 'ch_rrt_tv04_time',
              contentId: - 602151882,
              displayName: 'ID_NC_THEVIEW04',
              transform: {
                x: '984.8023',
                y: '71.74997',
                z: '-75.46339'
              },
              threshold1Star: 11800,
              threshold2Star: 8600,
              threshold3Star: 5700
            },
            {
              id: 'ch_rrt_dt4_time',
              contentId: 1266191060,
              displayName: 'ID_NC_DOWNTOWN04',
              transform: {
                x: '-123.340584',
                y: '54.9199944',
                z: '218.086411'
              },
              threshold1Star: 6200,
              threshold2Star: 5200,
              threshold3Star: 4400
            },
            {
              id: 'ch_rrt_tv3_time',
              contentId: 1107729249,
              displayName: 'ID_NC_THEVIEW03',
              transform: {
                x: '872.5451',
                y: '69.7100143',
                z: '-7.091624'
              },
              threshold1Star: 9500,
              threshold2Star: 7400,
              threshold3Star: 6400
            },
            {
              id: 'ch_rrt_anc1_time',
              contentId: 923895117,
              displayName: 'ID_NC_ANCHOR01',
              transform: {
                x: '383.151672',
                y: '88.462326',
                z: '557.912048'
              },
              threshold1Star: 4400,
              threshold2Star: 4100,
              threshold3Star: 1400
            },
            {
              id: 'ch_rrt_dt1_time',
              contentId: 1003612465,
              displayName: 'ID_NC_DOWNTOWN01',
              transform: {
                x: '43.2306938',
                y: '66.2400055',
                z: '177.693619'
              },
              threshold1Star: 6000,
              threshold2Star: 5200,
              threshold3Star: 4500
            },
            {
              id: 'ch_rrt_rz3_time',
              contentId: 614507179,
              displayName: 'ID_NC_CONSTR02',
              transform: {
                x: '-337.562866',
                y: '23.5299988',
                z: '863.945557'
              },
              threshold1Star: 2600,
              threshold2Star: 2300,
              threshold3Star: 2100
            },
            {
              id: 'ch_rrt_tv05_time',
              contentId: - 565320809,
              displayName: 'ID_NC_THEVIEW05',
              transform: {
                x: '1140.82324',
                y: '51.6449966',
                z: '-364.6306'
              },
              threshold1Star: 14200,
              threshold2Star: 10600,
              threshold3Star: 9600
            },
            {
              id: 'ch_rrt_dt2_time',
              contentId: 893385106,
              displayName: 'ID_NC_DOWNTOWNCANYON',
              transform: {
                x: '-523.1984',
                y: '51.5200157',
                z: '207.947113'
              },
              threshold1Star: 4600,
              threshold2Star: 3800,
              threshold3Star: 3200
            },
            {
              id: 'ch_rrt_rz4_time',
              contentId: 798683916,
              displayName: 'ID_NC_CONSTR03',
              transform: {
                x: '-326.233337',
                y: '9.908079',
                z: '695.6997'
              },
              threshold1Star: 2800,
              threshold2Star: 2500,
              threshold3Star: 2100
            },
            {
              id: 'ch_rrt_dt3_time',
              contentId: 1082022771,
              displayName: 'ID_NC_NOMADSRUN',
              transform: {
                x: '-226.768845',
                y: '51.5199738',
                z: '358.5604'
              },
              threshold1Star: 4200,
              threshold2Star: 3400,
              threshold3Star: 1900
            },
            {
              id: 'ch_rrt_anc4_time',
              contentId: 739722600,
              displayName: 'ID_NC_ANCHOR04',
              transform: {
                x: '401.3416',
                y: '78.58753',
                z: '113.601685'
              },
              threshold1Star: 8000,
              threshold2Star: 4700,
              threshold3Star: 3600
            },
            {
              id: 'ch_rrt_anc5_time',
              contentId: 776553673,
              displayName: 'ID_NC_ANCHOR05',
              transform: {
                x: '582.7016',
                y: '65.206',
                z: '78.97031'
              },
              threshold1Star: 22000,
              threshold2Star: 19000,
              threshold3Star: 12900
            },
            {
              id: 'ch_rrt_bm1_time',
              contentId: 1781754350,
              displayName: 'ID_NC_BIRDMANS_ROUTE',
              transform: {
                x: '-16.1994476',
                y: '61.4400024',
                z: '7.614682'
              },
              threshold1Star: 5600,
              threshold2Star: 4800,
              threshold3Star: 4000
            },
            {
              id: 'ch_rrt_anc6_time',
              contentId: 818132650,
              displayName: 'ID_NC_ANCHOR06',
              transform: {
                x: '309.1424',
                y: '67.99996',
                z: '500.3906'
              },
              threshold1Star: 3300,
              threshold2Star: 2900,
              threshold3Star: 2400
            },
            {
              id: 'ch_rrt_tv1_time',
              contentId: 882264739,
              displayName: 'ID_NC_THEVIEW01',
              transform: {
                x: '1146.47021',
                y: '74.2',
                z: '-2.50121665'
              },
              threshold1Star: 6800,
              threshold2Star: 5900,
              threshold3Star: 5500
            },
            {
              id: 'ch_rrt_dt6_time',
              contentId: 1040726550,
              displayName: 'ID_NC_DOWNTOWN6',
              transform: {
                x: '-262.714233',
                y: '57.9999847',
                z: '80.08772'
              },
              threshold1Star: 4400,
              threshold2Star: 3800,
              threshold3Star: 3400
            },
            {
              id: 'ch_rrt_anc2_time',
              contentId: 965474094,
              displayName: 'ID_NC_ANCHOR02',
              transform: {
                x: '329.25238',
                y: '71.98512',
                z: '385.237762'
              },
              threshold1Star: 5100,
              threshold2Star: 4300,
              threshold3Star: 2300
            },
            {
              id: 'ch_rrt_rz2_time',
              contentId: 729752778,
              displayName: 'ID_NC_TUNNELS01',
              transform: {
                x: '-377.478271',
                y: '-8.856726',
                z: '552.074341'
              },
              threshold1Star: 5700,
              threshold2Star: 4500,
              threshold3Star: 4000
            },
            {
              id: 'ch_rrt_anc3_time',
              contentId: 1002305167,
              displayName: 'ID_NC_ANCHOR03',
              transform: {
                x: '387.951965',
                y: '76.79997',
                z: '348.489258'
              },
              threshold1Star: 5800,
              threshold2Star: 5100,
              threshold3Star: 3700
            },
            {
              id: 'ch_rrt_dt5_time',
              contentId: 1150953909,
              displayName: 'ID_NC_DOWNTOWNSWING',
              transform: {
                x: '-537.619934',
                y: '57.53999',
                z: '332.211273'
              },
              threshold1Star: 6400,
              threshold2Star: 5800,
              threshold3Star: 4600
            },
            {
              id: 'ch_rrt_rz1_time',
              contentId: 839971689,
              displayName: 'ID_NC_CONSTR01',
              transform: {
                x: '-227.094818',
                y: '33.42242',
                z: '782.8302'
              },
              threshold1Star: 3300,
              threshold2Star: 3000,
              threshold3Star: 2800
            }
          ]
        },
        function (e, t) {
          'use strict';
          var n = function (e) {
            var t,
            n = {};
            if (!(e instanceof Object) || Array.isArray(e)) throw new Error('keyMirror(...): Argument must be an object.');
            for (t in e) e.hasOwnProperty(t) &&
            (n[t] = t);
            return n
          };
          e.exports = n
        },
        ,
        function (e, t, n) {
          var r = n(47),
          a = r.Uint8Array;
          e.exports = a
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = e.length; ++n < r; ) if (t(e[n], n, e)) return !0;
            return !1
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n) {
            (void 0 === n || a(e[t], n)) &&
            ('number' != typeof t || void 0 !== n || t in e) ||
            (e[t] = n)
          }
          var a = n(110);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = e[t];
            o.call(e, t) &&
            a(r, n) &&
            (void 0 !== n || t in e) ||
            (e[t] = n)
          }
          var a = n(110),
          i = Object.prototype,
          o = i.hasOwnProperty;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = a(e, t);
            if (0 > n) return !1;
            var r = e.length - 1;
            return n == r ? e.pop() : o.call(e, n, 1),
            !0
          }
          var a = n(103),
          i = Array.prototype,
          o = i.splice;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = a(e, t);
            return 0 > n ? void 0 : e[n][1]
          }
          var a = n(103);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return a(e, t) > - 1
          }
          var a = n(103);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = a(e, t);
            0 > r ? e.push([t,
            n]) : e[r][1] = n
          }
          var a = n(103);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, y, T, S, C) {
            var O;
            if (y && (O = S ? y(e, T, S, C) : y(e)), void 0 !== O) return O;
            if (!E(e)) return e;
            var N = _(e);
            if (N) {
              if (O = f(e), !t) return l(e, O)
            } else {
              var x = d(e),
              R = x == D ||
              x == A;
              if (g(e)) return c(e, t);
              if (x == w || x == b || R && !S) {
                if (v(e)) return S ? e : {
                };
                if (O = h(R ? {
                }
                 : e), !t) return u(e, s(O, e))
              } else {
                if (!Y[x]) return S ? e : {
                };
                O = m(e, x, r, t)
              }
            }
            C ||
            (C = new a);
            var L = C.get(e);
            if (L) return L;
            if (C.set(e, O), !N) var P = n ? p(e) : I(e);
            return i(P || e, function (a, i) {
              P &&
              (i = a, a = e[i]),
              o(O, i, r(a, t, n, y, i, e, C))
            }),
            O
          }
          var a = n(101),
          i = n(275),
          o = n(461),
          s = n(1518),
          c = n(1546),
          l = n(475),
          u = n(1553),
          p = n(1559),
          d = n(478),
          f = n(1568),
          m = n(1569),
          h = n(1570),
          _ = n(25),
          g = n(1592),
          v = n(105),
          E = n(41),
          I = n(57),
          b = '[object Arguments]',
          y = '[object Array]',
          T = '[object Boolean]',
          S = '[object Date]',
          C = '[object Error]',
          D = '[object Function]',
          A = '[object GeneratorFunction]',
          O = '[object Map]',
          N = '[object Number]',
          w = '[object Object]',
          x = '[object RegExp]',
          R = '[object Set]',
          L = '[object String]',
          P = '[object Symbol]',
          M = '[object WeakMap]',
          k = '[object ArrayBuffer]',
          B = '[object DataView]',
          V = '[object Float32Array]',
          F = '[object Float64Array]',
          W = '[object Int8Array]',
          U = '[object Int16Array]',
          j = '[object Int32Array]',
          G = '[object Uint8Array]',
          H = '[object Uint8ClampedArray]',
          z = '[object Uint16Array]',
          Q = '[object Uint32Array]',
          Y = {};
          Y[b] = Y[y] = Y[k] = Y[B] = Y[T] = Y[S] = Y[V] = Y[F] = Y[W] = Y[U] = Y[j] = Y[O] = Y[N] = Y[w] = Y[x] = Y[R] = Y[L] = Y[P] = Y[G] = Y[H] = Y[z] = Y[Q] = !0,
          Y[C] = Y[D] = Y[M] = !1,
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r) {
            var p = - 1,
            d = i,
            f = !0,
            m = e.length,
            h = [],
            _ = t.length;
            if (!m) return h;
            n &&
            (t = s(t, c(n))),
            r ? (d = o, f = !1) : t.length >= u &&
            (d = l, f = !1, t = new a(t));
            e: for (; ++p < m; ) {
              var g = e[p],
              v = n ? n(g) : g;
              if (g = r || 0 !== g ? g : 0, f && v === v) {
                for (var E = _; E--; ) if (t[E] === v) continue e;
                h.push(g)
              } else d(t, v, r) ||
              h.push(g)
            }
            return h
          }
          var a = n(1511),
          i = n(1516),
          o = n(1517),
          s = n(102),
          c = n(1541),
          l = n(1543),
          u = 200;
          e.exports = r
        },
        function (e, t) {
          function n(e, t, n) {
            for (var r = e.length, a = n ? r : - 1; n ? a-- : ++a < r; ) if (t(e[a], a, e)) return a;
            return - 1
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n, o, s) {
            var c = - 1,
            l = e.length;
            for (n || (n = i), s || (s = []); ++c < l; ) {
              var u = e[c];
              t > 0 &&
              n(u) ? t > 1 ? r(u, t - 1, n, o, s) : a(s, u) : o ||
              (s[s.length] = u)
            }
            return s
          }
          var a = n(276),
          i = n(1571);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            t = i(t, e) ? [
              t
            ] : a(t);
            for (var n = 0, r = t.length; null != e && r > n; ) e = e[o(t[n++])];
            return n &&
            n == r ? e : void 0
          }
          var a = n(474),
          i = n(107),
          o = n(84);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = t(e);
            return i(e) ? r : a(r, n(e))
          }
          var a = n(276),
          i = n(25);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return o.call(e, t) ||
            'object' == typeof e &&
            t in e &&
            null === a(e)
          }
          var a = n(104),
          i = Object.prototype,
          o = i.hasOwnProperty;
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            return a(e) ? e : i(e)
          }
          var a = n(25),
          i = n(1583);
          e.exports = r
        },
        function (e, t) {
          function n(e, t) {
            var n = - 1,
            r = e.length;
            for (t || (t = Array(r)); ++n < r; ) t[n] = e[n];
            return t
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n, r, s, c) {
            var l = - 1,
            u = s & o,
            p = s & i,
            d = e.length,
            f = t.length;
            if (d != f && !(u && f > d)) return !1;
            var m = c.get(e);
            if (m) return m == t;
            var h = !0;
            for (c.set(e, t); ++l < d; ) {
              var _ = e[l],
              g = t[l];
              if (r) var v = u ? r(g, _, l, t, e, c) : r(_, g, l, e, t, c);
              if (void 0 !== v) {
                if (v) continue;
                h = !1;
                break
              }
              if (p) {
                if (!a(t, function (e) {
                  return _ === e ||
                  n(_, e, r, s, c)
                })) {
                  h = !1;
                  break
                }
              } else if (_ !== g && !n(_, g, r, s, c)) {
                h = !1;
                break
              }
            }
            return c['delete'](e),
            h
          }
          var a = n(459),
          i = 1,
          o = 2;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e, o, i)
          }
          var a = n(471),
          i = n(1562),
          o = n(286);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return g.call(e)
          }
          var a = n(1506),
          i = n(64),
          o = n(1508),
          s = n(1510),
          c = n(1512),
          l = n(486),
          u = '[object Map]',
          p = '[object Object]',
          d = '[object Promise]',
          f = '[object Set]',
          m = '[object WeakMap]',
          h = '[object DataView]',
          _ = Object.prototype,
          g = _.toString,
          v = l(a),
          E = l(i),
          I = l(o),
          b = l(s),
          y = l(c);
          (
            a &&
            r(new a(new ArrayBuffer(1))) != h ||
            i &&
            r(new i) != u ||
            o &&
            r(o.resolve()) != d ||
            s &&
            r(new s) != f ||
            c &&
            r(new c) != m
          ) &&
          (
            r = function (e) {
              var t = g.call(e),
              n = t == p ? e.constructor : void 0,
              r = n ? l(n) : void 0;
              if (r) switch (r) {
                case v:
                  return h;
                case E:
                  return u;
                case I:
                  return d;
                case b:
                  return f;
                case y:
                  return m
              }
              return t
            }
          ),
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return a ? void 0 !== e[t] : o.call(e, t)
          }
          var a = n(108),
          i = Object.prototype,
          o = i.hasOwnProperty;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = e ? e.length : void 0;
            return s(t) &&
            (o(e) || c(e) || i(e)) ? a(t, String) : null
          }
          var a = n(1538),
          i = n(111),
          o = n(25),
          s = n(115),
          c = n(487);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            if (!s(n)) return !1;
            var r = typeof t;
            return ('number' == r ? i(n) &&
            o(t, n.length) : 'string' == r && t in n) ? a(n[t], e) : !1
          }
          var a = n(110),
          i = n(112),
          o = n(106),
          s = n(41);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return e === e &&
            !a(e)
          }
          var a = n(41);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            var t = - 1,
            n = Array(e.size);
            return e.forEach(function (e, r) {
              n[++t] = [
                r,
                e
              ]
            }),
            n
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            return function (n) {
              return null == n ? !1 : n[e] === t &&
              (void 0 !== t || e in Object(n))
            }
          }
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            var t = - 1,
            n = Array(e.size);
            return e.forEach(function (e) {
              n[++t] = e
            }),
            n
          }
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            if (null != e) {
              try {
                return r.call(e)
              } catch (t) {
              }
              try {
                return e + ''
              } catch (t) {
              }
            }
            return ''
          }
          var r = Function.prototype.toString;
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            return 'string' == typeof e ||
            !a(e) &&
            i(e) &&
            c.call(e) == o
          }
          var a = n(25),
          i = n(56),
          o = '[object String]',
          s = Object.prototype,
          c = s.toString;
          e.exports = r
        },
        function (e, t, n) {
          var r = n(102),
          a = n(467),
          i = n(469),
          o = n(1534),
          s = n(477),
          c = n(117),
          l = n(84),
          u = c(
            function (e, t) {
              return null == e ? {
              }
               : (t = r(i(t, 1), l), o(e, a(s(e), t)))
            }
          );
          e.exports = u
        },
        function (e, t, n) {
          function r(e, t) {
            return null == e ? {
            }
             : i(e, a(t))
          }
          var a = n(83),
          i = n(1535);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return e ? a(e, i(e)) : []
          }
          var a = n(1542),
          i = n(57);
          e.exports = r
        },
        function (e, t, n) {
          var r;
          (
            function (a) {
              !function (i) {
                'use strict';
                function o() {
                  var e = i.crypto ||
                  i.msCrypto;
                  if (!d && e && e.getRandomValues) try {
                    var t = new Uint8Array(16);
                    h = d = function () {
                      return e.getRandomValues(t),
                      t
                    },
                    d()
                  } catch (n) {
                  }
                  if (!d) {
                    var r = new Array(16);
                    f = d = function () {
                      for (var e, t = 0; 16 > t; t++) 0 === (3 & t) &&
                      (e = 4294967296 * Math.random()),
                      r[t] = e >>> ((3 & t) << 3) & 255;
                      return r
                    },
                    'undefined' != typeof console &&
                    console.warn &&
                    console.warn(
                      '[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()'
                    )
                  }
                }
                function s() {
                  try {
                    var e = n(1703).randomBytes;
                    m = d = e &&
                    function () {
                      return e(16)
                    },
                    d()
                  } catch (t) {
                  }
                }
                function c(e, t, n) {
                  var r = t &&
                  n ||
                  0,
                  a = 0;
                  for (
                    t = t ||
                    [],
                    e.toLowerCase().replace(/[0-9a-f]{2}/g, function (e) {
                      16 > a &&
                      (t[r + a++] = v[e])
                    });
                    16 > a;
                  ) t[r + a++] = 0;
                  return t
                }
                function l(e, t) {
                  var n = t ||
                  0,
                  r = g;
                  return r[e[n++]] + r[e[n++]] + r[e[n++]] + r[e[n++]] + '-' + r[e[n++]] + r[e[n++]] + '-' + r[e[n++]] + r[e[n++]] + '-' + r[e[n++]] + r[e[n++]] + '-' + r[e[n++]] + r[e[n++]] + r[e[n++]] + r[e[n++]] + r[e[n++]] + r[e[n++]]
                }
                function u(e, t, n) {
                  var r = t &&
                  n ||
                  0,
                  a = t ||
                  [];
                  e = e ||
                  {
                  };
                  var i = null != e.clockseq ? e.clockseq : y,
                  o = null != e.msecs ? e.msecs : (new Date).getTime(),
                  s = null != e.nsecs ? e.nsecs : S + 1,
                  c = o - T + (s - S) / 10000;
                  if (
                    0 > c &&
                    null == e.clockseq &&
                    (i = i + 1 & 16383),
                    (0 > c || o > T) &&
                    null == e.nsecs &&
                    (s = 0),
                    s >= 10000
                  ) throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
                  T = o,
                  S = s,
                  y = i,
                  o += 12219292800000;
                  var u = (10000 * (268435455 & o) + s) % 4294967296;
                  a[r++] = u >>> 24 & 255,
                  a[r++] = u >>> 16 & 255,
                  a[r++] = u >>> 8 & 255,
                  a[r++] = 255 & u;
                  var p = o / 4294967296 * 10000 & 268435455;
                  a[r++] = p >>> 8 & 255,
                  a[r++] = 255 & p,
                  a[r++] = p >>> 24 & 15 | 16,
                  a[r++] = p >>> 16 & 255,
                  a[r++] = i >>> 8 | 128,
                  a[r++] = 255 & i;
                  for (var d = e.node || b, f = 0; 6 > f; f++) a[r + f] = d[f];
                  return t ? t : l(a)
                }
                function p(e, t, n) {
                  var r = t &&
                  n ||
                  0;
                  'string' == typeof e &&
                  (t = 'binary' === e ? new _(16) : null, e = null),
                  e = e ||
                  {
                  };
                  var a = e.random ||
                  (e.rng || d) ();
                  if (a[6] = 15 & a[6] | 64, a[8] = 63 & a[8] | 128, t) for (var i = 0; 16 > i; i++) t[r + i] = a[i];
                  return t ||
                  l(a)
                }
                var d,
                f,
                m,
                h;
                i ? o() : s();
                for (var _ = 'function' == typeof a ? a : Array, g = [], v = {}, E = 0; 256 > E; E++) g[E] = (E + 256).toString(16).substr(1),
                v[g[E]] = E;
                var I = d(),
                b = [
                  1 | I[0],
                  I[1],
                  I[2],
                  I[3],
                  I[4],
                  I[5]
                ],
                y = 16383 & (I[6] << 8 | I[7]),
                T = 0,
                S = 0,
                C = p;
                C.v1 = u,
                C.v4 = p,
                C.parse = c,
                C.unparse = l,
                C.BufferClass = _,
                C._rng = d,
                C._mathRNG = f,
                C._nodeRNG = m,
                C._whatwgRNG = h,
                'undefined' != typeof e &&
                e.exports ? e.exports = C : (
                  r = function () {
                    return C
                  }.call(t, n, t, e),
                  !(void 0 !== r && (e.exports = r))
                )
              }('undefined' != typeof window ? window : null)
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = l[t];
            if ('undefined' == typeof r && (r = i(t)), r) {
              if (void 0 === n) return e.style[r];
              e.style[r] = u(r, n)
            }
          }
          function a(e, t) {
            for (var n in t) t.hasOwnProperty(n) &&
            r(e, n, t[n])
          }
          function i(e) {
            var t = c(e),
            n = s(t);
            return l[t] = l[e] = l[n] = n,
            n
          }
          function o() {
            2 === arguments.length ? a(arguments[0], arguments[1]) : r(arguments[0], arguments[1], arguments[2])
          }
          var s = n(1615),
          c = n(1616),
          l = {
            'float': 'cssFloat'
          },
          u = n(1614);
          e.exports = o,
          e.exports.set = o,
          e.exports.get = function (e, t) {
            return Array.isArray(t) ? t.reduce(function (t, n) {
              return t[n] = r(e, n || ''),
              t
            }, {
            }) : r(e, t || '')
          }
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            return e + t.charAt(0).toUpperCase() + t.substring(1)
          }
          var r = {
            animationIterationCount: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            stopOpacity: !0,
            strokeDashoffset: !0,
            strokeOpacity: !0,
            strokeWidth: !0
          },
          a = [
            'Webkit',
            'ms',
            'Moz',
            'O'
          ];
          Object.keys(r).forEach(function (e) {
            a.forEach(function (t) {
              r[n(t, e)] = r[e]
            })
          });
          var i = {
            background: {
              backgroundAttachment: !0,
              backgroundColor: !0,
              backgroundImage: !0,
              backgroundPositionX: !0,
              backgroundPositionY: !0,
              backgroundRepeat: !0
            },
            backgroundPosition: {
              backgroundPositionX: !0,
              backgroundPositionY: !0
            },
            border: {
              borderWidth: !0,
              borderStyle: !0,
              borderColor: !0
            },
            borderBottom: {
              borderBottomWidth: !0,
              borderBottomStyle: !0,
              borderBottomColor: !0
            },
            borderLeft: {
              borderLeftWidth: !0,
              borderLeftStyle: !0,
              borderLeftColor: !0
            },
            borderRight: {
              borderRightWidth: !0,
              borderRightStyle: !0,
              borderRightColor: !0
            },
            borderTop: {
              borderTopWidth: !0,
              borderTopStyle: !0,
              borderTopColor: !0
            },
            font: {
              fontStyle: !0,
              fontVariant: !0,
              fontWeight: !0,
              fontSize: !0,
              lineHeight: !0,
              fontFamily: !0
            },
            outline: {
              outlineWidth: !0,
              outlineStyle: !0,
              outlineColor: !0
            }
          },
          o = {
            isUnitlessNumber: r,
            shorthandPropertyExpansions: i
          };
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            var r = n >= e.childNodes.length ? null : e.childNodes.item(n);
            e.insertBefore(t, r)
          }
          var a = n(1626),
          i = n(510),
          o = n(34),
          s = n(126),
          c = n(303),
          l = n(5),
          u = {
            dangerouslyReplaceNodeWithMarkup: a.dangerouslyReplaceNodeWithMarkup,
            updateTextContent: c,
            processUpdates: function (e, t) {
              for (var n, o = null, u = null, p = 0; p < e.length; p++) if (n = e[p], n.type === i.MOVE_EXISTING || n.type === i.REMOVE_NODE) {
                var d = n.fromIndex,
                f = n.parentNode.childNodes[d],
                m = n.parentID;
                f ? void 0 : l(!1),
                o = o ||
                {
                },
                o[m] = o[m] ||
                [],
                o[m][d] = f,
                u = u ||
                [],
                u.push(f)
              }
              var h;
              if (
                h = t.length &&
                'string' == typeof t[0] ? a.dangerouslyRenderMarkup(t) : t,
                u
              ) for (var _ = 0; _ < u.length; _++) u[_].parentNode.removeChild(u[_]);
              for (var g = 0; g < e.length; g++) switch (n = e[g], n.type) {
                case i.INSERT_MARKUP:
                  r(n.parentNode, h[n.markupIndex], n.toIndex);
                  break;
                case i.MOVE_EXISTING:
                  r(n.parentNode, o[n.parentID][n.fromIndex], n.toIndex);
                  break;
                case i.SET_MARKUP:
                  s(n.parentNode, n.content);
                  break;
                case i.TEXT_CONTENT:
                  c(n.parentNode, n.content);
                  break;
                case i.REMOVE_NODE:
              }
            }
          };
          o.measureMethods(
            u,
            'DOMChildrenOperations',
            {
              updateTextContent: 'updateTextContent'
            }
          ),
          e.exports = u
        },
        function (e, t, n) {
          'use strict';
          function r() {
            if (s) for (var e in c) {
              var t = c[e],
              n = s.indexOf(e);
              if (n > - 1 ? void 0 : o(!1), !l.plugins[n]) {
                t.extractEvents ? void 0 : o(!1),
                l.plugins[n] = t;
                var r = t.eventTypes;
                for (var i in r) a(r[i], t, i) ? void 0 : o(!1)
              }
            }
          }
          function a(e, t, n) {
            l.eventNameDispatchConfigs.hasOwnProperty(n) ? o(!1) : void 0,
            l.eventNameDispatchConfigs[n] = e;
            var r = e.phasedRegistrationNames;
            if (r) {
              for (var a in r) if (r.hasOwnProperty(a)) {
                var s = r[a];
                i(s, t, n)
              }
              return !0
            }
            return e.registrationName ? (i(e.registrationName, t, n), !0) : !1
          }
          function i(e, t, n) {
            l.registrationNameModules[e] ? o(!1) : void 0,
            l.registrationNameModules[e] = t,
            l.registrationNameDependencies[e] = t.eventTypes[n].dependencies
          }
          var o = n(5),
          s = null,
          c = {},
          l = {
            plugins: [],
            eventNameDispatchConfigs: {
            },
            registrationNameModules: {
            },
            registrationNameDependencies: {
            },
            injectEventPluginOrder: function (e) {
              s ? o(!1) : void 0,
              s = Array.prototype.slice.call(e),
              r()
            },
            injectEventPluginsByName: function (e) {
              var t = !1;
              for (var n in e) if (e.hasOwnProperty(n)) {
                var a = e[n];
                c.hasOwnProperty(n) &&
                c[n] === a ||
                (c[n] ? o(!1) : void 0, c[n] = a, t = !0)
              }
              t &&
              r()
            },
            getPluginModuleForEvent: function (e) {
              var t = e.dispatchConfig;
              if (t.registrationName) return l.registrationNameModules[t.registrationName] ||
              null;
              for (var n in t.phasedRegistrationNames) if (t.phasedRegistrationNames.hasOwnProperty(n)) {
                var r = l.registrationNameModules[t.phasedRegistrationNames[n]];
                if (r) return r
              }
              return null
            },
            _resetEventPlugins: function () {
              s = null;
              for (var e in c) c.hasOwnProperty(e) &&
              delete c[e];
              l.plugins.length = 0;
              var t = l.eventNameDispatchConfigs;
              for (var n in t) t.hasOwnProperty(n) &&
              delete t[n];
              var r = l.registrationNameModules;
              for (var a in r) r.hasOwnProperty(a) &&
              delete r[a]
            }
          };
          e.exports = l
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return ('' + e).replace(I, '//')
          }
          function a(e, t) {
            this.func = e,
            this.context = t,
            this.count = 0
          }
          function i(e, t, n) {
            var r = e.func,
            a = e.context;
            r.call(a, t, e.count++)
          }
          function o(e, t, n) {
            if (null == e) return e;
            var r = a.getPooled(t, n);
            g(e, i, r),
            a.release(r)
          }
          function s(e, t, n, r) {
            this.result = e,
            this.keyPrefix = t,
            this.func = n,
            this.context = r,
            this.count = 0
          }
          function c(e, t, n) {
            var a = e.result,
            i = e.keyPrefix,
            o = e.func,
            s = e.context,
            c = o.call(s, t, e.count++);
            Array.isArray(c) ? l(c, a, n, _.thatReturnsArgument) : null != c &&
            (
              h.isValidElement(c) &&
              (c = h.cloneAndReplaceKey(c, i + (c !== t ? r(c.key || '') + '/' : '') + n)),
              a.push(c)
            )
          }
          function l(e, t, n, a, i) {
            var o = '';
            null != n &&
            (o = r(n) + '/');
            var l = s.getPooled(t, o, a, i);
            g(e, c, l),
            s.release(l)
          }
          function u(e, t, n) {
            if (null == e) return e;
            var r = [];
            return l(e, r, null, t, n),
            r
          }
          function p(e, t, n) {
            return null
          }
          function d(e, t) {
            return g(e, p, null)
          }
          function f(e) {
            var t = [];
            return l(e, t, null, _.thatReturnsArgument),
            t
          }
          var m = n(51),
          h = n(30),
          _ = n(36),
          g = n(305),
          v = m.twoArgumentPooler,
          E = m.fourArgumentPooler,
          I = /\/(?!\/)/g;
          a.prototype.destructor = function () {
            this.func = null,
            this.context = null,
            this.count = 0
          },
          m.addPoolingTo(a, v),
          s.prototype.destructor = function () {
            this.result = null,
            this.keyPrefix = null,
            this.func = null,
            this.context = null,
            this.count = 0
          },
          m.addPoolingTo(s, E);
          var b = {
            forEach: o,
            map: u,
            mapIntoWithKeyPrefixInternal: l,
            count: d,
            toArray: f
          };
          e.exports = b
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            var n = y.hasOwnProperty(t) ? y[t] : null;
            S.hasOwnProperty(t) &&
            (n !== I.OVERRIDE_BASE ? _(!1) : void 0),
            e.hasOwnProperty(t) &&
            (n !== I.DEFINE_MANY && n !== I.DEFINE_MANY_MERGED ? _(!1) : void 0)
          }
          function a(e, t) {
            if (t) {
              'function' == typeof t ? _(!1) : void 0,
              d.isValidElement(t) ? _(!1) : void 0;
              var n = e.prototype;
              t.hasOwnProperty(E) &&
              T.mixins(e, t.mixins);
              for (var a in t) if (t.hasOwnProperty(a) && a !== E) {
                var i = t[a];
                if (r(n, a), T.hasOwnProperty(a)) T[a](e, i);
                 else {
                  var o = y.hasOwnProperty(a),
                  l = n.hasOwnProperty(a),
                  u = 'function' == typeof i,
                  p = u &&
                  !o &&
                  !l &&
                  t.autobind !== !1;
                  if (p) n.__reactAutoBindMap ||
                  (n.__reactAutoBindMap = {}),
                  n.__reactAutoBindMap[a] = i,
                  n[a] = i;
                   else if (l) {
                    var f = y[a];
                    !o ||
                    f !== I.DEFINE_MANY_MERGED &&
                    f !== I.DEFINE_MANY ? _(!1) : void 0,
                    f === I.DEFINE_MANY_MERGED ? n[a] = s(n[a], i) : f === I.DEFINE_MANY &&
                    (n[a] = c(n[a], i))
                  } else n[a] = i
                }
              }
            }
          }
          function i(e, t) {
            if (t) for (var n in t) {
              var r = t[n];
              if (t.hasOwnProperty(n)) {
                var a = n in T;
                a ? _(!1) : void 0;
                var i = n in e;
                i ? _(!1) : void 0,
                e[n] = r
              }
            }
          }
          function o(e, t) {
            e &&
            t &&
            'object' == typeof e &&
            'object' == typeof t ? void 0 : _(!1);
            for (var n in t) t.hasOwnProperty(n) &&
            (void 0 !== e[n] ? _(!1) : void 0, e[n] = t[n]);
            return e
          }
          function s(e, t) {
            return function () {
              var n = e.apply(this, arguments),
              r = t.apply(this, arguments);
              if (null == n) return r;
              if (null == r) return n;
              var a = {};
              return o(a, n),
              o(a, r),
              a
            }
          }
          function c(e, t) {
            return function () {
              e.apply(this, arguments),
              t.apply(this, arguments)
            }
          }
          function l(e, t) {
            var n = t.bind(e);
            return n
          }
          function u(e) {
            for (var t in e.__reactAutoBindMap) if (e.__reactAutoBindMap.hasOwnProperty(t)) {
              var n = e.__reactAutoBindMap[t];
              e[t] = l(e, n)
            }
          }
          var p = n(498),
          d = n(30),
          f = (n(121), n(120), n(512)),
          m = n(7),
          h = n(90),
          _ = n(5),
          g = n(127),
          v = n(50),
          E = (n(9), v({
            mixins: null
          })),
          I = g({
            DEFINE_ONCE: null,
            DEFINE_MANY: null,
            OVERRIDE_BASE: null,
            DEFINE_MANY_MERGED: null
          }),
          b = [],
          y = {
            mixins: I.DEFINE_MANY,
            statics: I.DEFINE_MANY,
            propTypes: I.DEFINE_MANY,
            contextTypes: I.DEFINE_MANY,
            childContextTypes: I.DEFINE_MANY,
            getDefaultProps: I.DEFINE_MANY_MERGED,
            getInitialState: I.DEFINE_MANY_MERGED,
            getChildContext: I.DEFINE_MANY_MERGED,
            render: I.DEFINE_ONCE,
            componentWillMount: I.DEFINE_MANY,
            componentDidMount: I.DEFINE_MANY,
            componentWillReceiveProps: I.DEFINE_MANY,
            shouldComponentUpdate: I.DEFINE_ONCE,
            componentWillUpdate: I.DEFINE_MANY,
            componentDidUpdate: I.DEFINE_MANY,
            componentWillUnmount: I.DEFINE_MANY,
            updateComponent: I.OVERRIDE_BASE
          },
          T = {
            displayName: function (e, t) {
              e.displayName = t
            },
            mixins: function (e, t) {
              if (t) for (var n = 0; n < t.length; n++) a(e, t[n])
            },
            childContextTypes: function (e, t) {
              e.childContextTypes = m({
              }, e.childContextTypes, t)
            },
            contextTypes: function (e, t) {
              e.contextTypes = m({
              }, e.contextTypes, t)
            },
            getDefaultProps: function (e, t) {
              e.getDefaultProps ? e.getDefaultProps = s(e.getDefaultProps, t) : e.getDefaultProps = t
            },
            propTypes: function (e, t) {
              e.propTypes = m({
              }, e.propTypes, t)
            },
            statics: function (e, t) {
              i(e, t)
            },
            autobind: function () {
            }
          },
          S = {
            replaceState: function (e, t) {
              this.updater.enqueueReplaceState(this, e),
              t &&
              this.updater.enqueueCallback(this, t)
            },
            isMounted: function () {
              return this.updater.isMounted(this)
            },
            setProps: function (e, t) {
              this.updater.enqueueSetProps(this, e),
              t &&
              this.updater.enqueueCallback(this, t)
            },
            replaceProps: function (e, t) {
              this.updater.enqueueReplaceProps(this, e),
              t &&
              this.updater.enqueueCallback(this, t)
            }
          },
          C = function () {
          };
          m(C.prototype, p.prototype, S);
          var D = {
            createClass: function (e) {
              var t = function (e, t, n) {
                this.__reactAutoBindMap &&
                u(this),
                this.props = e,
                this.context = t,
                this.refs = h,
                this.updater = n ||
                f,
                this.state = null;
                var r = this.getInitialState ? this.getInitialState() : null;
                'object' != typeof r ||
                Array.isArray(r) ? _(!1) : void 0,
                this.state = r
              };
              t.prototype = new C,
              t.prototype.constructor = t,
              b.forEach(a.bind(null, t)),
              a(t, e),
              t.getDefaultProps &&
              (t.defaultProps = t.getDefaultProps()),
              t.prototype.render ? void 0 : _(!1);
              for (var n in y) t.prototype[n] ||
              (t.prototype[n] = null);
              return t
            },
            injection: {
              injectMixin: function (e) {
                b.push(e)
              }
            }
          };
          e.exports = D
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            this.props = e,
            this.context = t,
            this.refs = i,
            this.updater = n ||
            a
          }
          var a = n(512),
          i = (n(124), n(90)),
          o = n(5);
          n(9);
          r.prototype.isReactComponent = {},
          r.prototype.setState = function (e, t) {
            'object' != typeof e &&
            'function' != typeof e &&
            null != e ? o(!1) : void 0,
            this.updater.enqueueSetState(this, e),
            t &&
            this.updater.enqueueCallback(this, t)
          },
          r.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this),
            e &&
            this.updater.enqueueCallback(this, e)
          };
          e.exports = r
        },
        function (e, t) {
          'use strict';
          var n = {
            useCreateElement: !1
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r() {
            if (this._rootNodeID && this._wrapperState.pendingUpdate) {
              this._wrapperState.pendingUpdate = !1;
              var e = this._currentElement.props,
              t = o.getValue(e);
              null != t &&
              a(this, Boolean(e.multiple), t)
            }
          }
          function a(e, t, n) {
            var r,
            a,
            i = s.getNode(e._rootNodeID).options;
            if (t) {
              for (r = {}, a = 0; a < n.length; a++) r['' + n[a]] = !0;
              for (a = 0; a < i.length; a++) {
                var o = r.hasOwnProperty(i[a].value);
                i[a].selected !== o &&
                (i[a].selected = o)
              }
            } else {
              for (r = '' + n, a = 0; a < i.length; a++) if (i[a].value === r) return void (i[a].selected = !0);
              i.length &&
              (i[0].selected = !0)
            }
          }
          function i(e) {
            var t = this._currentElement.props,
            n = o.executeOnChange(t, e);
            return this._wrapperState.pendingUpdate = !0,
            c.asap(r, this),
            n
          }
          var o = n(289),
          s = n(28),
          c = n(35),
          l = n(7),
          u = (
            n(9),
            '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2)
          ),
          p = {
            valueContextKey: u,
            getNativeProps: function (e, t, n) {
              return l({
              }, t, {
                onChange: e._wrapperState.onChange,
                value: void 0
              })
            },
            mountWrapper: function (e, t) {
              var n = o.getValue(t);
              e._wrapperState = {
                pendingUpdate: !1,
                initialValue: null != n ? n : t.defaultValue,
                onChange: i.bind(e),
                wasMultiple: Boolean(t.multiple)
              }
            },
            processChildContext: function (e, t, n) {
              var r = l({
              }, n);
              return r[u] = e._wrapperState.initialValue,
              r
            },
            postUpdateWrapper: function (e) {
              var t = e._currentElement.props;
              e._wrapperState.initialValue = void 0;
              var n = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = Boolean(t.multiple);
              var r = o.getValue(t);
              null != r ? (e._wrapperState.pendingUpdate = !1, a(e, Boolean(t.multiple), r)) : n !== Boolean(t.multiple) &&
              (
                null != t.defaultValue ? a(e, Boolean(t.multiple), t.defaultValue) : a(e, Boolean(t.multiple), t.multiple ? [] : '')
              )
            }
          };
          e.exports = p
        },
        function (e, t, n) {
          'use strict';
          var r = n(494),
          a = n(288),
          i = n(290),
          o = n(28),
          s = n(7),
          c = n(125),
          l = n(303),
          u = (n(306), function (e) {
          });
          s(
            u.prototype,
            {
              construct: function (e) {
                this._currentElement = e,
                this._stringText = '' + e,
                this._rootNodeID = null,
                this._mountIndex = 0
              },
              mountComponent: function (e, t, n) {
                if (this._rootNodeID = e, t.useCreateElement) {
                  var r = n[o.ownerDocumentContextKey],
                  i = r.createElement('span');
                  return a.setAttributeForID(i, e),
                  o.getID(i),
                  l(i, this._stringText),
                  i
                }
                var s = c(this._stringText);
                return t.renderToStaticMarkup ? s : '<span ' + a.createMarkupForID(e) + '>' + s + '</span>'
              },
              receiveComponent: function (e, t) {
                if (e !== this._currentElement) {
                  this._currentElement = e;
                  var n = '' + e;
                  if (n !== this._stringText) {
                    this._stringText = n;
                    var a = o.getNode(this._rootNodeID);
                    r.updateTextContent(a, n)
                  }
                }
              },
              unmountComponent: function () {
                i.unmountIDFromEnvironment(this._rootNodeID)
              }
            }
          ),
          e.exports = u
        },
        function (e, t, n) {
          'use strict';
          function r() {
            this.reinitializeTransaction()
          }
          var a = n(35),
          i = n(123),
          o = n(7),
          s = n(36),
          c = {
            initialize: s,
            close: function () {
              d.isBatchingUpdates = !1
            }
          },
          l = {
            initialize: s,
            close: a.flushBatchedUpdates.bind(a)
          },
          u = [
            l,
            c
          ];
          o(
            r.prototype,
            i.Mixin,
            {
              getTransactionWrappers: function () {
                return u
              }
            }
          );
          var p = new r,
          d = {
            isBatchingUpdates: !1,
            batchedUpdates: function (e, t, n, r, a, i) {
              var o = d.isBatchingUpdates;
              d.isBatchingUpdates = !0,
              o ? e(t, n, r, a, i) : p.perform(e, null, t, n, r, a, i)
            }
          };
          e.exports = d
        },
        function (e, t, n) {
          'use strict';
          function r() {
            if (!C) {
              C = !0,
              g.EventEmitter.injectReactEventListener(_),
              g.EventPluginHub.injectEventPluginOrder(s),
              g.EventPluginHub.injectInstanceHandle(v),
              g.EventPluginHub.injectMount(E),
              g.EventPluginHub.injectEventPluginsByName({
                SimpleEventPlugin: T,
                EnterLeaveEventPlugin: c,
                ChangeEventPlugin: i,
                SelectEventPlugin: b,
                BeforeInputEventPlugin: a
              }),
              g.NativeComponent.injectGenericComponentClass(m),
              g.NativeComponent.injectTextComponentClass(h),
              g.Class.injectMixin(p),
              g.DOMProperty.injectDOMPropertyConfig(u),
              g.DOMProperty.injectDOMPropertyConfig(S),
              g.EmptyComponent.injectEmptyComponent('noscript'),
              g.Updates.injectReconcileTransaction(I),
              g.Updates.injectBatchingStrategy(f),
              g.RootIndex.injectCreateReactRootIndex(l.canUseDOM ? o.createReactRootIndex : y.createReactRootIndex),
              g.Component.injectEnvironment(d)
            }
          }
          var a = n(1622),
          i = n(1624),
          o = n(1625),
          s = n(1627),
          c = n(1628),
          l = n(23),
          u = n(1631),
          p = n(1632),
          d = n(290),
          f = n(502),
          m = n(1638),
          h = n(501),
          _ = n(1646),
          g = n(1647),
          v = n(70),
          E = n(28),
          I = n(1651),
          b = n(1660),
          y = n(1661),
          T = n(1662),
          S = n(1659),
          C = !1;
          e.exports = {
            inject: r
          }
        },
        function (e, t, n) {
          'use strict';
          function r() {
            if (p.current) {
              var e = p.current.getName();
              if (e) return ' Check the render method of `' + e + '`.'
            }
            return ''
          }
          function a(e, t) {
            if (e._store && !e._store.validated && null == e.key) {
              e._store.validated = !0;
              i('uniqueKey', e, t)
            }
          }
          function i(e, t, n) {
            var a = r();
            if (!a) {
              var i = 'string' == typeof n ? n : n.displayName ||
              n.name;
              i &&
              (a = ' Check the top-level render call using <' + i + '>.')
            }
            var o = m[e] ||
            (m[e] = {});
            if (o[a]) return null;
            o[a] = !0;
            var s = {
              parentOrOwner: a,
              url: ' See https://fb.me/react-warning-keys for more information.',
              childOwner: null
            };
            return t &&
            t._owner &&
            t._owner !== p.current &&
            (
              s.childOwner = ' It was passed a child from ' + t._owner.getName() + '.'
            ),
            s
          }
          function o(e, t) {
            if ('object' == typeof e) if (Array.isArray(e)) for (var n = 0; n < e.length; n++) {
              var r = e[n];
              l.isValidElement(r) &&
              a(r, t)
            } else if (l.isValidElement(e)) e._store &&
            (e._store.validated = !0);
             else if (e) {
              var i = d(e);
              if (i && i !== e.entries) for (var o, s = i.call(e); !(o = s.next()).done; ) l.isValidElement(o.value) &&
              a(o.value, t)
            }
          }
          function s(e, t, n, a) {
            for (var i in t) if (t.hasOwnProperty(i)) {
              var o;
              try {
                'function' != typeof t[i] ? f(!1) : void 0,
                o = t[i](n, i, e, a)
              } catch (s) {
                o = s
              }
              if (o instanceof Error && !(o.message in h)) {
                h[o.message] = !0;
                r()
              }
            }
          }
          function c(e) {
            var t = e.type;
            if ('function' == typeof t) {
              var n = t.displayName ||
              t.name;
              t.propTypes &&
              s(n, t.propTypes, e.props, u.prop),
              'function' == typeof t.getDefaultProps
            }
          }
          var l = n(30),
          u = n(121),
          p = (n(120), n(49)),
          d = (n(124), n(300)),
          f = n(5),
          m = (n(9), {
          }),
          h = {},
          _ = {
            createElement: function (e, t, n) {
              var r = 'string' == typeof e ||
              'function' == typeof e,
              a = l.createElement.apply(this, arguments);
              if (null == a) return a;
              if (r) for (var i = 2; i < arguments.length; i++) o(arguments[i], e);
              return c(a),
              a
            },
            createFactory: function (e) {
              var t = _.createElement.bind(null, e);
              return t.type = e,
              t
            },
            cloneElement: function (e, t, n) {
              for (
                var r = l.cloneElement.apply(this, arguments),
                a = 2;
                a < arguments.length;
                a++
              ) o(arguments[a], r.type);
              return c(r),
              r
            }
          };
          e.exports = _
        },
        function (e, t, n) {
          'use strict';
          function r() {
            o.registerNullComponentID(this._rootNodeID)
          }
          var a,
          i = n(30),
          o = n(506),
          s = n(58),
          c = n(7),
          l = {
            injectEmptyComponent: function (e) {
              a = i.createElement(e)
            }
          },
          u = function (e) {
            this._currentElement = null,
            this._rootNodeID = null,
            this._renderedComponent = e(a)
          };
          c(
            u.prototype,
            {
              construct: function (e) {
              },
              mountComponent: function (e, t, n) {
                return t.getReactMountReady().enqueue(r, this),
                this._rootNodeID = e,
                s.mountComponent(this._renderedComponent, e, t, n)
              },
              receiveComponent: function () {
              },
              unmountComponent: function (e, t, n) {
                s.unmountComponent(this._renderedComponent),
                o.deregisterNullComponentID(this._rootNodeID),
                this._rootNodeID = null,
                this._renderedComponent = null
              }
            }
          ),
          u.injection = l,
          e.exports = u
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return !!i[e]
          }
          function r(e) {
            i[e] = !0
          }
          function a(e) {
            delete i[e]
          }
          var i = {},
          o = {
            isNullComponentID: n,
            registerNullComponentID: r,
            deregisterNullComponentID: a
          };
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            try {
              return t(n, r)
            } catch (i) {
              return void (null === a && (a = i))
            }
          }
          var a = null,
          i = {
            invokeGuardedCallback: r,
            invokeGuardedCallbackWithCatch: r,
            rethrowCaughtError: function () {
              if (a) {
                var e = a;
                throw a = null,
                e
              }
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return i(document.documentElement, e)
          }
          var a = n(1642),
          i = n(523),
          o = n(524),
          s = n(525),
          c = {
            hasSelectionCapabilities: function (e) {
              var t = e &&
              e.nodeName &&
              e.nodeName.toLowerCase();
              return t &&
              (
                'input' === t &&
                'text' === e.type ||
                'textarea' === t ||
                'true' === e.contentEditable
              )
            },
            getSelectionInformation: function () {
              var e = s();
              return {
                focusedElem: e,
                selectionRange: c.hasSelectionCapabilities(e) ? c.getSelection(e) : null
              }
            },
            restoreSelection: function (e) {
              var t = s(),
              n = e.focusedElem,
              a = e.selectionRange;
              t !== n &&
              r(n) &&
              (c.hasSelectionCapabilities(n) && c.setSelection(n, a), o(n))
            },
            getSelection: function (e) {
              var t;
              if ('selectionStart' in e) t = {
                start: e.selectionStart,
                end: e.selectionEnd
              };
               else if (
                document.selection &&
                e.nodeName &&
                'input' === e.nodeName.toLowerCase()
              ) {
                var n = document.selection.createRange();
                n.parentElement() === e &&
                (
                  t = {
                    start: - n.moveStart('character', - e.value.length),
                    end: - n.moveEnd('character', - e.value.length)
                  }
                )
              } else t = a.getOffsets(e);
              return t ||
              {
                start: 0,
                end: 0
              }
            },
            setSelection: function (e, t) {
              var n = t.start,
              r = t.end;
              if ('undefined' == typeof r && (r = n), 'selectionStart' in e) e.selectionStart = n,
              e.selectionEnd = Math.min(r, e.value.length);
               else if (
                document.selection &&
                e.nodeName &&
                'input' === e.nodeName.toLowerCase()
              ) {
                var i = e.createTextRange();
                i.collapse(!0),
                i.moveStart('character', n),
                i.moveEnd('character', r - n),
                i.select()
              } else a.setOffsets(e, t)
            }
          };
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          var r = n(1671),
          a = /\/?>/,
          i = {
            CHECKSUM_ATTR_NAME: 'data-react-checksum',
            addChecksumToMarkup: function (e) {
              var t = r(e);
              return e.replace(a, ' ' + i.CHECKSUM_ATTR_NAME + '="' + t + '"$&')
            },
            canReuseMarkup: function (e, t) {
              var n = t.getAttribute(i.CHECKSUM_ATTR_NAME);
              n = n &&
              parseInt(n, 10);
              var a = r(e);
              return a === n
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(127),
          a = r({
            INSERT_MARKUP: null,
            MOVE_EXISTING: null,
            REMOVE_NODE: null,
            SET_MARKUP: null,
            TEXT_CONTENT: null
          });
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            if ('function' == typeof e.type) return e.type;
            var t = e.type,
            n = p[t];
            return null == n &&
            (p[t] = n = l(t)),
            n
          }
          function a(e) {
            return u ? void 0 : c(!1),
            new u(e.type, e.props)
          }
          function i(e) {
            return new d(e)
          }
          function o(e) {
            return e instanceof d
          }
          var s = n(7),
          c = n(5),
          l = null,
          u = null,
          p = {},
          d = null,
          f = {
            injectGenericComponentClass: function (e) {
              u = e
            },
            injectTextComponentClass: function (e) {
              d = e
            },
            injectComponentClasses: function (e) {
              s(p, e)
            }
          },
          m = {
            getComponentClassForElement: r,
            createInternalComponent: a,
            createInstanceForText: i,
            isTextComponent: o,
            injection: f
          };
          e.exports = m
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
          }
          var a = (
            n(9),
            {
              isMounted: function (e) {
                return !1
              },
              enqueueCallback: function (e, t) {
              },
              enqueueForceUpdate: function (e) {
                r(e, 'forceUpdate')
              },
              enqueueReplaceState: function (e, t) {
                r(e, 'replaceState')
              },
              enqueueSetState: function (e, t) {
                r(e, 'setState')
              },
              enqueueSetProps: function (e, t) {
                r(e, 'setProps')
              },
              enqueueReplaceProps: function (e, t) {
                r(e, 'replaceProps')
              }
            }
          );
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            function t(t, n, r, a, i, o) {
              if (a = a || y, o = o || r, null == n[r]) {
                var s = E[i];
                return t ? new Error('Required ' + s + ' `' + o + '` was not specified in ' + ('`' + a + '`.')) : null
              }
              return e(n, r, a, i, o)
            }
            var n = t.bind(null, !1);
            return n.isRequired = t.bind(null, !0),
            n
          }
          function a(e) {
            function t(t, n, r, a, i) {
              var o = t[n],
              s = h(o);
              if (s !== e) {
                var c = E[a],
                l = _(o);
                return new Error(
                  'Invalid ' + c + ' `' + i + '` of type ' + ('`' + l + '` supplied to `' + r + '`, expected ') + ('`' + e + '`.')
                )
              }
              return null
            }
            return r(t)
          }
          function i() {
            return r(I.thatReturns(null))
          }
          function o(e) {
            function t(t, n, r, a, i) {
              var o = t[n];
              if (!Array.isArray(o)) {
                var s = E[a],
                c = h(o);
                return new Error(
                  'Invalid ' + s + ' `' + i + '` of type ' + ('`' + c + '` supplied to `' + r + '`, expected an array.')
                )
              }
              for (var l = 0; l < o.length; l++) {
                var u = e(o, l, r, a, i + '[' + l + ']');
                if (u instanceof Error) return u
              }
              return null
            }
            return r(t)
          }
          function s() {
            function e(e, t, n, r, a) {
              if (!v.isValidElement(e[t])) {
                var i = E[r];
                return new Error(
                  'Invalid ' + i + ' `' + a + '` supplied to ' + ('`' + n + '`, expected a single ReactElement.')
                )
              }
              return null
            }
            return r(e)
          }
          function c(e) {
            function t(t, n, r, a, i) {
              if (!(t[n] instanceof e)) {
                var o = E[a],
                s = e.name ||
                y,
                c = g(t[n]);
                return new Error(
                  'Invalid ' + o + ' `' + i + '` of type ' + ('`' + c + '` supplied to `' + r + '`, expected ') + ('instance of `' + s + '`.')
                )
              }
              return null
            }
            return r(t)
          }
          function l(e) {
            function t(t, n, r, a, i) {
              for (var o = t[n], s = 0; s < e.length; s++) if (o === e[s]) return null;
              var c = E[a],
              l = JSON.stringify(e);
              return new Error(
                'Invalid ' + c + ' `' + i + '` of value `' + o + '` ' + ('supplied to `' + r + '`, expected one of ' + l + '.')
              )
            }
            return r(
              Array.isArray(e) ? t : function () {
                return new Error(
                  'Invalid argument supplied to oneOf, expected an instance of array.'
                )
              }
            )
          }
          function u(e) {
            function t(t, n, r, a, i) {
              var o = t[n],
              s = h(o);
              if ('object' !== s) {
                var c = E[a];
                return new Error(
                  'Invalid ' + c + ' `' + i + '` of type ' + ('`' + s + '` supplied to `' + r + '`, expected an object.')
                )
              }
              for (var l in o) if (o.hasOwnProperty(l)) {
                var u = e(o, l, r, a, i + '.' + l);
                if (u instanceof Error) return u
              }
              return null
            }
            return r(t)
          }
          function p(e) {
            function t(t, n, r, a, i) {
              for (var o = 0; o < e.length; o++) {
                var s = e[o];
                if (null == s(t, n, r, a, i)) return null
              }
              var c = E[a];
              return new Error('Invalid ' + c + ' `' + i + '` supplied to ' + ('`' + r + '`.'))
            }
            return r(
              Array.isArray(e) ? t : function () {
                return new Error(
                  'Invalid argument supplied to oneOfType, expected an instance of array.'
                )
              }
            )
          }
          function d() {
            function e(e, t, n, r, a) {
              if (!m(e[t])) {
                var i = E[r];
                return new Error(
                  'Invalid ' + i + ' `' + a + '` supplied to ' + ('`' + n + '`, expected a ReactNode.')
                )
              }
              return null
            }
            return r(e)
          }
          function f(e) {
            function t(t, n, r, a, i) {
              var o = t[n],
              s = h(o);
              if ('object' !== s) {
                var c = E[a];
                return new Error(
                  'Invalid ' + c + ' `' + i + '` of type `' + s + '` ' + ('supplied to `' + r + '`, expected `object`.')
                );
              }
              for (var l in e) {
                var u = e[l];
                if (u) {
                  var p = u(o, l, r, a, i + '.' + l);
                  if (p) return p
                }
              }
              return null
            }
            return r(t)
          }
          function m(e) {
            switch (typeof e) {
              case 'number':
              case 'string':
              case 'undefined':
                return !0;
              case 'boolean':
                return !e;
              case 'object':
                if (Array.isArray(e)) return e.every(m);
                if (null === e || v.isValidElement(e)) return !0;
                var t = b(e);
                if (!t) return !1;
                var n,
                r = t.call(e);
                if (t !== e.entries) {
                  for (; !(n = r.next()).done; ) if (!m(n.value)) return !1
                } else for (; !(n = r.next()).done; ) {
                  var a = n.value;
                  if (a && !m(a[1])) return !1
                }
                return !0;
              default:
                return !1
            }
          }
          function h(e) {
            var t = typeof e;
            return Array.isArray(e) ? 'array' : e instanceof RegExp ? 'object' : t
          }
          function _(e) {
            var t = h(e);
            if ('object' === t) {
              if (e instanceof Date) return 'date';
              if (e instanceof RegExp) return 'regexp'
            }
            return t
          }
          function g(e) {
            return e.constructor &&
            e.constructor.name ? e.constructor.name : '<<anonymous>>'
          }
          var v = n(30),
          E = n(120),
          I = n(36),
          b = n(300),
          y = '<<anonymous>>',
          T = {
            array: a('array'),
            bool: a('boolean'),
            func: a('function'),
            number: a('number'),
            object: a('object'),
            string: a('string'),
            any: i(),
            arrayOf: o,
            element: s(),
            instanceOf: c,
            node: d(),
            objectOf: u,
            oneOf: l,
            oneOfType: p,
            shape: f
          };
          e.exports = T
        },
        function (e, t) {
          'use strict';
          var n = {
            injectCreateReactRootIndex: function (e) {
              r.createReactRootIndex = e
            }
          },
          r = {
            createReactRootIndex: null,
            injection: n
          };
          e.exports = r
        },
        function (e, t) {
          'use strict';
          var n = {
            currentScrollLeft: 0,
            currentScrollTop: 0,
            refreshScrollValues: function (e) {
              n.currentScrollLeft = e.x,
              n.currentScrollTop = e.y
            }
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            if (null == t ? a(!1) : void 0, null == e) return t;
            var n = Array.isArray(e),
            r = Array.isArray(t);
            return n &&
            r ? (e.push.apply(e, t), e) : n ? (e.push(t), e) : r ? [
              e
            ].concat(t) : [
              e,
              t
            ]
          }
          var a = n(5);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            var r = e,
            a = void 0 === r[n];
            a &&
            null != t &&
            (r[n] = t)
          }
          function a(e) {
            if (null == e) return e;
            var t = {};
            return i(e, r, t),
            t
          }
          var i = n(305);
          n(9);
          e.exports = a
        },
        function (e, t) {
          'use strict';
          var n = function (e, t, n) {
            Array.isArray(e) ? e.forEach(t, n) : e &&
            t.call(n, e)
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r() {
            return !i &&
            a.canUseDOM &&
            (
              i = 'textContent' in document.documentElement ? 'textContent' : 'innerText'
            ),
            i
          }
          var a = n(23),
          i = null;
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = e &&
            e.nodeName &&
            e.nodeName.toLowerCase();
            return t &&
            ('input' === t && r[e.type] || 'textarea' === t)
          }
          var r = {
            color: !0,
            date: !0,
            datetime: !0,
            'datetime-local': !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return a.isValidElement(e) ? void 0 : i(!1),
            e
          }
          var a = n(30),
          i = n(5);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(36),
          a = {
            listen: function (e, t, n) {
              return e.addEventListener ? (
                e.addEventListener(t, n, !1),
                {
                  remove: function () {
                    e.removeEventListener(t, n, !1)
                  }
                }
              ) : e.attachEvent ? (
                e.attachEvent('on' + t, n),
                {
                  remove: function () {
                    e.detachEvent('on' + t, n)
                  }
                }
              ) : void 0
            },
            capture: function (e, t, n) {
              return e.addEventListener ? (
                e.addEventListener(t, n, !0),
                {
                  remove: function () {
                    e.removeEventListener(t, n, !0)
                  }
                }
              ) : {
                remove: r
              }
            },
            registerDefault: function () {
            }
          };
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            var n = !0;
            e: for (; n; ) {
              var r = e,
              i = t;
              if (n = !1, r && i) {
                if (r === i) return !0;
                if (a(r)) return !1;
                if (a(i)) {
                  e = r,
                  t = i.parentNode,
                  n = !0;
                  continue e
                }
                return r.contains ? r.contains(i) : r.compareDocumentPosition ? !!(16 & r.compareDocumentPosition(i)) : !1
              }
              return !1
            }
          }
          var a = n(1688);
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            try {
              e.focus()
            } catch (t) {
            }
          }
          e.exports = n
        },
        function (e, t) {
          'use strict';
          function n() {
            if ('undefined' == typeof document) return null;
            try {
              return document.activeElement ||
              document.body
            } catch (e) {
              return document.body
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return o ? void 0 : i(!1),
            d.hasOwnProperty(e) ||
            (e = '*'),
            s.hasOwnProperty(e) ||
            (
              '*' === e ? o.innerHTML = '<link />' : o.innerHTML = '<' + e + '></' + e + '>',
              s[e] = !o.firstChild
            ),
            s[e] ? d[e] : null
          }
          var a = n(23),
          i = n(5),
          o = a.canUseDOM ? document.createElement('div') : null,
          s = {},
          c = [
            1,
            '<select multiple="true">',
            '</select>'
          ],
          l = [
            1,
            '<table>',
            '</table>'
          ],
          u = [
            3,
            '<table><tbody><tr>',
            '</tr></tbody></table>'
          ],
          p = [
            1,
            '<svg xmlns="http://www.w3.org/2000/svg">',
            '</svg>'
          ],
          d = {
            '*': [
              1,
              '?<div>',
              '</div>'
            ],
            area: [
              1,
              '<map>',
              '</map>'
            ],
            col: [
              2,
              '<table><tbody></tbody><colgroup>',
              '</colgroup></table>'
            ],
            legend: [
              1,
              '<fieldset>',
              '</fieldset>'
            ],
            param: [
              1,
              '<object>',
              '</object>'
            ],
            tr: [
              2,
              '<table><tbody>',
              '</tbody></table>'
            ],
            optgroup: c,
            option: c,
            caption: l,
            colgroup: l,
            tbody: l,
            tfoot: l,
            thead: l,
            td: u,
            th: u
          },
          f = [
            'circle',
            'clipPath',
            'defs',
            'ellipse',
            'g',
            'image',
            'line',
            'linearGradient',
            'mask',
            'path',
            'pattern',
            'polygon',
            'polyline',
            'radialGradient',
            'rect',
            'stop',
            'text',
            'tspan'
          ];
          f.forEach(function (e) {
            d[e] = p,
            s[e] = !0
          }),
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            if (e === t) return !0;
            if ('object' != typeof e || null === e || 'object' != typeof t || null === t) return !1;
            var n = Object.keys(e),
            a = Object.keys(t);
            if (n.length !== a.length) return !1;
            for (var i = r.bind(t), o = 0; o < n.length; o++) if (!i(n[o]) || e[n[o]] !== t[n[o]]) return !1;
            return !0
          }
          var r = Object.prototype.hasOwnProperty;
          e.exports = n
        },
        function (e, t, n) {
          (
            function (t) {
              function r(e) {
                return function () {
                  var n = [],
                  r = {
                    update: function (e, r) {
                      return t.isBuffer(e) ||
                      (e = new t(e, r)),
                      n.push(e),
                      this
                    },
                    digest: function (r) {
                      var a = t.concat(n),
                      i = e(a);
                      return n = null,
                      r ? i.toString(r) : i
                    }
                  };
                  return r
                }
              }
              var a = n(1708),
              i = r(n(1704)),
              o = r(n(1706));
              e.exports = function (e) {
                return 'md5' === e ? new i : 'rmd160' === e ? new o : a(e)
              }
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t) {
          function n() {
            l &&
            o &&
            (l = !1, o.length ? c = o.concat(c) : u = - 1, c.length && r())
          }
          function r() {
            if (!l) {
              var e = setTimeout(n);
              l = !0;
              for (var t = c.length; t; ) {
                for (o = c, c = []; ++u < t; ) o &&
                o[u].run();
                u = - 1,
                t = c.length
              }
              o = null,
              l = !1,
              clearTimeout(e)
            }
          }
          function a(e, t) {
            this.fun = e,
            this.array = t
          }
          function i() {
          }
          var o,
          s = e.exports = {},
          c = [],
          l = !1,
          u = - 1;
          s.nextTick = function (e) {
            var t = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            c.push(new a(e, t)),
            1 !== c.length ||
            l ||
            setTimeout(r, 0)
          },
          a.prototype.run = function () {
            this.fun.apply(null, this.array)
          },
          s.title = 'browser',
          s.browser = !0,
          s.env = {},
          s.argv = [],
          s.version = '',
          s.versions = {},
          s.on = i,
          s.addListener = i,
          s.once = i,
          s.off = i,
          s.removeListener = i,
          s.removeAllListeners = i,
          s.emit = i,
          s.binding = function (e) {
            throw new Error('process.binding is not supported')
          },
          s.cwd = function () {
            return '/'
          },
          s.chdir = function (e) {
            throw new Error('process.chdir is not supported')
          },
          s.umask = function () {
            return 0
          }
        },
        function (e, t, n) {
          function r() {
            this.protocol = null,
            this.slashes = null,
            this.auth = null,
            this.host = null,
            this.port = null,
            this.hostname = null,
            this.hash = null,
            this.search = null,
            this.query = null,
            this.pathname = null,
            this.path = null,
            this.href = null
          }
          function a(e, t, n) {
            if (e && l(e) && e instanceof r) return e;
            var a = new r;
            return a.parse(e, t, n),
            a
          }
          function i(e) {
            return c(e) &&
            (e = a(e)),
            e instanceof r ? e.format() : r.prototype.format.call(e)
          }
          function o(e, t) {
            return a(e, !1, !0).resolve(t)
          }
          function s(e, t) {
            return e ? a(e, !1, !0).resolveObject(t) : t
          }
          function c(e) {
            return 'string' == typeof e
          }
          function l(e) {
            return 'object' == typeof e &&
            null !== e
          }
          function u(e) {
            return null === e
          }
          function p(e) {
            return null == e
          }
          var d = n(1717);
          t.parse = a,
          t.resolve = o,
          t.resolveObject = s,
          t.format = i,
          t.Url = r;
          var f = /^([a-z0-9.+-]+:)/i,
          m = /:[0-9]*$/,
          h = [
            '<',
            '>',
            '"',
            '`',
            ' ',
            '\r',
            '\n',
            '\t'
          ],
          _ = [
            '{',
            '}',
            '|',
            '\\',
            '^',
            '`'
          ].concat(h),
          g = [
            '\''
          ].concat(_),
          v = [
            '%',
            '/',
            '?',
            ';',
            '#'
          ].concat(g),
          E = [
            '/',
            '?',
            '#'
          ],
          I = 255,
          b = /^[a-z0-9A-Z_-]{0,63}$/,
          y = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
          T = {
            javascript: !0,
            'javascript:': !0
          },
          S = {
            javascript: !0,
            'javascript:': !0
          },
          C = {
            http: !0,
            https: !0,
            ftp: !0,
            gopher: !0,
            file: !0,
            'http:': !0,
            'https:': !0,
            'ftp:': !0,
            'gopher:': !0,
            'file:': !0
          },
          D = n(1720);
          r.prototype.parse = function (e, t, n) {
            if (!c(e)) throw new TypeError('Parameter \'url\' must be a string, not ' + typeof e);
            var r = e;
            r = r.trim();
            var a = f.exec(r);
            if (a) {
              a = a[0];
              var i = a.toLowerCase();
              this.protocol = i,
              r = r.substr(a.length)
            }
            if (n || a || r.match(/^\/\/[^@\/]+@[^@\/]+/)) {
              var o = '//' === r.substr(0, 2);
              !o ||
              a &&
              S[a] ||
              (r = r.substr(2), this.slashes = !0)
            }
            if (!S[a] && (o || a && !C[a])) {
              for (var s = - 1, l = 0; l < E.length; l++) {
                var u = r.indexOf(E[l]);
                - 1 !== u &&
                ( - 1 === s || s > u) &&
                (s = u)
              }
              var p,
              m;
              m = - 1 === s ? r.lastIndexOf('@') : r.lastIndexOf('@', s),
              - 1 !== m &&
              (
                p = r.slice(0, m),
                r = r.slice(m + 1),
                this.auth = decodeURIComponent(p)
              ),
              s = - 1;
              for (var l = 0; l < v.length; l++) {
                var u = r.indexOf(v[l]);
                - 1 !== u &&
                ( - 1 === s || s > u) &&
                (s = u)
              }
              - 1 === s &&
              (s = r.length),
              this.host = r.slice(0, s),
              r = r.slice(s),
              this.parseHost(),
              this.hostname = this.hostname ||
              '';
              var h = '[' === this.hostname[0] &&
              ']' === this.hostname[this.hostname.length - 1];
              if (!h) for (var _ = this.hostname.split(/\./), l = 0, A = _.length; A > l; l++) {
                var O = _[l];
                if (O && !O.match(b)) {
                  for (var N = '', w = 0, x = O.length; x > w; w++) N += O.charCodeAt(w) > 127 ? 'x' : O[w];
                  if (!N.match(b)) {
                    var R = _.slice(0, l),
                    L = _.slice(l + 1),
                    P = O.match(y);
                    P &&
                    (R.push(P[1]), L.unshift(P[2])),
                    L.length &&
                    (r = '/' + L.join('.') + r),
                    this.hostname = R.join('.');
                    break
                  }
                }
              }
              if (
                this.hostname.length > I ? this.hostname = '' : this.hostname = this.hostname.toLowerCase(),
                !h
              ) {
                for (var M = this.hostname.split('.'), k = [], l = 0; l < M.length; ++l) {
                  var B = M[l];
                  k.push(B.match(/[^A-Za-z0-9_-]/) ? 'xn--' + d.encode(B) : B)
                }
                this.hostname = k.join('.')
              }
              var V = this.port ? ':' + this.port : '',
              F = this.hostname ||
              '';
              this.host = F + V,
              this.href += this.host,
              h &&
              (
                this.hostname = this.hostname.substr(1, this.hostname.length - 2),
                '/' !== r[0] &&
                (r = '/' + r)
              )
            }
            if (!T[i]) for (var l = 0, A = g.length; A > l; l++) {
              var W = g[l],
              U = encodeURIComponent(W);
              U === W &&
              (U = escape(W)),
              r = r.split(W).join(U)
            }
            var j = r.indexOf('#');
            - 1 !== j &&
            (this.hash = r.substr(j), r = r.slice(0, j));
            var G = r.indexOf('?');
            if (
              - 1 !== G ? (
                this.search = r.substr(G),
                this.query = r.substr(G + 1),
                t &&
                (this.query = D.parse(this.query)),
                r = r.slice(0, G)
              ) : t &&
              (this.search = '', this.query = {}),
              r &&
              (this.pathname = r),
              C[i] &&
              this.hostname &&
              !this.pathname &&
              (this.pathname = '/'),
              this.pathname ||
              this.search
            ) {
              var V = this.pathname ||
              '',
              B = this.search ||
              '';
              this.path = V + B
            }
            return this.href = this.format(),
            this
          },
          r.prototype.format = function () {
            var e = this.auth ||
            '';
            e &&
            (e = encodeURIComponent(e), e = e.replace(/%3A/i, ':'), e += '@');
            var t = this.protocol ||
            '',
            n = this.pathname ||
            '',
            r = this.hash ||
            '',
            a = !1,
            i = '';
            this.host ? a = e + this.host : this.hostname &&
            (
              a = e + (
                - 1 === this.hostname.indexOf(':') ? this.hostname : '[' + this.hostname + ']'
              ),
              this.port &&
              (a += ':' + this.port)
            ),
            this.query &&
            l(this.query) &&
            Object.keys(this.query).length &&
            (i = D.stringify(this.query));
            var o = this.search ||
            i &&
            '?' + i ||
            '';
            return t &&
            ':' !== t.substr( - 1) &&
            (t += ':'),
            this.slashes ||
            (!t || C[t]) &&
            a !== !1 ? (a = '//' + (a || ''), n && '/' !== n.charAt(0) && (n = '/' + n)) : a ||
            (a = ''),
            r &&
            '#' !== r.charAt(0) &&
            (r = '#' + r),
            o &&
            '?' !== o.charAt(0) &&
            (o = '?' + o),
            n = n.replace(/[?#]/g, function (e) {
              return encodeURIComponent(e)
            }),
            o = o.replace('#', '%23'),
            t + a + n + o + r
          },
          r.prototype.resolve = function (e) {
            return this.resolveObject(a(e, !1, !0)).format()
          },
          r.prototype.resolveObject = function (e) {
            if (c(e)) {
              var t = new r;
              t.parse(e, !1, !0),
              e = t
            }
            var n = new r;
            if (
              Object.keys(this).forEach(function (e) {
                n[e] = this[e]
              }, this),
              n.hash = e.hash,
              '' === e.href
            ) return n.href = n.format(),
            n;
            if (e.slashes && !e.protocol) return Object.keys(e).forEach(function (t) {
              'protocol' !== t &&
              (n[t] = e[t])
            }),
            C[n.protocol] &&
            n.hostname &&
            !n.pathname &&
            (n.path = n.pathname = '/'),
            n.href = n.format(),
            n;
            if (e.protocol && e.protocol !== n.protocol) {
              if (!C[e.protocol]) return Object.keys(e).forEach(function (t) {
                n[t] = e[t]
              }),
              n.href = n.format(),
              n;
              if (n.protocol = e.protocol, e.host || S[e.protocol]) n.pathname = e.pathname;
               else {
                for (
                  var a = (e.pathname || '').split('/');
                  a.length &&
                  !(e.host = a.shift());
                );
                e.host ||
                (e.host = ''),
                e.hostname ||
                (e.hostname = ''),
                '' !== a[0] &&
                a.unshift(''),
                a.length < 2 &&
                a.unshift(''),
                n.pathname = a.join('/')
              }
              if (
                n.search = e.search,
                n.query = e.query,
                n.host = e.host ||
                '',
                n.auth = e.auth,
                n.hostname = e.hostname ||
                e.host,
                n.port = e.port,
                n.pathname ||
                n.search
              ) {
                var i = n.pathname ||
                '',
                o = n.search ||
                '';
                n.path = i + o
              }
              return n.slashes = n.slashes ||
              e.slashes,
              n.href = n.format(),
              n
            }
            var s = n.pathname &&
            '/' === n.pathname.charAt(0),
            l = e.host ||
            e.pathname &&
            '/' === e.pathname.charAt(0),
            d = l ||
            s ||
            n.host &&
            e.pathname,
            f = d,
            m = n.pathname &&
            n.pathname.split('/') ||
            [],
            a = e.pathname &&
            e.pathname.split('/') ||
            [],
            h = n.protocol &&
            !C[n.protocol];
            if (
              h &&
              (
                n.hostname = '',
                n.port = null,
                n.host &&
                ('' === m[0] ? m[0] = n.host : m.unshift(n.host)),
                n.host = '',
                e.protocol &&
                (
                  e.hostname = null,
                  e.port = null,
                  e.host &&
                  ('' === a[0] ? a[0] = e.host : a.unshift(e.host)),
                  e.host = null
                ),
                d = d &&
                ('' === a[0] || '' === m[0])
              ),
              l
            ) n.host = e.host ||
            '' === e.host ? e.host : n.host,
            n.hostname = e.hostname ||
            '' === e.hostname ? e.hostname : n.hostname,
            n.search = e.search,
            n.query = e.query,
            m = a;
             else if (a.length) m ||
            (m = []),
            m.pop(),
            m = m.concat(a),
            n.search = e.search,
            n.query = e.query;
             else if (!p(e.search)) {
              if (h) {
                n.hostname = n.host = m.shift();
                var _ = n.host &&
                n.host.indexOf('@') > 0 ? n.host.split('@') : !1;
                _ &&
                (n.auth = _.shift(), n.host = n.hostname = _.shift())
              }
              return n.search = e.search,
              n.query = e.query,
              u(n.pathname) &&
              u(n.search) ||
              (n.path = (n.pathname ? n.pathname : '') + (n.search ? n.search : '')),
              n.href = n.format(),
              n
            }
            if (!m.length) return n.pathname = null,
            n.search ? n.path = '/' + n.search : n.path = null,
            n.href = n.format(),
            n;
            for (
              var g = m.slice( - 1) [0],
              v = (n.host || e.host) &&
              ('.' === g || '..' === g) ||
              '' === g,
              E = 0,
              I = m.length;
              I >= 0;
              I--
            ) g = m[I],
            '.' == g ? m.splice(I, 1) : '..' === g ? (m.splice(I, 1), E++) : E &&
            (m.splice(I, 1), E--);
            if (!d && !f) for (; E--; E) m.unshift('..');
            !d ||
            '' === m[0] ||
            m[0] &&
            '/' === m[0].charAt(0) ||
            m.unshift(''),
            v &&
            '/' !== m.join('/').substr( - 1) &&
            m.push('');
            var b = '' === m[0] ||
            m[0] &&
            '/' === m[0].charAt(0);
            if (h) {
              n.hostname = n.host = b ? '' : m.length ? m.shift() : '';
              var _ = n.host &&
              n.host.indexOf('@') > 0 ? n.host.split('@') : !1;
              _ &&
              (n.auth = _.shift(), n.host = n.hostname = _.shift())
            }
            return d = d ||
            n.host &&
            m.length,
            d &&
            !b &&
            m.unshift(''),
            m.length ? n.pathname = m.join('/') : (n.pathname = null, n.path = null),
            u(n.pathname) &&
            u(n.search) ||
            (n.path = (n.pathname ? n.pathname : '') + (n.search ? n.search : '')),
            n.auth = e.auth ||
            n.auth,
            n.slashes = n.slashes ||
            e.slashes,
            n.href = n.format(),
            n
          },
          r.prototype.parseHost = function () {
            var e = this.host,
            t = m.exec(e);
            t &&
            (
              t = t[0],
              ':' !== t &&
              (this.port = t.substr(1)),
              e = e.substr(0, e.length - t.length)
            ),
            e &&
            (this.hostname = e)
          }
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './3-stars.png': 1220,
            './anchor.png': 1221,
            './angel-wings.png': 1222,
            './battlefield-dog-tag.png': 1223,
            './bee.png': 1224,
            './big-thick-book.png': 1225,
            './black-november.png': 1226,
            './bop-Interceptor.png': 1227,
            './bop-apex.png': 1228,
            './bop-chaser.png': 1229,
            './bop-deer.png': 1230,
            './bop-longranger.png': 1231,
            './bop-lowflier.png': 1232,
            './bop-predator.png': 1233,
            './bop-stalker.png': 1234,
            './butterfly.png': 1235,
            './c4.png': 1236,
            './cat-profile.png': 1237,
            './chains.png': 1238,
            './che-noah.png': 1239,
            './cheetah.png': 1240,
            './claw-marks.png': 1241,
            './closed-fist-revolutionary.png': 1242,
            './closed-fist.png': 1243,
            './cowboyhat-and-bandana.png': 1244,
            './crocodile.png': 1245,
            './delivery.png': 1246,
            './destoyed-security-camera.png': 1247,
            './dice-logo.png': 1248,
            './double-dragon.png': 1249,
            './ea-frostbite.png': 1250,
            './ea-logo.png': 1251,
            './falling-dominoes.png': 1252,
            './feather-2.png': 1253,
            './feather.png': 1254,
            './fist.png': 1255,
            './fly.png': 1256,
            './geococcyx.png': 1257,
            './ghost.png': 1258,
            './gift.png': 1259,
            './glass-pieces.png': 1260,
            './hood.png': 1261,
            './huma-persepolis.png': 1262,
            './hunter.png': 1263,
            './ikarus_portrait.png': 1264,
            './jacknife.png': 1265,
            './july-revolution.png': 1266,
            './key.png': 1267,
            './leon.png': 1268,
            './lion.png': 1269,
            './me-logo.png': 1270,
            './mercury-god-helmet.png': 1271,
            './mountain-peak.png': 1272,
            './open-hand-with-droplet.png': 1273,
            './pickpocketing-hand.png': 1274,
            './pigeon.png': 1275,
            './pith-helmet.png': 1276,
            './queen.png': 1277,
            './ram.png': 1278,
            './rat.png': 1279,
            './rising-sun.png': 1280,
            './shattered-enforcer-helmet.png': 1281,
            './shattered-glass-panel.png': 1282,
            './shattered-light-bulb.png': 1283,
            './shattered-oldschool-footprint.png': 1284,
            './shattered-protector-helmet.png': 1285,
            './shattered-shock-protector-helmet.png': 1286,
            './shattered-turret.png': 1287,
            './shattered_senteniel_armor.png': 1288,
            './shattered_senteniel_helmet.png': 1289,
            './shatteret-padlock.png': 1290,
            './shatteret-shard-building.png': 1291,
            './singe-bird-wing.png': 1292,
            './small-book.png': 1293,
            './spider.png': 1294,
            './stallion.png': 1295,
            './target.png': 1296,
            './thumbs-crossed.png': 1297,
            './thumbs-up.png': 1298,
            './tiger.png': 1299,
            './two-pigeons.png': 1300
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 531
        },
        ,
        function (e, t, n) {
          function r(e, t) {
            if (
              t ||
              (t = {}),
              t.model &&
              (this.model = t.model),
              t.comparator &&
              (this.comparator = t.comparator),
              t.parent &&
              (this.parent = t.parent),
              !this.mainIndex
            ) {
              var n = this.model &&
              this.model.prototype &&
              this.model.prototype.idAttribute;
              this.mainIndex = n ||
              'id'
            }
            this._reset(),
            this.initialize.apply(this, arguments),
            e &&
            this.reset(e, c({
              silent: !0
            }, t))
          }
          var a = n(535),
          i = n(534),
          o = n(71),
          s = n(313),
          c = n(130),
          l = [].slice;
          c(
            r.prototype,
            a,
            {
              initialize: function () {
              },
              isModel: function (e) {
                return this.model &&
                e instanceof this.model
              },
              add: function (e, t) {
                return this.set(e, c({
                  merge: !1,
                  add: !0,
                  remove: !1
                }, t))
              },
              parse: function (e, t) {
                return e
              },
              serialize: function () {
                return this.map(
                  function (e) {
                    if (e.serialize) return e.serialize();
                    var t = {};
                    return c(t, e),
                    delete t.collection,
                    t
                  }
                )
              },
              toJSON: function () {
                return this.serialize()
              },
              set: function (e, t) {
                t = c({
                  add: !0,
                  remove: !0,
                  merge: !0
                }, t),
                t.parse &&
                (e = this.parse(e, t));
                var n = !o(e);
                e = n ? e ? [
                  e
                ] : [] : e.slice();
                var r,
                a,
                i,
                s,
                l,
                u,
                p,
                d = t.at,
                f = this.comparator &&
                null == d &&
                t.sort !== !1,
                m = 'string' == typeof this.comparator ? this.comparator : null,
                h = [],
                _ = [],
                g = {},
                v = t.add,
                E = t.merge,
                I = t.remove,
                b = !f &&
                v &&
                I ? [] : !1,
                y = this.model &&
                this.model.prototype ||
                Object.prototype;
                for (u = 0, p = e.length; p > u; u++) {
                  if (
                    i = e[u] ||
                    {
                    },
                    this.isModel(i) ? r = a = i : y.generateId ? r = y.generateId(i) : (
                      r = i[this.mainIndex],
                      void 0 === r &&
                      this._isDerivedIndex(y) &&
                      (r = y._derived[this.mainIndex].fn.call(i))
                    ),
                    s = this.get(r)
                  ) I &&
                  (g[s.cid ||
                  s[this.mainIndex]] = !0),
                  E &&
                  (
                    i = i === a ? a.attributes : i,
                    t.parse &&
                    (i = s.parse(i, t)),
                    s.set ? (s.set(i, t), f && !l && s.hasChanged(m) && (l = !0)) : c(s, i)
                  ),
                  e[u] = s;
                   else if (v) {
                    if (a = e[u] = this._prepareModel(i, t), !a) continue;
                    h.push(a),
                    this._addReference(a, t)
                  }
                  a = s ||
                  a,
                  a &&
                  (
                    b &&
                    (
                      a.isNew &&
                      a.isNew() ||
                      !a[this.mainIndex] ||
                      !g[a.cid ||
                      a[this.mainIndex]]
                    ) &&
                    b.push(a),
                    g[a[this.mainIndex]] = !0
                  )
                }
                if (I) {
                  for (u = 0, p = this.length; p > u; u++) a = this.models[u],
                  g[a.cid ||
                  a[this.mainIndex]] ||
                  _.push(a);
                  _.length &&
                  this.remove(_, t)
                }
                if (h.length || b && b.length) if (f && (l = !0), null != d) for (u = 0, p = h.length; p > u; u++) this.models.splice(d + u, 0, h[u]);
                 else {
                  var T = b ||
                  h;
                  for (u = 0, p = T.length; p > u; u++) this.models.push(T[u])
                }
                if (l && this.sort({
                  silent: !0
                }), !t.silent) {
                  for (u = 0, p = h.length; p > u; u++) a = h[u],
                  a.trigger ? a.trigger('add', a, this, t) : this.trigger('add', a, this, t);
                  (l || b && b.length) &&
                  this.trigger('sort', this, t)
                }
                return n ? e[0] : e
              },
              get: function (e, t) {
                if (null != e) {
                  var n = this._indexes[t ||
                  this.mainIndex];
                  return n &&
                  (n[e] || n[e[this.mainIndex]]) ||
                  this._indexes.cid[e] ||
                  this._indexes.cid[e.cid]
                }
              },
              at: function (e) {
                return this.models[e]
              },
              remove: function (e, t) {
                var n,
                r,
                a,
                i,
                s = !o(e);
                for (e = s ? [
                  e
                ] : l.call(e), t || (t = {}), n = 0, r = e.length; r > n; n++) a = e[n] = this.get(e[n]),
                a &&
                (
                  this._deIndex(a),
                  i = this.models.indexOf(a),
                  this.models.splice(i, 1),
                  t.silent ||
                  (
                    t.index = i,
                    a.trigger ? a.trigger('remove', a, this, t) : this.trigger('remove', a, this, t)
                  ),
                  this._removeReference(a, t)
                );
                return s ? e[0] : e
              },
              reset: function (e, t) {
                t ||
                (t = {});
                for (var n = 0, r = this.models.length; r > n; n++) this._removeReference(this.models[n], t);
                return t.previousModels = this.models,
                this._reset(),
                e = this.add(e, c({
                  silent: !0
                }, t)),
                t.silent ||
                this.trigger('reset', this, t),
                e
              },
              sort: function (e) {
                var t = this;
                if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
                return e ||
                (e = {}),
                'string' == typeof this.comparator ? this.models.sort(
                  function (e, n) {
                    return e.get ? (e = e.get(t.comparator), n = n.get(t.comparator)) : (e = e[t.comparator], n = n[t.comparator]),
                    e > n ||
                    void 0 === e ? 1 : n > e ||
                    void 0 === n ? - 1 : 0
                  }
                ) : 1 === this.comparator.length ? this.models.sort(
                  function (e, n) {
                    return e = t.comparator(e),
                    n = t.comparator(n),
                    e > n ||
                    void 0 === e ? 1 : n > e ||
                    void 0 === n ? - 1 : 0
                  }
                ) : this.models.sort(s(this.comparator, this)),
                e.silent ||
                this.trigger('sort', this, e),
                this
              },
              _reset: function () {
                var e = l.call(this.indexes || []),
                t = 0;
                e.push(this.mainIndex),
                e.push('cid');
                var n = e.length;
                for (this.models = [], this._indexes = {}; n > t; t++) this._indexes[e[t]] = {}
              },
              _prepareModel: function (e, t) {
                if (!this.model) return e;
                if (this.isModel(e)) return e.collection ||
                (e.collection = this),
                e;
                t = t ? c({
                }, t) : {
                },
                t.collection = this;
                var n = new this.model(e, t);
                return n.validationError ? (this.trigger('invalid', this, n.validationError, t), !1) : n
              },
              _deIndex: function (e, t, n) {
                var r;
                if (void 0 !== t) {
                  if (void 0 === this._indexes[t]) throw new Error('Given attribute is not an index');
                  return void delete this._indexes[t][n]
                }
                for (t in this._indexes) r = e.hasOwnProperty(t) ? e[t] : e.get &&
                e.get(t),
                delete this._indexes[t][r]
              },
              _index: function (e, t) {
                var n;
                if (void 0 !== t) {
                  if (void 0 === this._indexes[t]) throw new Error('Given attribute is not an index');
                  return n = e[t] ||
                  e.get &&
                  e.get(t),
                  void (n && (this._indexes[t][n] = e))
                }
                for (t in this._indexes) n = e.hasOwnProperty(t) ? e[t] : e.get &&
                e.get(t),
                null != n &&
                (this._indexes[t][n] = e)
              },
              _isDerivedIndex: function (e) {
                return e &&
                'object' == typeof e._derived ? Object.keys(e._derived).indexOf(this.mainIndex) >= 0 : !1
              },
              _addReference: function (e, t) {
                this._index(e),
                e.collection ||
                (e.collection = this),
                e.on &&
                e.on('all', this._onModelEvent, this)
              },
              _removeReference: function (e, t) {
                this === e.collection &&
                delete e.collection,
                this._deIndex(e),
                e.off &&
                e.off('all', this._onModelEvent, this)
              },
              _onModelEvent: function (e, t, n, r) {
                var a = e.split(':') [0],
                i = e.split(':') [1];
                ('add' !== a && 'remove' !== a || n === this) &&
                (
                  'destroy' === a &&
                  this.remove(t, r),
                  t &&
                  'change' === a &&
                  i &&
                  this._indexes[i] &&
                  (
                    this._deIndex(t, i, t.previousAttributes() [i]),
                    this._index(t, i)
                  ),
                  this.trigger.apply(this, arguments)
                )
              }
            }
          ),
          Object.defineProperties(
            r.prototype,
            {
              length: {
                get: function () {
                  return this.models.length
                }
              },
              isCollection: {
                get: function () {
                  return !0
                }
              }
            }
          );
          var u = [
            'indexOf',
            'lastIndexOf',
            'every',
            'some',
            'forEach',
            'map',
            'filter',
            'reduce',
            'reduceRight'
          ];
          u.forEach(
            function (e) {
              r.prototype[e] = function () {
                return this.models[e].apply(this.models, arguments)
              }
            }
          ),
          r.prototype.each = r.prototype.forEach,
          r.extend = i,
          e.exports = r
        },
        function (e, t, n) {
          var r = n(130),
          a = function (e) {
            var t,
            n = this,
            a = [].slice.call(arguments);
            t = e &&
            e.hasOwnProperty('constructor') ? e.constructor : function () {
              return n.apply(this, arguments)
            },
            r(t, n);
            var i = function () {
              this.constructor = t
            };
            return i.prototype = n.prototype,
            t.prototype = new i,
            e &&
            (a.unshift(t.prototype), r.apply(null, a)),
            t.__super__ = n.prototype,
            t
          };
          e.exports = a
        },
        [
          1730,
          546,
          548,
          129,
          540,
          536,
          313,
          130
        ],
        [
          1731,
          537,
          538,
          539,
          71
        ],
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = e.length; ++n < r && t(e[n], n, e) !== !1; );
            return e
          }
          e.exports = n
        },
        [
          1732,
          129
        ],
        function (e, t) {
          function n(e, t, n) {
            if ('function' != typeof e) return r;
            if (void 0 === t) return e;
            switch (n) {
              case 1:
                return function (n) {
                  return e.call(t, n)
                };
              case 3:
                return function (n, r, a) {
                  return e.call(t, n, r, a)
                };
              case 4:
                return function (n, r, a, i) {
                  return e.call(t, n, r, a, i)
                };
              case 5:
                return function (n, r, a, i, o) {
                  return e.call(t, n, r, a, i, o)
                }
            }
            return function () {
              return e.apply(t, arguments)
            }
          }
          function r(e) {
            return e
          }
          e.exports = n
        },
        [
          1733,
          541,
          71,
          542,
          543,
          129
        ],
        function (e, t) {
          function n(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function r(e) {
            return i(e) &&
            h.call(e, 'callee') &&
            (!g.call(e, 'callee') || _.call(e) == p)
          }
          function a(e) {
            return null != e &&
            s(v(e)) &&
            !o(e)
          }
          function i(e) {
            return l(e) &&
            a(e)
          }
          function o(e) {
            var t = c(e) ? _.call(e) : '';
            return t == d ||
            t == f
          }
          function s(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            u >= e
          }
          function c(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function l(e) {
            return !!e &&
            'object' == typeof e
          }
          var u = 9007199254740991,
          p = '[object Arguments]',
          d = '[object Function]',
          f = '[object GeneratorFunction]',
          m = Object.prototype,
          h = m.hasOwnProperty,
          _ = m.toString,
          g = m.propertyIsEnumerable,
          v = n('length');
          e.exports = r
        },
        132,
        133,
        function (e, t) {
          function n(e) {
            return !!e &&
            'object' == typeof e
          }
          function r(e, t) {
            var n = null == e ? void 0 : e[t];
            return o(n) ? n : void 0
          }
          function a(e) {
            return i(e) &&
            d.call(e) == s
          }
          function i(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function o(e) {
            return null == e ? !1 : a(e) ? f.test(u.call(e)) : n(e) &&
            c.test(e)
          }
          var s = '[object Function]',
          c = /^\[object .+?Constructor\]$/,
          l = Object.prototype,
          u = Function.prototype.toString,
          p = l.hasOwnProperty,
          d = l.toString,
          f = RegExp(
            '^' + u.call(p).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(
              /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
              '$1.*?'
            ) + '$'
          );
          e.exports = r
        },
        541,
        [
          1735,
          547
        ],
        function (e, t) {
          function n(e, t) {
            var n;
            if ('function' != typeof t) {
              if ('function' != typeof e) throw new TypeError(r);
              var a = e;
              e = t,
              t = a
            }
            return function () {
              return --e > 0 &&
              (n = t.apply(this, arguments)),
              1 >= e &&
              (t = void 0),
              n
            }
          }
          var r = 'Expected a function';
          e.exports = n
        },
        [
          1736,
          549
        ],
        function (e, t, n) {
          (
            function (e, n) {
              function r(e) {
                return e &&
                e.Object === Object ? e : null
              }
              var a = {
                'function': !0,
                object: !0
              },
              i = a[typeof t] &&
              t &&
              !t.nodeType ? t : void 0,
              o = a[typeof e] &&
              e &&
              !e.nodeType ? e : void 0,
              s = r(i && o && 'object' == typeof n && n),
              c = r(a[typeof self] && self),
              l = r(a[typeof window] && window),
              u = r(a[typeof this] && this),
              p = s ||
              l !== (u && u.window) &&
              l ||
              c ||
              u ||
              Function('return this') ();
              e.exports = p
            }
          ).call(t, n(42) (e), function () {
            return this
          }())
        },
        [
          1738,
          551,
          312
        ],
        function (e, t) {
          function n(e, t, n) {
            n ||
            (n = {});
            for (var r = - 1, a = t.length; ++r < a; ) {
              var i = t[r];
              n[i] = e[i]
            }
            return n
          }
          e.exports = n
        },
        [
          1739,
          553,
          554,
          555
        ],
        539,
        function (e, t) {
          function n(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function r(e) {
            return null != e &&
            o(u(e))
          }
          function a(e, t) {
            return e = 'number' == typeof e ||
            c.test(e) ? + e : - 1,
            t = null == t ? l : t,
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          function i(e, t, n) {
            if (!s(n)) return !1;
            var i = typeof t;
            if ('number' == i ? r(n) &&
            a(t, n.length) : 'string' == i && t in n) {
              var o = n[t];
              return e === e ? e === o : o !== o
            }
            return !1
          }
          function o(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            l >= e
          }
          function s(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          var c = /^\d+$/,
          l = 9007199254740991,
          u = n('length');
          e.exports = i
        },
        function (e, t) {
          function n(e, t) {
            if ('function' != typeof e) throw new TypeError(r);
            return t = a(void 0 === t ? e.length - 1 : + t || 0, 0),
            function () {
              for (var n = arguments, r = - 1, i = a(n.length - t, 0), o = Array(i); ++r < i; ) o[r] = n[t + r];
              switch (t) {
                case 0:
                  return e.call(this, o);
                case 1:
                  return e.call(this, n[0], o);
                case 2:
                  return e.call(this, n[0], n[1], o)
              }
              var s = Array(t + 1);
              for (r = - 1; ++r < t; ) s[r] = n[r];
              return s[t] = o,
              e.apply(this, s)
            }
          }
          var r = 'Expected a function',
          a = Math.max;
          e.exports = n
        },
        544,
        541,
        [
          1741,
          559
        ],
        549,
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, a = e.length, i = - 1, o = []; ++n < a; ) e[n] === t &&
            (e[n] = r, o[++i] = n);
            return o
          }
          var r = '__lodash_placeholder__';
          e.exports = n
        },
        555,
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            t ||
            (t = {}),
            this.cid ||
            (this.cid = s('state')),
            this._events = {},
            this._values = {},
            this._definition = Object.create(this._definition),
            t.parse &&
            (e = this.parse(e, t)),
            this.parent = t.parent,
            this.collection = t.collection,
            this._keyTree = new S,
            this._initCollections(),
            this._initChildren(),
            this._cache = {},
            this._previousAttributes = {},
            e &&
            this.set(e, c({
              silent: !0,
              initial: !0
            }, t)),
            this._changed = {},
            this._derived &&
            this._initDerived(),
            t.init !== !1 &&
            this.initialize.apply(this, arguments)
          }
          function a(e, t, n, r) {
            var a,
            i,
            o = e._definition[t] = {};
            if (m(n)) a = e._ensureValidType(n),
            a &&
            (o.type = a);
             else {
              if (
                Array.isArray(n) &&
                (i = n, n = {
                  type: i[0],
                  required: i[1],
                  'default': i[2]
                }),
                a = e._ensureValidType(n.type),
                a &&
                (o.type = a),
                n.required &&
                (o.required = !0),
                n['default'] &&
                'object' == typeof n['default']
              ) throw new TypeError(
                'The default value for ' + t + ' cannot be an object/array, must be a value or a function which returns a value/object/array'
              );
              o['default'] = n['default'],
              o.allowNull = n.allowNull ? n.allowNull : !1,
              n.setOnce &&
              (o.setOnce = !0),
              o.required &&
              void 0 === o['default'] &&
              !o.setOnce &&
              (o['default'] = e._getDefaultForType(a)),
              o.test = n.test,
              o.values = n.values
            }
            return r &&
            (o.session = !0),
            a ||
            (
              a = m(n) ? n : n.type,
              console.warn(
                'Invalid data type of `' + a + '` for `' + t + '` property. Use one of the default types or define your own'
              )
            ),
            Object.defineProperty(
              e,
              t,
              {
                set: function (e) {
                  this.set(t, e)
                },
                get: function () {
                  if (!this._values) throw Error(
                    'You may be trying to `extend` a state object with "' + t + '" which has been defined in `props` on the object being extended'
                  );
                  var e = this._values[t],
                  n = this._dataTypes[o.type];
                  return 'undefined' != typeof e ? (n && n.get && (e = n.get(e)), e) : (e = I(o, 'default'), this._values[t] = e, e)
                }
              }
            ),
            o
          }
          function i(e, t, n) {
            var r = e._derived[t] = {
              fn: g(n) ? n : n.fn,
              cache: n.cache !== !1,
              depList: n.deps ||
              []
            };
            r.depList.forEach(function (n) {
              e._deps[n] = y(e._deps[n] || [], [
                t
              ])
            }),
            Object.defineProperty(
              e,
              t,
              {
                get: function () {
                  return this._getDerivedProperty(t)
                },
                set: function () {
                  throw new TypeError('`' + t + '` is a derived property, it can\'t be set directly.')
                }
              }
            )
          }
          function o(e) {
            var t,
            n = this;
            t = e &&
            e.hasOwnProperty('constructor') ? e.constructor : function () {
              return n.apply(this, arguments)
            },
            c(t, n);
            var r = function () {
              this.constructor = t
            };
            if (
              r.prototype = n.prototype,
              t.prototype = new r,
              t.prototype._derived = c({
              }, n.prototype._derived),
              t.prototype._deps = c({
              }, n.prototype._deps),
              t.prototype._definition = c({
              }, n.prototype._definition),
              t.prototype._collections = c({
              }, n.prototype._collections),
              t.prototype._children = c({
              }, n.prototype._children),
              t.prototype._dataTypes = c({
              }, n.prototype._dataTypes || A),
              e
            ) for (
              var o = [
                'dataTypes',
                'props',
                'session',
                'derived',
                'collections',
                'children'
              ],
              s = 0;
              s < arguments.length;
              s++
            ) {
              var l = arguments[s];
              l.dataTypes &&
              d(l.dataTypes, function (e, n) {
                t.prototype._dataTypes[n] = e
              }),
              l.props &&
              d(l.props, function (e, n) {
                a(t.prototype, n, e)
              }),
              l.session &&
              d(l.session, function (e, n) {
                a(t.prototype, n, e, !0)
              }),
              l.derived &&
              d(l.derived, function (e, n) {
                i(t.prototype, n, e)
              }),
              l.collections &&
              d(l.collections, function (e, n) {
                t.prototype._collections[n] = e
              }),
              l.children &&
              d(l.children, function (e, n) {
                t.prototype._children[n] = e
              }),
              c(t.prototype, u(l, o))
            }
            return t.__super__ = n.prototype,
            t
          }
          var s = n(318),
          c = n(314),
          l = function (e) {
            return c({
            }, e)
          },
          u = n(617),
          p = n(588),
          d = n(590),
          f = n(601),
          m = n(133),
          h = n(616),
          _ = n(608),
          g = n(132),
          v = n(609),
          E = n(596),
          I = n(632),
          b = n(316),
          y = n(636),
          T = n(563),
          S = n(575),
          C = n(574),
          D = /^change:/;
          c(
            r.prototype,
            T,
            {
              extraProperties: 'ignore',
              idAttribute: 'id',
              namespaceAttribute: 'namespace',
              typeAttribute: 'modelType',
              initialize: function () {
                return this
              },
              getId: function () {
                return this[this.idAttribute]
              },
              getNamespace: function () {
                return this[this.namespaceAttribute]
              },
              getType: function () {
                return this[this.typeAttribute]
              },
              isNew: function () {
                return null == this.getId()
              },
              escape: function (e) {
                return p(this.get(e))
              },
              isValid: function (e) {
                return this._validate({
                }, c(e || {
                }, {
                  validate: !0
                }))
              },
              parse: function (e, t) {
                return e
              },
              serialize: function (e) {
                var t = c({
                  props: !0
                }, e),
                n = this.getAttributes(t, !0);
                return d(this._children, function (e, t) {
                  n[t] = this[t].serialize()
                }, this),
                d(
                  this._collections,
                  function (e, t) {
                    n[t] = this[t].serialize()
                  },
                  this
                ),
                n
              },
              set: function (e, t, n) {
                var r,
                a,
                i,
                o,
                s,
                c,
                l,
                u,
                p,
                d,
                m,
                _,
                g,
                v,
                E,
                b,
                y = this,
                T = this.extraProperties;
                if (
                  h(e) ||
                  null === e ? (p = e, n = t) : (p = {}, p[e] = t),
                  n = n ||
                  {
                  },
                  !this._validate(p, n)
                ) return !1;
                _ = n.unset,
                m = n.silent,
                v = n.initial,
                a = [],
                r = this._changing,
                this._changing = !0,
                r ||
                (this._previousAttributes = this.attributes, this._changed = {});
                for (u in p) {
                  if (o = p[u], i = typeof o, g = this._values[u], s = this._definition[u], !s) {
                    if (this._children[u] || this._collections[u]) {
                      this[u].set(o, n);
                      continue
                    }
                    if ('ignore' === T) continue;
                    if ('reject' === T) throw new TypeError(
                      'No "' + u + '" property defined on ' + (this.type || 'this') + ' model and extraProperties not set to "ignore" or "allow"'
                    );
                    if ('allow' === T) s = this._createPropertyDefinition(u, 'any');
                     else if (T) throw new TypeError('Invalid value for extraProperties: "' + T + '"')
                  }
                  if (
                    b = this._getCompareForType(s.type),
                    d = this._dataTypes[s.type],
                    d &&
                    d.set &&
                    (c = d.set(o), o = c.val, i = c.type),
                    s.test &&
                    (l = s.test.call(this, o, i))
                  ) throw new TypeError('Property \'' + u + '\' failed validation with error: ' + l);
                  if (void 0 === o && s.required) throw new TypeError(
                    'Required property \'' + u + '\' must be of type ' + s.type + '. Tried to set ' + o
                  );
                  if (null === o && s.required && !s.allowNull) throw new TypeError(
                    'Property \'' + u + '\' must be of type ' + s.type + ' (cannot be null). Tried to set ' + o
                  );
                  if (s.type && 'any' !== s.type && s.type !== i && null !== o && void 0 !== o) throw new TypeError(
                    'Property \'' + u + '\' must be of type ' + s.type + '. Tried to set ' + o
                  );
                  if (s.values && !f(s.values, o)) {
                    var S = I(s, 'default');
                    if (_ && void 0 !== S) o = S;
                     else if (!_ || _ && void 0 !== o) throw new TypeError(
                      'Property \'' + u + '\' must be one of values: ' + s.values.join(', ') + '. Tried to set ' + o
                    )
                  }
                  if (E = !b(g, o, u), s.setOnce && void 0 !== g && E && !v) throw new TypeError('Property \'' + u + '\' can only be set once.');
                  E ? (a.push({
                    prev: g,
                    val: o,
                    key: u
                  }), y._changed[u] = o) : delete y._changed[u]
                }
                if (
                  a.forEach(
                    function (e) {
                      y._previousAttributes[e.key] = e.prev,
                      _ ? delete y._values[e.key] : y._values[e.key] = e.val
                    }
                  ),
                  !m &&
                  a.length &&
                  (y._pending = !0),
                  m ||
                  a.forEach(function (e) {
                    y.trigger('change:' + e.key, y, e.val, n)
                  }),
                  r
                ) return this;
                if (!m) for (; this._pending; ) this._pending = !1,
                this.trigger('change', this, n);
                return this._pending = !1,
                this._changing = !1,
                this
              },
              get: function (e) {
                return this[e]
              },
              toggle: function (e) {
                var t = this._definition[e];
                if ('boolean' === t.type) this[e] = !this[e];
                 else {
                  if (!t || !t.values) throw new TypeError(
                    'Can only toggle properties that are type `boolean` or have `values` array.'
                  );
                  this[e] = C(t.values, this[e])
                }
                return this
              },
              previousAttributes: function () {
                return l(this._previousAttributes)
              },
              hasChanged: function (e) {
                return null == e ? !!Object.keys(this._changed).length : E(this._derived, e) ? this._derived[e].depList.some(function (e) {
                  return this.hasChanged(e)
                }, this) : E(this._changed, e)
              },
              changedAttributes: function (e) {
                if (!e) return this.hasChanged() ? l(this._changed) : !1;
                var t,
                n,
                r,
                a = !1,
                i = this._changing ? this._previousAttributes : this.attributes;
                for (var o in e) n = this._definition[o],
                n &&
                (
                  r = this._getCompareForType(n.type),
                  r(i[o], t = e[o]) ||
                  ((a || (a = {})) [o] = t)
                );
                return a
              },
              toJSON: function () {
                return this.serialize()
              },
              unset: function (e, t) {
                var n = this;
                e = Array.isArray(e) ? e : [
                  e
                ],
                e.forEach(
                  function (e) {
                    var r = n._definition[e];
                    if (r) {
                      var a;
                      return r.required ? (a = I(r, 'default'), n.set(e, a, t)) : n.set(e, a, c({
                      }, t, {
                        unset: !0
                      }))
                    }
                  }
                )
              },
              clear: function (e) {
                var t = this;
                return Object.keys(this.attributes).forEach(function (n) {
                  t.unset(n, e)
                }),
                this
              },
              previous: function (e) {
                return null != e &&
                Object.keys(this._previousAttributes).length ? this._previousAttributes[e] : null
              },
              _getDefaultForType: function (e) {
                var t = this._dataTypes[e];
                return t &&
                t['default']
              },
              _getCompareForType: function (e) {
                var t = this._dataTypes[e];
                return t &&
                t.compare ? b(t.compare, this) : v
              },
              _validate: function (e, t) {
                if (!t.validate || !this.validate) return !0;
                e = c({
                }, this.attributes, e);
                var n = this.validationError = this.validate(e, t) ||
                null;
                return n ? (
                  this.trigger('invalid', this, n, c(t || {
                  }, {
                    validationError: n
                  })),
                  !1
                ) : !0
              },
              _createPropertyDefinition: function (e, t, n) {
                return a(this, e, t, n)
              },
              _ensureValidType: function (e) {
                return f(
                  ['string',
                  'number',
                  'boolean',
                  'array',
                  'object',
                  'date',
                  'state',
                  'any'].concat(Object.keys(this._dataTypes)),
                  e
                ) ? e : void 0
              },
              getAttributes: function (e, t) {
                e = c({
                  session: !1,
                  props: !1,
                  derived: !1
                }, e || {
                });
                var n,
                r,
                a,
                i = {};
                for (r in this._definition) a = this._definition[r],
                (e.session && a.session || e.props && !a.session) &&
                (
                  n = t ? this._values[r] : this[r],
                  t &&
                  n &&
                  g(n.serialize) &&
                  (n = n.serialize()),
                  'undefined' == typeof n &&
                  (n = I(a, 'default')),
                  'undefined' != typeof n &&
                  (i[r] = n)
                );
                if (e.derived) for (r in this._derived) i[r] = this[r];
                return i
              },
              _initDerived: function () {
                var e = this;
                d(
                  this._derived,
                  function (t, n) {
                    var r = e._derived[n];
                    r.deps = r.depList;
                    var a = function (t) {
                      t = t ||
                      {
                      };
                      var a = r.fn.call(e);
                      e._cache[n] === a &&
                      r.cache ||
                      (
                        r.cache &&
                        (e._previousAttributes[n] = e._cache[n]),
                        e._cache[n] = a,
                        e.trigger('change:' + n, e, e._cache[n])
                      )
                    };
                    r.deps.forEach(function (t) {
                      e._keyTree.add(t, a)
                    })
                  }
                ),
                this.on(
                  'all',
                  function (t) {
                    D.test(t) &&
                    e._keyTree.get(t.split(':') [1]).forEach(function (e) {
                      e()
                    })
                  },
                  this
                )
              },
              _getDerivedProperty: function (e, t) {
                return this._derived[e].cache ? (
                  !t &&
                  this._cache.hasOwnProperty(e) ||
                  (this._cache[e] = this._derived[e].fn.apply(this)),
                  this._cache[e]
                ) : this._derived[e].fn.apply(this)
              },
              _initCollections: function () {
                var e;
                if (this._collections) for (e in this._collections) this._safeSet(e, new this._collections[e](null, {
                  parent: this
                }))
              },
              _initChildren: function () {
                var e;
                if (this._children) for (e in this._children) this._safeSet(e, new this._children[e]({
                }, {
                  parent: this
                })),
                this.listenTo(this[e], 'all', this._getEventBubblingHandler(e))
              },
              _getEventBubblingHandler: function (e) {
                return b(
                  function (t, n, r) {
                    D.test(t) ? this.trigger('change:' + e + '.' + t.split(':') [1], n, r) : 'change' === t &&
                    this.trigger('change', this)
                  },
                  this
                )
              },
              _verifyRequired: function () {
                var e = this.attributes;
                for (var t in this._definition) if (this._definition[t].required && 'undefined' == typeof e[t]) return !1;
                return !0
              },
              _safeSet: function (e, t) {
                if (e in this) throw new Error(
                  'Encountered namespace collision while setting instance property `' + e + '`'
                );
                return this[e] = t,
                this
              }
            }
          ),
          Object.defineProperties(
            r.prototype,
            {
              attributes: {
                get: function () {
                  return this.getAttributes({
                    props: !0,
                    session: !0
                  })
                }
              },
              all: {
                get: function () {
                  return this.getAttributes({
                    session: !0,
                    props: !0,
                    derived: !0
                  })
                }
              },
              isState: {
                get: function () {
                  return !0
                },
                set: function () {
                }
              }
            }
          );
          var A = {
            string: {
              'default': function () {
                return ''
              }
            },
            date: {
              set: function (e) {
                var t;
                if (null == e) t = 'object';
                 else if (_(e)) t = 'date',
                e = e.valueOf();
                 else {
                  var n = null,
                  r = new Date(e).valueOf();
                  isNaN(r) &&
                  (r = new Date(parseInt(e, 10)).valueOf(), isNaN(r) && (n = !0)),
                  e = r,
                  t = 'date',
                  n &&
                  (t = typeof e)
                }
                return {
                  val: e,
                  type: t
                }
              },
              get: function (e) {
                return null == e ? e : new Date(e)
              },
              'default': function () {
                return new Date
              }
            },
            array: {
              set: function (e) {
                return {
                  val: e,
                  type: Array.isArray(e) ? 'array' : typeof e
                }
              },
              'default': function () {
                return []
              }
            },
            object: {
              set: function (e) {
                var t = typeof e;
                return 'object' !== t &&
                void 0 === e &&
                (e = null, t = 'object'),
                {
                  val: e,
                  type: t
                }
              },
              'default': function () {
                return {
                }
              }
            },
            state: {
              set: function (e) {
                var t = e instanceof r ||
                e &&
                e.isState;
                return t ? {
                  val: e,
                  type: 'state'
                }
                 : {
                  val: e,
                  type: typeof e
                }
              },
              compare: function (e, t, n) {
                var r = e === t;
                return r ||
                (
                  e &&
                  this.stopListening(e),
                  null != t &&
                  this.listenTo(t, 'all', this._getEventBubblingHandler(n))
                ),
                r
              }
            }
          };
          r.extend = o,
          e.exports = r
        },
        [
          1730,
          572,
          318,
          131,
          568,
          564,
          316,
          314
        ],
        [
          1731,
          565,
          566,
          567,
          21
        ],
        537,
        [
          1732,
          131
        ],
        539,
        [
          1733,
          569,
          21,
          132,
          133,
          131
        ],
        541,
        544,
        541,
        [
          1735,
          573
        ],
        547,
        function (e, t) {
          e.exports = function (e, t) {
            var n = e.length,
            r = e.indexOf(t) + 1;
            return r > n - 1 &&
            (r = 0),
            e[r]
          }
        },
        function (e, t) {
          function n(e) {
            if (e = e || {
            }, 'object' != typeof e) throw new TypeError('Options must be an object');
            var t = '.';
            this.storage = {},
            this.separator = e.separator ||
            t
          }
          var r = Array.prototype.slice;
          n.prototype.add = function (e, t) {
            var n = this.storage[e] ||
            (this.storage[e] = []);
            n.push(t)
          },
          n.prototype.remove = function (e) {
            var t,
            n;
            for (t in this.storage) n = this.storage[t],
            n.some(function (t, r) {
              return t === e ? (n.splice(r, 1), !0) : void 0
            })
          },
          n.prototype.get = function (e) {
            var t,
            n = [];
            for (t in this.storage) e &&
            e !== t &&
            0 !== t.indexOf(e + this.separator) ||
            (n = n.concat(this.storage[t]));
            return n
          },
          n.prototype.getGrouped = function (e) {
            var t,
            n = {};
            for (t in this.storage) e &&
            e !== t &&
            0 !== t.indexOf(e + this.separator) ||
            (n[t] = r.call(this.storage[t]));
            return n
          },
          n.prototype.getAll = function (e) {
            var t,
            n = {};
            for (t in this.storage) e !== t &&
            0 !== t.indexOf(e + this.separator) ||
            (n[t] = r.call(this.storage[t]));
            return n
          },
          n.prototype.run = function (e, t) {
            var n = r.call(arguments, 2);
            this.get(e).forEach(function (e) {
              e.apply(t || this, n)
            })
          },
          e.exports = n
        },
        [
          1738,
          577,
          315
        ],
        551,
        [
          1739,
          579,
          580,
          581
        ],
        539,
        554,
        555,
        544,
        541,
        [
          1741,
          585
        ],
        549,
        560,
        555,
        function (e, t, n) {
          function r(e) {
            return f[e]
          }
          function a(e) {
            return !!e &&
            'object' == typeof e
          }
          function i(e) {
            return 'symbol' == typeof e ||
            a(e) &&
            h.call(e) == u
          }
          function o(e) {
            if ('string' == typeof e) return e;
            if (null == e) return '';
            if (i(e)) return _ ? v.call(e) : '';
            var t = e + '';
            return '0' == t &&
            1 / e == - l ? '-0' : t
          }
          function s(e) {
            return e = o(e),
            e &&
            d.test(e) ? e.replace(p, r) : e
          }
          var c = n(589),
          l = 1 / 0,
          u = '[object Symbol]',
          p = /[&<>"'`]/g,
          d = RegExp(p.source),
          f = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            '\'': '&#39;',
            '`': '&#96;'
          },
          m = Object.prototype,
          h = m.toString,
          _ = c.Symbol,
          g = _ ? _.prototype : void 0,
          v = _ ? g.toString : void 0;
          e.exports = s
        },
        549,
        function (e, t, n) {
          function r(e, t) {
            return i(e, t, s)
          }
          function a(e) {
            return function (t, n, r) {
              return 'function' == typeof n &&
              void 0 === r ||
              (n = o(n, r, 3)),
              e(t, n)
            }
          }
          var i = n(591),
          o = n(592),
          s = n(593),
          c = a(r);
          e.exports = c
        },
        function (e, t) {
          function n(e) {
            return function (t, n, r) {
              for (var a = - 1, i = Object(t), o = r(t), s = o.length; s--; ) {
                var c = o[e ? s : ++a];
                if (n(i[c], c, i) === !1) break
              }
              return t
            }
          }
          var r = n();
          e.exports = r
        },
        539,
        [
          1734,
          594,
          595,
          21
        ],
        544,
        541,
        function (e, t, n) {
          function r(e, t) {
            return e = 'number' == typeof e ||
            g.test(e) ? + e : - 1,
            t = null == t ? I : t,
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          function a(e, t) {
            var n = typeof e;
            if ('string' == n && _.test(e) || 'number' == n) return !0;
            if (m(e)) return !1;
            var r = !h.test(e);
            return r ||
            null != t &&
            e in o(t)
          }
          function i(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            I >= e
          }
          function o(e) {
            return c(e) ? e : Object(e)
          }
          function s(e) {
            var t = e ? e.length : 0;
            return t ? e[t - 1] : void 0
          }
          function c(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function l(e, t) {
            if (null == e) return !1;
            var n = E.call(e, t);
            if (!n && !a(t)) {
              if (t = d(t), e = 1 == t.length ? e : u(e, p(t, 0, - 1)), null == e) return !1;
              t = s(t),
              n = E.call(e, t)
            }
            return n ||
            i(e.length) &&
            r(t, e.length) &&
            (m(e) || f(e))
          }
          var u = n(597),
          p = n(598),
          d = n(599),
          f = n(600),
          m = n(21),
          h = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
          _ = /^\w*$/,
          g = /^\d+$/,
          v = Object.prototype,
          E = v.hasOwnProperty,
          I = 9007199254740991;
          e.exports = l
        },
        function (e, t) {
          function n(e, t, n) {
            if (null != e) {
              void 0 !== n &&
              n in r(e) &&
              (t = [
                n
              ]);
              for (var a = 0, i = t.length; null != e && i > a; ) e = e[t[a++]];
              return a &&
              a == i ? e : void 0
            }
          }
          function r(e) {
            return a(e) ? e : Object(e)
          }
          function a(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t, n) {
            var r = - 1,
            a = e.length;
            t = null == t ? 0 : + t ||
            0,
            0 > t &&
            (t = - t > a ? 0 : a + t),
            n = void 0 === n ||
            n > a ? a : + n ||
            0,
            0 > n &&
            (n += a),
            a = t > n ? 0 : n - t >>> 0,
            t >>>= 0;
            for (var i = Array(a); ++r < a; ) i[r] = e[r + t];
            return i
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            return null == e ? '' : e + ''
          }
          function a(e) {
            if (i(e)) return e;
            var t = [];
            return r(e).replace(o, function (e, n, r, a) {
              t.push(r ? a.replace(s, '$1') : n || e)
            }),
            t
          }
          var i = n(21),
          o = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,
          s = /\\(\\)?/g;
          e.exports = a
        },
        541,
        function (e, t, n) {
          function r(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function a(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            m >= e
          }
          function i(e, t, n, r) {
            var i = e ? h(e) : 0;
            return a(i) ||
            (e = o(e), i = e.length),
            n = 'number' != typeof n ||
            r &&
            l(t, n, r) ? 0 : 0 > n ? f(i + n, 0) : n ||
            0,
            'string' == typeof e ||
            !u(e) &&
            p(e) ? i >= n &&
            e.indexOf(t, n) > - 1 : !!i &&
            s(e, t, n) > - 1
          }
          function o(e) {
            return c(e, d(e))
          }
          var s = n(602),
          c = n(603),
          l = n(604),
          u = n(21),
          p = n(133),
          d = n(605),
          f = Math.max,
          m = 9007199254740991,
          h = r('length');
          e.exports = i
        },
        function (e, t) {
          function n(e, t, n) {
            if (t !== t) return r(e, n);
            for (var a = n - 1, i = e.length; ++a < i; ) if (e[a] === t) return a;
            return - 1
          }
          function r(e, t, n) {
            for (var r = e.length, a = t + (n ? 0 : - 1); n ? a-- : ++a < r; ) {
              var i = e[a];
              if (i !== i) return a
            }
            return - 1
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = t.length, a = Array(r); ++n < r; ) a[n] = e[t[n]];
            return a
          }
          e.exports = n
        },
        554,
        [
          1734,
          606,
          607,
          21
        ],
        544,
        541,
        function (e, t) {
          function n(e) {
            return r(e) &&
            o.call(e) == a
          }
          function r(e) {
            return !!e &&
            'object' == typeof e
          }
          var a = '[object Date]',
          i = Object.prototype,
          o = i.toString;
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n, r) {
            n = 'function' == typeof n ? i(n, r, 3) : void 0;
            var o = n ? n(e, t) : void 0;
            return void 0 === o ? a(e, t, n) : !!o
          }
          var a = n(610),
          i = n(615);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return !!e &&
            'object' == typeof e
          }
          function a(e, t) {
            for (var n = - 1, r = e.length; ++n < r; ) if (t(e[n], n, e)) return !0;
            return !1
          }
          function i(e, t, n, a, s, c) {
            return e === t ? !0 : null == e ||
            null == t ||
            !u(e) &&
            !r(t) ? e !== e &&
            t !== t : o(e, t, i, n, a, s, c)
          }
          function o(e, t, n, r, a, i, o) {
            var u = p(e),
            f = p(t),
            _ = h,
            g = h;
            u ||
            (_ = C.call(e), _ == m ? _ = I : _ != I && (u = d(e))),
            f ||
            (g = C.call(t), g == m ? g = I : g != I && (f = d(t)));
            var v = _ == I,
            E = g == I,
            b = _ == g;
            if (b && !u && !v) return c(e, t, _);
            if (!a) {
              var y = v &&
              S.call(e, '__wrapped__'),
              T = E &&
              S.call(t, '__wrapped__');
              if (y || T) return n(y ? e.value() : e, T ? t.value() : t, r, a, i, o)
            }
            if (!b) return !1;
            i ||
            (i = []),
            o ||
            (o = []);
            for (var D = i.length; D--; ) if (i[D] == e) return o[D] == t;
            i.push(e),
            o.push(t);
            var A = (u ? s : l) (e, t, n, r, a, i, o);
            return i.pop(),
            o.pop(),
            A
          }
          function s(e, t, n, r, i, o, s) {
            var c = - 1,
            l = e.length,
            u = t.length;
            if (l != u && !(i && u > l)) return !1;
            for (; ++c < l; ) {
              var p = e[c],
              d = t[c],
              f = r ? r(i ? d : p, i ? p : d, c) : void 0;
              if (void 0 !== f) {
                if (f) continue;
                return !1
              }
              if (i) {
                if (!a(t, function (e) {
                  return p === e ||
                  n(p, e, r, i, o, s)
                })) return !1
              } else if (p !== d && !n(p, d, r, i, o, s)) return !1
            }
            return !0
          }
          function c(e, t, n) {
            switch (n) {
              case _:
              case g:
                return + e == + t;
              case v:
                return e.name == t.name &&
                e.message == t.message;
              case E:
                return e != + e ? t != + t : e == + t;
              case b:
              case y:
                return e == t + ''
            }
            return !1
          }
          function l(e, t, n, r, a, i, o) {
            var s = f(e),
            c = s.length,
            l = f(t),
            u = l.length;
            if (c != u && !a) return !1;
            for (var p = c; p--; ) {
              var d = s[p];
              if (!(a ? d in t : S.call(t, d))) return !1
            }
            for (var m = a; ++p < c; ) {
              d = s[p];
              var h = e[d],
              _ = t[d],
              g = r ? r(a ? _ : h, a ? h : _, d) : void 0;
              if (!(void 0 === g ? n(h, _, r, a, i, o) : g)) return !1;
              m ||
              (m = 'constructor' == d)
            }
            if (!m) {
              var v = e.constructor,
              E = t.constructor;
              if (
                v != E &&
                'constructor' in e &&
                'constructor' in t &&
                !(
                  'function' == typeof v &&
                  v instanceof v &&
                  'function' == typeof E &&
                  E instanceof E
                )
              ) return !1
            }
            return !0
          }
          function u(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          var p = n(21),
          d = n(611),
          f = n(612),
          m = '[object Arguments]',
          h = '[object Array]',
          _ = '[object Boolean]',
          g = '[object Date]',
          v = '[object Error]',
          E = '[object Number]',
          I = '[object Object]',
          b = '[object RegExp]',
          y = '[object String]',
          T = Object.prototype,
          S = T.hasOwnProperty,
          C = T.toString;
          e.exports = i
        },
        function (e, t) {
          function n(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            i >= e
          }
          function r(e) {
            return !!e &&
            'object' == typeof e
          }
          function a(e) {
            return r(e) &&
            n(e.length) &&
            !!w[R.call(e)]
          }
          var i = 9007199254740991,
          o = '[object Arguments]',
          s = '[object Array]',
          c = '[object Boolean]',
          l = '[object Date]',
          u = '[object Error]',
          p = '[object Function]',
          d = '[object Map]',
          f = '[object Number]',
          m = '[object Object]',
          h = '[object RegExp]',
          _ = '[object Set]',
          g = '[object String]',
          v = '[object WeakMap]',
          E = '[object ArrayBuffer]',
          I = '[object DataView]',
          b = '[object Float32Array]',
          y = '[object Float64Array]',
          T = '[object Int8Array]',
          S = '[object Int16Array]',
          C = '[object Int32Array]',
          D = '[object Uint8Array]',
          A = '[object Uint8ClampedArray]',
          O = '[object Uint16Array]',
          N = '[object Uint32Array]',
          w = {};
          w[b] = w[y] = w[T] = w[S] = w[C] = w[D] = w[A] = w[O] = w[N] = !0,
          w[o] = w[s] = w[E] = w[c] = w[I] = w[l] = w[u] = w[p] = w[d] = w[f] = w[m] = w[h] = w[_] = w[g] = w[v] = !1;
          var x = Object.prototype,
          R = x.toString;
          e.exports = a
        },
        [
          1734,
          613,
          614,
          21
        ],
        544,
        541,
        539,
        function (e, t) {
          function n(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          e.exports = n
        },
        function (e, t, n) {
          var r = n(618),
          a = n(619),
          i = n(624),
          o = n(626),
          s = n(627),
          c = n(628),
          l = n(317),
          u = n(631),
          p = u(
            function (e, t) {
              if (null == e) return {
              };
              if ('function' != typeof t[0]) {
                var t = r(i(t), String);
                return s(e, a(l(e), t))
              }
              var n = o(t[0], t[1], 3);
              return c(e, function (e, t, r) {
                return !n(e, t, r)
              })
            }
          );
          e.exports = p
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = e.length, a = Array(r); ++n < r; ) a[n] = t(e[n], n, e);
            return a
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            var n = e ? e.length : 0,
            r = [];
            if (!n) return r;
            var c = - 1,
            l = a,
            u = !0,
            p = u &&
            t.length >= s ? o(t) : null,
            d = t.length;
            p &&
            (l = i, u = !1, t = p);
            e: for (; ++c < n; ) {
              var f = e[c];
              if (u && f === f) {
                for (var m = d; m--; ) if (t[m] === f) continue e;
                r.push(f)
              } else l(t, f, 0) < 0 &&
              r.push(f)
            }
            return r
          }
          var a = n(620),
          i = n(621),
          o = n(622),
          s = 200;
          e.exports = r
        },
        602,
        function (e, t) {
          function n(e, t) {
            var n = e.data,
            a = 'string' == typeof t ||
            r(t) ? n.set.has(t) : n.hash[t];
            return a ? 0 : - 1
          }
          function r(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          e.exports = n
        },
        [
          1742,
          623
        ],
        544,
        [
          1743,
          625
        ],
        541,
        539,
        function (e, t) {
          function n(e, t) {
            e = r(e);
            for (var n = - 1, a = t.length, i = {}; ++n < a; ) {
              var o = t[n];
              o in e &&
              (i[o] = e[o])
            }
            return i
          }
          function r(e) {
            return a(e) ? e : Object(e)
          }
          function a(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return i(e, t, o)
          }
          function a(e, t) {
            var n = {};
            return r(e, function (e, r, a) {
              t(e, r, a) &&
              (n[r] = e)
            }),
            n
          }
          var i = n(629),
          o = n(317);
          e.exports = a
        },
        591,
        541,
        555,
        function (e, t, n) {
          function r(e, t) {
            var n = typeof e;
            if ('string' == n && m.test(e) || 'number' == n) return !0;
            if (p(e)) return !1;
            var r = !f.test(e);
            return r ||
            null != t &&
            e in a(t)
          }
          function a(e) {
            return o(e) ? e : Object(e)
          }
          function i(e) {
            var t = e ? e.length : 0;
            return t ? e[t - 1] : void 0
          }
          function o(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function s(e, t, n) {
            var a = null == e ? void 0 : e[t];
            return void 0 === a &&
            (
              null == e ||
              r(t, e) ||
              (
                t = u(t),
                e = 1 == t.length ? e : c(e, l(t, 0, - 1)),
                a = null == e ? void 0 : e[i(t)]
              ),
              a = void 0 === a ? n : a
            ),
            d(a) ? a.call(e) : a
          }
          var c = n(633),
          l = n(634),
          u = n(635),
          p = n(21),
          d = n(132),
          f = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
          m = /^\w*$/;
          e.exports = s
        },
        597,
        598,
        599,
        function (e, t, n) {
          var r = n(637),
          a = n(639),
          i = n(644),
          o = i(function (e) {
            return a(r(e, !1, !0))
          });
          e.exports = o
        },
        [
          1743,
          638
        ],
        541,
        function (e, t, n) {
          function r(e, t) {
            var n = - 1,
            r = a,
            c = e.length,
            l = !0,
            u = l &&
            c >= s,
            p = u ? o() : null,
            d = [];
            p ? (r = i, l = !1) : (u = !1, p = t ? [] : d);
            e: for (; ++n < c; ) {
              var f = e[n],
              m = t ? t(f, n, e) : f;
              if (l && f === f) {
                for (var h = p.length; h--; ) if (p[h] === m) continue e;
                t &&
                p.push(m),
                d.push(f)
              } else r(p, m, 0) < 0 &&
              ((t || u) && p.push(m), d.push(f))
            }
            return d
          }
          var a = n(640),
          i = n(641),
          o = n(642),
          s = 200;
          e.exports = r
        },
        602,
        621,
        [
          1742,
          643
        ],
        544,
        555,
        549,
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            if (g) g = null; /*throw new Error("Cannot create multiple instances of TheBeat");*/ if (self === top) return _.init(),
            c.handleViewAction({
              type: f.APP_START
            }),
            p.init(),
            d.init(n),
            m.init(),
            o.attach(e),
            l.init(r).then(
              function () {
                u.init(t, n),
                i.render(a.createElement(h, {
                  isEmbedded: n
                }), e)
              }
            ),
            g = s
          }
          void 0 !== window.TheBeatBaseURL &&
          (n.p = window.TheBeatBaseURL),
          n(778),
          n(779),
          n(787);
          var a = n(2),
          i = n(68),
          o = n(823),
          s = n(320),
          c = n(10),
          l = n(60),
          u = n(24),
          p = n(32),
          d = n(319),
          f = n(6).ActionTypes,
          m = n(15),
          h = n(647),
          _ = n(648);
          n(77),
          n(53),
          n(336),
          n(693),
          n(337),
          n(338),
          n(138),
          n(339),
          n(139),
          n(140),
          n(141),
          n(142),
          n(143),
          n(17),
          n(44),
          n(45),
          n(340),
          n(341),
          n(4),
          n(78),
          n(342),
          n(18),
          n(38);
          var g = null;
          r.languages = l.getValidLanguages(),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a,
          i = n(39),
          o = r(i),
          s = n(2),
          c = n(85),
          l = n(8),
          u = n(109),
          p = n(26),
          d = n(703),
          f = n(343),
          m = n(344),
          h = n(697),
          _ = n(707),
          g = n(698),
          v = n(722),
          E = n(4),
          I = n(24),
          b = I.RouterStore,
          y = I.RouteContainerView,
          T = s.createClass({
            displayName: 'ApplicationView',
            mixins: [
              l.create(b, E)
            ],
            propTypes: {
              isEmbedded: s.PropTypes.bool
            },
            getInitialState: function () {
              return {
                viewsKey: Date.now()
              }
            },
            componentDidMount: function () {
              document.addEventListener('online', this.forceRemount, !1)
            },
            componentWillUnmount: function () {
              document.removeEventListener('online', this.forceRemount, !1)
            },
            componentDidUpdate: function (e, t) {
              var n = this;
              this.state.isSessionReady &&
              t.isLoggedIn !== this.state.isLoggedIn &&
              u(function () {
                return n.forceRemount()
              })
            },
            getStateFromStore: function () {
              return {
                routerStack: b.getStack(),
                currentState: b.getCurrentState(),
                isSessionReady: E.getIsReady(),
                isLoggedIn: E.getIsLoggedIn(),
                requireLogin: p.requireLogin ||
                b.getRequireLogin()
              }
            },
            forceRemount: function () {
              this.setState({
                viewsKey: Date.now()
              })
            },
            render: function () {
              var e = this,
              t = this.state.routerStack.length,
              n = this.state.currentState,
              r = this.state.routerStack.slice( - 2).map(
                function (r, a) {
                  return a = e.state.routerStack.indexOf(r),
                  s.createElement(
                    y,
                    {
                      key: (0, o['default']) ([r,
                      a]),
                      depth: a,
                      currentState: n,
                      count: t,
                      routeState: r
                    }
                  )
                }
              ),
              i = this.state.isSessionReady &&
              this.state.requireLogin ? this.state.isLoggedIn : !0,
              l = this.props.isEmbedded;
              return s.createElement(
                'div',
                {
                  className: 'companion-app'
                },
                l ? null : [
                  s.createElement(d, {
                    key: 'logo'
                  }),
                  s.createElement(f, {
                    key: 'notifications'
                  })
                ],
                l &&
                this.state.isLoggedIn ? null : s.createElement(m, null),
                s.createElement(_, null),
                s.createElement(h, null),
                s.createElement(v, null),
                s.createElement(
                  c,
                  {
                    component: 'div',
                    className: 'views',
                    transitionName: 'view',
                    transitionEnterTimeout: 250,
                    transitionLeaveTimeout: 250,
                    key: this.state.viewsKey
                  },
                  i ? r : null
                ),
                s.createElement(g, null),
                a ? s.createElement(a, null) : null
              )
            }
          });
          e.exports = T
        },
        function (e, t, n) {
          'use strict';
          var r = n(26),
          a = n(4),
          i = n(143),
          o = n(72),
          s = function () {
            if (window.nimble) {
              window.nimble.setup(
                function (e) {
                  if (!e) return void console.error('Nimble: setup failed');
                  switch (console.log('Nimble response', e), e.callbackType) {
                    case 'setupSuccess':
                      console.log('Nimble: setup successful');
                      break;
                    case 'setupSuccessWithPushNotification':
                      console.log('Nimble: setup successful, started with push notification');
                      break;
                    case 'synergyReady':
                      console.log('Nimble: synergy ready');
                      break;
                    case 'pushNotificationClicked':
                      console.log('Nimble: push notification clicked');
                      break;
                    case 'pushRegistrationSuccess':
                      console.log('Nimble: push registration success');
                      break;
                    case 'pushRegistrationError':
                      console.log('Nimble: push registration error')
                  }
                },
                function () {
                  console.error('Nimble: error during setup')
                }
              );
              var e = null;
              a.addChangeListener(
                function () {
                  if (a.getIsReady()) {
                    if (!a.getIsLoggedIn()) return void (e = null);
                    var t = a.getNucleusId();
                    t !== e &&
                    (
                      e = t,
                      window.nimble.register(
                        e,
                        function (e) {
                          console.log('Nimble push registration succeeded')
                        },
                        function (e) {
                          console.log('Nimble push registration failed')
                        }
                      )
                    )
                  }
                }
              )
            }
          },
          c = function () {
            var e = arguments;
            if (window.hockeyapp && window.device) {
              var t = r.hockeyapp.appId[window.device.platform];
              t &&
              window.hockeyapp.start(
                function () {
                  return console.log('HockeyApp: start successful')
                },
                function () {
                  return console.error('HockeyApp: start failed', e)
                },
                t,
                !0
              )
            }
          };
          t.init = function () {
            window.cordova &&
            (
              s(),
              c(),
              'windows' === window.cordova.platformId &&
              document.addEventListener(
                'backbutton',
                function (e) {
                  if (i.getShowLogin()) o.hideLogin();
                   else {
                    if (!window.history.state || !window.history.state.stack) throw new Error('Exit');
                    window.history.back()
                  }
                },
                !1
              )
            )
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            this.options = (0, c['default']) ({
              log: !0
            }, t),
            this.log = function () {
            },
            this.options.log &&
            (this.log = function () {
              console.log.apply(console, arguments)
            });
            var n;
            try {
              n = JSON.parse(window.localStorage.getItem('pamplona-gateway-override'))
            } catch (r) {
            }
            this.apiUrl = n ||
            e
          }
          var i = n(55),
          o = r(i),
          s = n(3),
          c = r(s),
          l = n(26),
          u = n(1695),
          p = n(491),
          d = n(4);
          a.prototype.setOptions = function (e) {
            this.options = e
          },
          a.prototype.normalizePlatform = function (e) {
            return 'ps' === e ? 'ps4' : 'xb' === e ? 'xboxone' : e
          },
          a.prototype.request = function (e, t, n) {
            var r = this;
            n = this.normalizePlatform(n);
            var a = d.getSessionId(),
            i = new o['default'](
              function (i, o) {
                var s = {
                  jsonrpc: '2.0',
                  method: e,
                  params: t,
                  id: p.v4()
                },
                c = r.apiUrl + '/' + (n || 'web') + '/api';
                l.gateway.devQueryParams &&
                (c += '?' + e),
                r.log('Requesting', s),
                u.post(c).set('X-GatewaySession', a).type('json').send(s).end(
                  function (e, t) {
                    var n = t &&
                    t.body &&
                    t.body.error ||
                    t &&
                    t.error ||
                    e;
                    return n ? (r.log('Rejected ', s), console.error(n), o(n)) : (
                      r.log('Resolved', s),
                      r.log('Result', t.body.result),
                      i(t.body.result)
                    )
                  }
                )
              }
            );
            return i
          },
          a.prototype.ugcRequest = function (e) {
            var t = d.getSessionId(),
            n = new o['default'](
              function (n, r) {
                var a = new XMLHttpRequest;
                a.open('GET', e, !0),
                a.responseType = 'arraybuffer',
                a.setRequestHeader('X-GatewaySession', t),
                a.onload = function () {
                  if (200 !== this.status) return r(this.status);
                  var e = new DataView(this.response),
                  t = 0,
                  a = e.getInt32(t);
                  t += 4;
                  var i = [];
                  if (3 === a) {
                    var o = e.getInt32(t);
                    t += 4;
                    for (var s = 0; o > s; s++) t += 12,
                    i.push([e.getFloat32(t),
                    e.getFloat32(t + 4),
                    e.getFloat32(t + 8)]),
                    t += 28
                  }
                  return n(i)
                },
                a.onerror = function (e) {
                  return r(e)
                },
                a.send()
              }
            );
            return n
          },
          e.exports = new a(l.gateway.apiUrl, {
            log: l.gateway.logEnabled
          })
        },
        function (e, t) {
          'use strict';
          function n() {
            this.webglSupported = !1,
            this.webglEnabled = !1,
            this.extensionsSupported = !1,
            this.extensions = {},
            this.check()
          }
          n.prototype.check = function () {
            var e,
            t,
            n = document.createElement('canvas');
            if (
              'supportsContext' in n ? this.webglSupported = n.supportsContext('webgl') ||
              n.supportsContext('experimental-webgl') : this.webglSupported = !!window.WebGLRenderingContext,
              this.webglSupported
            ) {
              try {
                e = n.getContext('webgl') ||
                n.getContext('experimental-webgl'),
                this.webglEnabled = !!e,
                t = e.getSupportedExtensions()
              } catch (r) {
                return
              }
              e &&
              (this.extensionsSupported = !0);
              for (var a = 0, i = t.length; i > a; a++) this.extensions[t[a]] = !0
            }
            n = null
          },
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            addIntel: function (e) {
              r.handleViewAction({
                type: a.INTEL_ADD,
                items: e
              })
            },
            removeIntel: function (e) {
              r.handleViewAction({
                type: a.INTEL_REMOVE,
                items: e
              })
            },
            resetIntel: function () {
              r.handleViewAction({
                type: a.INTEL_RESET
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            syncLegend: function (e) {
              r.handleViewAction({
                type: a.LEGEND_SYNC,
                challenges: e
              })
            },
            addLegendChallenges: function (e) {
              r.handleViewAction({
                type: a.LEGEND_ADD,
                legendChallenge: e
              })
            },
            removeLegendChallenge: function (e) {
              r.handleViewAction({
                type: a.LEGEND_REMOVE,
                guid: e
              })
            },
            toggleChallenge: function (e, t) {
              r.handleViewAction({
                type: a.LEGEND_TOGGLE,
                guidCategory: e,
                guid: t
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            mapState: function (e) {
              r.handleViewAction({
                type: a.MAP_PAUSED,
                status: e
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(10),
          a = n(6).ActionTypes,
          i = {
            setTemp: function () {
              r.handleViewAction({
                type: a.EMBLEM_SET
              })
            },
            updateTemp: function (e) {
              r.handleViewAction({
                type: a.EMBLEM_EDIT,
                temp: e
              })
            },
            resetTemp: function () {
              r.handleViewAction({
                type: a.EMBLEM_RESET
              })
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(456);
          e.exports = r({
            SERVER_ACTION: null,
            VIEW_ACTION: null,
            ROUTER_ACTION: null,
            GATEWAY_CLIENT_ACTION: null
          })
        },
        function (e, t) {
          'use strict';
          e.exports = {
            Random: 1,
            New: 2,
            Popular: 3,
            RecentlyPlayed: 4,
            Friend: 5
          }
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(19),
              i = n(54);
              n(784);
              var o = r.createClass({
                displayName: 'PreviewCreator',
                clicked: function (e, t) {
                  t.target.blur(),
                  e(t.target.id)
                },
                renderPreviews: function () {
                  var e = this;
                  return this.props.previews.sets.map(
                    function (i, o) {
                      return r.createElement(
                        'div',
                        {
                          className: 'set',
                          key: 'set' + o
                        },
                        r.createElement('div', {
                          className: 'setTitle'
                        }, t(i.title)),
                        r.createElement(
                          'div',
                          {
                            className: 'setContainer'
                          },
                          i.items.map(
                            function (t, i) {
                              var s,
                              c = a(
                                e.props.previews.size,
                                {
                                  selected: t.image.name === e.props.previews.selected,
                                  locked: !t.unlocked
                                }
                              ),
                              l = {};
                              if (t.unlocked) {
                                switch (t.image.type) {
                                  case 'detail':
                                    l.backgroundImage = 'url(\'' + n(310) ('./' + t.image.name + '.png') + '\')';
                                    break;
                                  case 'frame':
                                    l.backgroundImage = 'url(\'' + n(311) ('./' + t.image.name + '.png') + '\')';
                                    break;
                                  case 'bg':
                                    l.backgroundImage = 'url(\'' + n(309) ('./' + t.image.name + '.jpg') + '\')'
                                }
                                s = r.createElement(
                                  'button',
                                  {
                                    id: t.image.name,
                                    className: c,
                                    type: 'button',
                                    style: l,
                                    onClick: t.unlocked ? e.clicked.bind(e, t.event) : null,
                                    key: 'preview' + o + i
                                  }
                                )
                              } else s = r.createElement(
                                'button',
                                {
                                  type: 'button',
                                  style: l,
                                  className: a(e.props.previews.size, 'locked'),
                                  key: 'preview' + o + i
                                },
                                r.createElement('i', {
                                  className: 'fa fa-lock fa-3x'
                                })
                              );
                              return s
                            }
                          )
                        )
                      )
                    }
                  )
                },
                render: function () {
                  var e = this.renderPreviews();
                  return r.createElement(
                    'div',
                    {
                      className: 'previewContainer'
                    },
                    r.createElement(i, {
                      minHeight: 300
                    }, e)
                  )
                }
              });
              e.exports = o
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          var r = n(2);
          n(785);
          var a = r.createClass({
            displayName: 'RadialGraph',
            propTypes: {
              label: r.PropTypes.string.isRequired,
              mainValue: r.PropTypes.number.isRequired,
              subValue: r.PropTypes.number,
              centerValue: r.PropTypes.number,
              centerImage: r.PropTypes.string,
              onClick: r.PropTypes.func
            },
            getInitialState: function () {
              return {
                curMainPerc: 0,
                curSubPerc: 0
              }
            },
            componentDidMount: function () {
              this._initialTimeout = setTimeout(this.animate, 200)
            },
            componentDidUpdate: function () {
              this._animationFrame = requestAnimationFrame(this.animate)
            },
            componentWillUnmount: function () {
              this._initialTimeout &&
              clearTimeout(this._initialTimeout),
              this._animationFrame &&
              cancelAnimationFrame(this._animationFrame)
            },
            percentToAngle: function (e) {
              var t = 3.6 * e,
              n = Math.PI / 180 * t;
              return n
            },
            animate: function () {
              var e = this.state.curMainPerc,
              t = this.state.curSubPerc,
              n = this.refs.canvas;
              if (n) {
                var r = n.getContext('2d');
                r.clearRect(0, 0, 160, 160),
                r.lineCap = 'butt',
                r.save(),
                r.strokeStyle = '#646464',
                r.lineWidth = 2,
                r.setLineDash([2,
                4]),
                r.beginPath(),
                r.arc(
                  65,
                  65,
                  59,
                  - this.percentToAngle(25),
                  this.percentToAngle(t) - this.percentToAngle(25),
                  !1
                ),
                r.stroke(),
                r.restore(),
                r.lineWidth = 6,
                r.save(),
                r.strokeStyle = '#DDD',
                r.beginPath(),
                r.arc(65, 65, 50, 0, this.percentToAngle(100), !1),
                r.stroke(),
                r.restore(),
                r.strokeStyle = '#646464',
                r.beginPath(),
                r.arc(
                  65,
                  65,
                  50,
                  - this.percentToAngle(25),
                  this.percentToAngle(e) - this.percentToAngle(25),
                  !1
                ),
                r.stroke(),
                e < this.props.mainValue &&
                this.setState({
                  curMainPerc: e + 1
                }),
                t < this.props.subValue &&
                this.setState({
                  curSubPerc: t + 1
                })
              }
            },
            render: function () {
              var e;
              return e = this.props.centerImage ? r.createElement('img', {
                src: this.props.centerImage,
                alt: ''
              }) : this.props.centerValue ? this.props.centerValue : this.props.mainValue,
              r.createElement(
                'div',
                {
                  className: 'graph',
                  onClick: this.props.onClick
                },
                r.createElement(
                  'canvas',
                  {
                    className: 'canvas',
                    height: '130',
                    width: '130',
                    ref: 'canvas'
                  }
                ),
                r.createElement('div', {
                  className: 'graph-value'
                }, e),
                r.createElement(
                  'div',
                  {
                    className: 'graph-label'
                  },
                  this.props.label,
                  ' ',
                  this.props.onClick ? r.createElement('i', {
                    className: 'fa fa-angle-right'
                  }) : null
                )
              )
            }
          });
          e.exports = a
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(19);
              n(786);
              var i = r.createClass({
                displayName: 'StarCreator',
                drawStars: function () {
                  return this.props.starThresholds.map(
                    function (e, t) {
                      var n = this.props.player.score > e ? 'empty' : 'filled';
                      return r.createElement(
                        'span',
                        {
                          key: 'star' + t,
                          className: 'star'
                        },
                        r.createElement('i', {
                          className: a('fa', 'empty' === n ? 'fa-star-o' : 'fa-star')
                        })
                      )
                    }.bind(this)
                  )
                },
                renderStars: function () {
                  if (0 !== this.props.time) {
                    if (this.props.player.globalRank <= 3) return r.createElement(
                      'span',
                      {
                        className: 'top-rank'
                      },
                      r.createElement('img', {
                        src: n(358),
                        className: 'eye'
                      }),
                      t('ID_WEB_LEADERBOARD_NR').replace('[NUMBER]', this.props.player.globalRank)
                    );
                    if (this.props.player.score < this.props.starThresholds[2]) {
                      if (this.props.player.percentile) {
                        var e = t('ID_WEB_LEADERBOARD_TOP_RANK').replace('[RANK]', this.props.player.percentile);
                        return r.createElement(
                          'span',
                          {
                            className: 'top-rank'
                          },
                          r.createElement('img', {
                            src: n(358),
                            className: 'eye'
                          }),
                          e
                        )
                      }
                      return this.drawStars()
                    }
                    return this.drawStars()
                  }
                  return this.props.starThresholds.map(
                    function (e) {
                      return r.createElement(
                        'span',
                        {
                          key: 'star' + e,
                          className: 'star'
                        },
                        r.createElement('i', {
                          className: 'fa fa-star-o'
                        })
                      )
                    }
                  )
                },
                render: function () {
                  var e = this.renderStars();
                  return r.createElement('div', {
                    className: 'stars'
                  }, e)
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          var r = n(1480);
          e.exports = function (e) {
            return r[e] ||
            e
          }
        },
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(91).EventEmitter,
          s = n(328),
          c = function (e) {
            var t = this;
            return this.canvas = document.createElement('canvas'),
            this.style = (0, i['default']) ({
              font: '28px "Lato-Regular"',
              color: '#103564'
            }, e.style),
            this.label = void 0 !== e.label ? e.label : null,
            s(['Lato-Regular']).then(function () {
              return t.draw()
            }),
            this
          };
          c.prototype.draw = function () {
            var e = this.canvas.getContext('2d'),
            t = 512,
            n = 64,
            r = 26;
            this.canvas.width = t,
            this.canvas.height = n,
            e.font = this.style.font;
            var a = [],
            i = [],
            o = 0;
            this.label.split(' ').forEach(
              function (n) {
                a[o] ||
                (a[o] = ''),
                i[o] ||
                (i[o] = 0);
                var r = e.measureText((i[o] > 0 ? ' ' : '') + n.toUpperCase()).width;
                i[o] > 0 &&
                i[o] + r > t &&
                (o += 1, a[o] = '', i[o] = 0),
                a[o] += (i[o] > 0 ? ' ' : '') + n,
                i[o] += r
              }
            );
            var s = a.length ? Math.max.apply(Math, i) : 0,
            c = r * a.length,
            l = {
              x: (t - s) / 2,
              y: (n - c) / 2 + r
            };
            e.fillStyle = this.style.color,
            a.forEach(
              function (n, a) {
                e.fillText(n.toUpperCase(), (t - i[a]) / 2, l.y + a * r)
              }
            ),
            this.emit('change')
          },
          (0, i['default']) (c.prototype, o.prototype),
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(55),
          s = r(o),
          c = n(91).EventEmitter,
          l = n(272),
          u = function (e) {
            return c.call(this),
            this.canvas = document.createElement('canvas'),
            this.emblem = e.emblem ||
            {
            },
            this.draw(),
            this
          };
          u.prototype.draw = function () {
            function e(e, t, n, r) {
              var a = document.createElement('canvas');
              a.width = n,
              a.height = r;
              var i = a.getContext('2d');
              return i.drawImage(e, 0, 0),
              i.globalCompositeOperation = 'destination-out',
              i.drawImage(t, 0, 0),
              a
            }
            function t(e, t, n) {
              var r = document.createElement('canvas');
              r.width = t,
              r.height = n;
              var a = r.getContext('2d');
              return a.drawImage(e, 0, 0),
              r
            }
            var r = this.canvas.getContext('2d');
            this.canvas.width = 512,
            this.canvas.height = 512;
            var a = new Image;
            a.crossOrigin = '';
            var i = new s['default'](
              function (e) {
                a.addEventListener('load', e),
                a.src = n(309) ('./' + (this.emblem.bg || l.bg) + '.jpg')
              }.bind(this)
            ),
            o = new Image;
            o.crossOrigin = '';
            var c = new s['default'](
              function (e) {
                o.addEventListener('load', e),
                o.src = n(310) ('./' + (this.emblem.detail || l.detail) + '.png')
              }.bind(this)
            ),
            u = new Image;
            u.crossOrigin = '';
            var p = new s['default'](
              function (e) {
                u.addEventListener('load', e),
                u.src = n(531) ('./' + (this.emblem.detail || l.detail) + '.png')
              }.bind(this)
            ),
            d = new Image;
            d.crossOrigin = '';
            var f = new s['default'](
              function (e) {
                d.addEventListener('load', e),
                d.src = n(311) ('./' + (this.emblem.frame || l.frame) + '.png')
              }.bind(this)
            ),
            m = new Image;
            m.crossOrigin = '';
            var h = new s['default'](function (e) {
              m.addEventListener('load', e),
              m.src = n(99)
            });
            s['default'].all([i,
            c,
            p,
            f,
            h]).then(
              function () {
                r.drawImage(a, 0, 0, 880, 880),
                r.globalCompositeOperation = 'source-in',
                r.drawImage(e(d, u, 880, 880), 0, 0, 880, 880),
                r.globalCompositeOperation = 'destination-over',
                r.drawImage(t(o, 880, 880), 0, 0, 880, 880),
                r.globalCompositeOperation = 'destination-over',
                r.drawImage(a, 0, 0, 880, 880),
                r.globalCompositeOperation = 'destination-in',
                r.drawImage(m, 0, 0, 512, 512),
                this.emit('change')
              }.bind(this)
            )
          },
          (0, i['default']) (u.prototype, c.prototype),
          e.exports = u
        },
        function (e, t) {
          'use strict';
          var n = {
            missions: {
              id: 'missions',
              title: 'Missions',
              legendKey: 'ID_WEB_LEGEND_CATEGORY_MISSIONS'
            },
            security: {
              id: 'security',
              title: 'Security',
              legendKey: 'ID_WEB_LEGEND_CATEGORY_SECURITY'
            },
            challenges: {
              id: 'challenges',
              title: 'Challenges',
              legendKey: 'ID_MPA_CHALLENGES'
            },
            objectives: {
              id: 'objectives',
              title: 'Runner Objectives',
              legendKey: 'ID_WEB_LEGEND_CATEGORY_RUNNERS_OBJECTIVES'
            },
            social: {
              id: 'social',
              title: 'Social',
              legendKey: 'ID_WEB_LEGEND_CATEGORY_SOCIAL'
            }
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          var r = n(284),
          a = n(562),
          i = n(533),
          o = n(692),
          s = n(674),
          c = n(139),
          l = n(24).RouterStore,
          u = a.extend({
            idAttribute: 'uniqueId',
            props: {
              uniqueId: 'string',
              data: 'object'
            }
          }),
          p = i.extend({
            model: u
          }),
          d = function (e) {
            function t(e) {
              if (!e._obj.legendCategory || !e._obj.legendKey) return !0;
              var t = s[e._obj.legendCategory].legendKey,
              n = e._obj.legendKey,
              r = c.getActiveLegendChallenges();
              return r[t] ? !!r[t][n] : !1
            }
            function n() {
              return !0
            }
            function a(e) {
              return e._obj.data.meta &&
              e._obj.data.meta.transform
            }
            function i(e) {
              return !!h.get(e.id)
            }
            function u() {
              m.set(f.filter(function (e) {
                return i(e) ? !0 : a(e) &&
                t(e) &&
                n(e)
              }))
            }
            function d() {
              h.set(
                f.filter(
                  function (e) {
                    var t = e._obj.getRoute();
                    return t ? l.isActive.apply(l, t) : !1
                  }
                )
              )
            }
            var f = new p,
            m = new p,
            h = new p;
            f.on('add remove', function () {
              d(),
              u()
            }),
            l.addChangeListener(function () {
              d(),
              u()
            }),
            c.addChangeListener(function () {
              u()
            }),
            m.on('add', function (t) {
              e.add(t._obj)
            }),
            m.on('remove', function (t) {
              e.remove(t._obj)
            }),
            h.on('add', function (t) {
              e.focus(t._obj)
            }),
            h.on('remove', function (t) {
              e.unfocus(t._obj)
            }),
            r(
              o,
              function (e) {
                e.collection = new p,
                e.collection.on('add', function (t) {
                  t._obj = new e(t.get('data')),
                  f.add(t)
                }),
                e.collection.on('remove', function (e) {
                  f.remove(e)
                });
                var t = function () {
                  e.collection.set(
                    e.statics.getAll().map(
                      function (t) {
                        return {
                          uniqueId: e.statics.getUniqueId(t),
                          data: t
                        }
                      }
                    )
                  )
                };
                e.statics.addChangeListener(t),
                t()
              }
            )
          };
          e.exports = d
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(77),
              l = n(4),
              u = n(18),
              p = n(52),
              d = function (e) {
                o.call(this, e)
              };
              d.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!l.getIsReady() || !l.getIsLoggedIn()) return [];
                  var e = l.getCurrentPersona(),
                  t = u.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = void 0 !== t.pf_Global_CityUnlockState ? t.pf_Global_CityUnlockState : null;
                  return c.getAll().filter(function (e) {
                    return p(e.meta.transform) <= n
                  })
                },
                addChangeListener: function (e) {
                  l.addChangeListener(e),
                  u.addChangeListener(e),
                  c.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  l.removeChangeListener(e),
                  u.removeChangeListener(e),
                  c.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              d.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'BillboardHack',
                legendKey: 'billboard',
                legendCategory: 'challenges',
                iconImage: 'billboardHack_outline.png',
                iconFocusedImage: 'billboardHack_focus.png',
                zoomRange: [
                  0,
                  0.8
                ],
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_BILLBOARDHACK_LABEL'),
                    content: t(this.data.meta.displayName)
                  })
                },
                getRoute: function () {
                  return ['HackableBillboard',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(4),
              l = n(18),
              u = n(336),
              p = function (e) {
                o.call(this, e)
              };
              p.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return [];
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = u.getAll();
                  return n.filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag]
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              p.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'Delivery',
                legendKey: 'delivery',
                legendCategory: 'objectives',
                iconImage: 'delivery_outline.png',
                iconFocusedImage: 'delivery_focus.png',
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_DELIVERY_LABEL'),
                    content: t(this.data.meta.caption)
                  })
                },
                getRoute: function () {
                  return ['deliverymission',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = p
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(672),
              c = n(4),
              l = n(18),
              u = n(52),
              p = n(1475),
              d = function (e) {
                o.call(this, e)
              };
              d.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return p;
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = void 0 !== t.pf_Global_CityUnlockState ? t.pf_Global_CityUnlockState : null;
                  return p.filter(function (e) {
                    return u(e.meta.transform) <= n
                  })
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.name
                }
              }),
              d.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'districtLabel',
                iconImage: null,
                iconSize: {
                  x: 256,
                  y: 32
                },
                zoomRange: [
                  0.8,
                  1
                ],
                getIconImage: function () {
                  return new s({
                    label: t(this.data.meta.name)
                  })
                },
                getTooltip: null,
                onClick: null
              }),
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(4),
              l = n(18),
              u = n(337),
              p = function (e) {
                o.call(this, e)
              };
              p.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return [];
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = u.getAll();
                  return n.filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag]
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              p.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'Diversion',
                legendKey: 'diversion',
                legendCategory: 'objectives',
                iconImage: 'diversion_outline.png',
                iconFocusedImage: 'diversion_focus.png',
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_DIVERSION_LABEL'),
                    content: t(this.data.meta.caption)
                  })
                },
                getRoute: function () {
                  return ['diversionmission',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = p
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(4),
              l = n(18),
              u = n(338),
              p = function (e) {
                o.call(this, e)
              };
              p.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return [];
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = u.getAll();
                  return n.filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag]
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              p.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'GridNode',
                legendKey: 'gridnode',
                legendCategory: 'missions',
                iconImage: 'gridNode_outline.png',
                iconFocusedImage: 'gridNode_focus.png',
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_GRIDNODE_LABEL'),
                    content: t(this.data.meta.caption)
                  })
                },
                getRoute: function () {
                  return ['gridnode',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = p
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(22),
          s = n(27),
          c = n(4),
          l = n(138),
          u = function (e) {
            o.call(this, e),
            this.iconImage = this.data.meta.icon + '_outline.png',
            this.iconFocusedImage = this.data.meta.icon + '_focus.png'
          };
          u.statics = (0, i['default']) ({
          }, o.statics, {
            getAll: function () {
              return c.getIsLoggedIn() ? [] : l.getItems().map(function (e) {
                return {
                  id: e.id,
                  meta: e
                }
              })
            },
            addChangeListener: function (e) {
              c.addChangeListener(e),
              l.addChangeListener(e)
            },
            removeChangeListener: function (e) {
              c.removeChangeListener(e),
              l.removeChangeListener(e)
            },
            getUniqueId: function (e) {
              return e.id
            }
          }),
          u.prototype = (0, i['default']) ({
          }, o.prototype, {
            typeId: 'intel',
            getTooltip: function () {
              return new s({
                title: this.data.meta.tooltip.title,
                content: this.data.meta.tooltip.body
              })
            },
            getRoute: function () {
              return ['intel',
              {
                id: this.data.id
              }
              ]
            },
            onClick: function () {
              var e = new CustomEvent(
                '/ga/cta',
                {
                  detail: {
                    category: 'map',
                    action: 'HotspotClick',
                    label: this.data.meta.tooltip.title
                  }
                }
              );
              document.dispatchEvent(e),
              o.prototype.onClick.apply(this, arguments)
            }
          }),
          e.exports = u
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(4),
              l = n(18),
              u = n(140),
              p = function (e) {
                o.call(this, e)
              };
              p.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return [];
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = u.getAll();
                  return n.filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag]
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              p.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'MissionMain',
                legendKey: 'main',
                legendCategory: 'missions',
                iconImage: 'missionMain_outline.png',
                iconFocusedImage: 'missionMain_focus.png',
                getTooltip: function () {
                  return new s({
                    title: t(this.data.meta.description.availableName)
                  })
                },
                onClick: null
              }),
              e.exports = p
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(4),
              l = n(18),
              u = n(342),
              p = function (e) {
                o.call(this, e)
              };
              p.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!c.getIsReady() || !c.getIsLoggedIn()) return [];
                  var e = c.getCurrentPersona(),
                  t = l.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = u.getAll();
                  return n.filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag]
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              p.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'MissionSide',
                legendKey: 'side',
                legendCategory: 'missions',
                iconImage: 'missionSide_outline.png',
                iconFocusedImage: 'missionSide_focus.png',
                getTooltip: function () {
                  return new s({
                    title: t(this.data.meta.description.availableName)
                  })
                },
                onClick: null
              }),
              e.exports = p
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(39),
              i = r(a),
              o = n(3),
              s = r(o),
              c = n(22),
              l = n(27),
              u = n(673),
              p = n(4),
              d = n(17),
              f = n(53),
              m = function (e) {
                c.call(this, e),
                e.meta.personaId === p.getCurrentPersonaId() &&
                (this.iconImage = 'player.png', this.getIconImage = null)
              };
              m.statics = (0, s['default']) ({
              }, c.statics, {
                getAll: function () {
                  if (!p.getIsLoggedIn()) return [];
                  var e = p.getCurrentPersona();
                  if (!e) return [];
                  var t = p.getCurrentPersona().personaId;
                  if (!t) return [];
                  var n = d.getAccountDetails();
                  return n &&
                  null !== n.friends ? [
                    {
                      meta: n
                    }
                  ] : []
                },
                addChangeListener: function (e) {
                  p.addChangeListener(e),
                  d.addChangeListener(e),
                  f.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  p.removeChangeListener(e),
                  d.removeChangeListener(e),
                  f.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return (0, i['default']) ([e.meta.personaId,
                  e.meta.profileEmblem])
                }
              }),
              m.prototype = (0, s['default']) ({
              }, c.prototype, {
                typeId: 'players',
                legendKey: 'Players',
                legendCategory: 'social',
                zoomRange: [
                  0,
                  1
                ],
                getIconImage: function () {
                  return new u({
                    emblem: this.data.meta.profileEmblem
                  })
                },
                getTooltip: function () {
                  return new l({
                    title: t('ID_WEB_MAP_PLAYER'),
                    content: this.data.meta.name
                  })
                },
                getRoute: function () {
                  return ['profile',
                  {
                    id: this.data.meta.personaId
                  }
                  ]
                }
              }),
              e.exports = m
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(39),
              i = r(a),
              o = n(3),
              s = r(o),
              c = n(22),
              l = n(27),
              u = n(44),
              p = n(24).RouterStore,
              d = n(4),
              f = n(18),
              m = n(52),
              h = function (e) {
                c.call(this, e)
              };
              h.statics = (0, s['default']) ({
              }, c.statics, {
                getAll: function () {
                  if (!d.getIsLoggedIn()) {
                    if (!p.isActive('ReachThis')) return [];
                    var e = p.getCurrentState(),
                    t = {
                      userId: e.params.userId,
                      id: e.params.id
                    },
                    n = u.get(t);
                    return n &&
                    n.meta &&
                    n.meta.transform ? [
                      n
                    ] : []
                  }
                  var r = d.getCurrentPersona(),
                  a = f.getStatsForPersona(r.personaId) ||
                  {
                  };
                  if (!a.pf_GoldCompleted_Mischief_Maker) return [];
                  var i = void 0 !== a.pf_Global_CityUnlockState ? a.pf_Global_CityUnlockState : null;
                  return u.getPublished().filter(function (e) {
                    return m(e.meta.transform) <= i
                  })
                },
                addChangeListener: function (e) {
                  u.addChangeListener(e),
                  d.addChangeListener(e),
                  f.addChangeListener(e),
                  p.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  u.removeChangeListener(e),
                  d.removeChangeListener(e),
                  f.removeChangeListener(e),
                  p.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return (0, i['default']) ([e.meta.ugcId.id,
                  e.meta.ugcId.userId,
                  e.meta.name])
                }
              }),
              h.prototype = (0, s['default']) ({
              }, c.prototype, {
                typeId: 'reachThis',
                legendKey: 'ReachThis',
                legendCategory: 'social',
                iconImage: 'reachThis_outline.png',
                iconFocusedImage: 'reachThis_focus.png',
                zoomRange: [
                  0,
                  0.4
                ],
                getTooltip: function () {
                  return new l({
                    title: t('ID_MAP_REACHTHIS_LABEL'),
                    content: this.data.meta.name
                  })
                },
                getRoute: function () {
                  return ['ReachThis',
                  {
                    userId: this.data.meta.ugcId.userId,
                    id: this.data.meta.ugcId.id
                  }
                  ]
                }
              }),
              e.exports = h
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(39),
              i = r(a),
              o = n(3),
              s = r(o),
              c = n(22),
              l = n(27),
              u = n(45),
              p = n(24).RouterStore,
              d = n(4),
              f = n(18),
              m = n(52),
              h = function (e) {
                c.call(this, e);
                var t;
                null !== this.data.userStats &&
                (
                  this.data.userStats.finishTime <= this.data.meta.threshold3Star ? t = 3 : this.data.userStats.finishTime <= this.data.meta.threshold2Star ? t = 2 : this.data.userStats.finishTime <= this.data.meta.threshold1Star &&
                  (t = 1)
                ),
                this.iconImage = 'runnersRoute_outline' + (t || '') + '.png',
                this.iconFocusedImage = 'runnersRoute_focus' + (t || '') + '.png'
              };
              h.statics = (0, s['default']) ({
              }, c.statics, {
                getAll: function () {
                  if (!d.getIsLoggedIn()) {
                    if (!p.isActive('RunnersRoute')) return [];
                    var e = p.getCurrentState(),
                    t = u.get(e.params.id);
                    return t &&
                    t.meta &&
                    t.meta.transform ? [
                      t
                    ] : []
                  }
                  var n = d.getCurrentPersona(),
                  r = f.getStatsForPersona(n.personaId) ||
                  {
                  },
                  a = void 0 !== r.pf_Global_CityUnlockState ? r.pf_Global_CityUnlockState : null;
                  return u.getAll(d.getCurrentPersona().personaId).filter(function (e) {
                    return m(e.meta.transform) <= a
                  })
                },
                addChangeListener: function (e) {
                  u.addChangeListener(e),
                  d.addChangeListener(e),
                  f.addChangeListener(e),
                  p.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  u.removeChangeListener(e),
                  d.removeChangeListener(e),
                  f.removeChangeListener(e),
                  p.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return null !== e.userStats ? (0, i['default']) ([e.meta.id,
                  e.userStats]) : (0, i['default']) ([e.meta.id])
                }
              }),
              h.prototype = (0, s['default']) ({
              }, c.prototype, {
                typeId: 'RunnersRoute',
                legendKey: 'runnersRoute',
                legendCategory: 'challenges',
                zoomRange: [
                  0,
                  0.8
                ],
                getTooltip: function () {
                  return new l({
                    title: t('ID_MAP_RUNNERSROUTE_LABEL'),
                    content: t(this.data.meta.displayName)
                  })
                },
                getRoute: function () {
                  return ['RunnersRoute',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = h
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(340),
              l = n(4),
              u = n(18),
              p = n(52),
              d = function (e) {
                o.call(this, e)
              };
              d.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!l.getIsReady() || !l.getIsLoggedIn()) return [];
                  var e = l.getCurrentPersona(),
                  t = u.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = void 0 !== t.pf_Global_CityUnlockState ? t.pf_Global_CityUnlockState : null;
                  return c.getAll().filter(function (e) {
                    return p(e.meta.transform) <= n
                  })
                },
                addChangeListener: function (e) {
                  l.addChangeListener(e),
                  u.addChangeListener(e),
                  c.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  l.removeChangeListener(e),
                  u.addChangeListener(e),
                  c.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              d.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'SafeHouse',
                legendKey: 'safehouse',
                legendCategory: 'security',
                iconImage: 'safeHouse_outline.png',
                iconFocusedImage: 'safeHouse_focus.png',
                zoomRange: [
                  0,
                  0.8
                ],
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_SAFEHOUSE_LABEL'),
                    content: t(this.data.meta.displayName)
                  })
                },
                getRoute: function () {
                  return ['safehouse',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = [
                {
                  meta: {
                    id: 1,
                    name: 'ID_MAP_TOGGLE_UNDERGROUND',
                    description: 'ID_MAP_SHOW_UNDERGROUND_DESC',
                    transform: {
                      x: - 417.478271,
                      y: 5,
                      z: 522.074341
                    },
                    image: 'underground-down'
                  }
                },
                {
                  meta: {
                    id: 2,
                    name: 'ID_MAP_TOGGLE_UNDERGROUND',
                    description: 'ID_MAP_SHOW_UNDERGROUND_DESC',
                    transform: {
                      x: - 306.233337,
                      y: 5,
                      z: 690.6997
                    },
                    image: 'underground-down'
                  }
                },
                {
                  meta: {
                    id: 3,
                    name: 'ID_MAP_TOGGLE_UNDERGROUND',
                    description: 'ID_MAP_SHOW_SURFACE_DESC',
                    transform: {
                      x: - 417.478271,
                      y: - 5,
                      z: 522.074341
                    },
                    image: 'underground-up'
                  }
                },
                {
                  meta: {
                    id: 4,
                    name: 'ID_MAP_TOGGLE_UNDERGROUND',
                    description: 'ID_MAP_SHOW_SURFACE_DESC',
                    transform: {
                      x: - 306.233337,
                      y: - 5,
                      z: 690.6997
                    },
                    image: 'underground-up'
                  }
                }
              ],
              l = function (e) {
                o.call(this, e),
                this.iconImage = this.data.meta.image + '_outline.png',
                this.iconFocusedImage = this.data.meta.image + '_focus.png'
              };
              l.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  return c
                },
                getUniqueId: function (e) {
                  return 'sceneSwitcher' + e.meta.id
                }
              }),
              l.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'sceneSwitch',
                legendKey: 'sceneswitch',
                legendCategory: 'security',
                iconImage: null,
                iconFocusedImage: null,
                getTooltip: function () {
                  return new s({
                    title: t(this.data.meta.name),
                    content: t(this.data.meta.description)
                  })
                },
                onClick: function (e) {
                  e.switchScene()
                }
              }),
              e.exports = l
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(22),
              s = n(27),
              c = n(341),
              l = n(4),
              u = n(18),
              p = n(52),
              d = function (e) {
                o.call(this, e)
              };
              d.statics = (0, i['default']) ({
              }, o.statics, {
                getAll: function () {
                  if (!l.getIsReady() || !l.getIsLoggedIn()) return [];
                  var e = l.getCurrentPersona(),
                  t = u.getStatsForPersona(e.personaId) ||
                  {
                  },
                  n = void 0 !== t.pf_Global_CityUnlockState ? t.pf_Global_CityUnlockState : null;
                  return c.getAll().filter(
                    function (e) {
                      return t[e.meta.availableStat] &&
                      !t[e.meta.completedFlag] &&
                      p(e.meta.transform) <= n
                    }
                  )
                },
                addChangeListener: function (e) {
                  c.addChangeListener(e),
                  l.addChangeListener(e),
                  u.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  c.removeChangeListener(e),
                  l.removeChangeListener(e),
                  u.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return e.meta.id
                }
              }),
              d.prototype = (0, i['default']) ({
              }, o.prototype, {
                typeId: 'SecurityHub',
                legendKey: 'security',
                legendCategory: 'objectives',
                iconImage: 'securityHub_outline.png',
                iconFocusedImage: 'securityHub_focus.png',
                zoomRange: [
                  0,
                  0.8
                ],
                getTooltip: function () {
                  return new s({
                    title: t('ID_MAP_SECURITYHUB_LABEL'),
                    content: t(this.data.meta.name)
                  })
                },
                getRoute: function () {
                  return ['securityhub',
                  {
                    id: this.data.id
                  }
                  ]
                }
              }),
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(39),
              i = r(a),
              o = n(3),
              s = r(o),
              c = n(22),
              l = n(27),
              u = n(38),
              p = n(24).RouterStore,
              d = n(4),
              f = n(18),
              m = n(52),
              h = function (e) {
                c.call(this, e)
              };
              h.statics = (0, s['default']) ({
              }, c.statics, {
                getAll: function () {
                  if (!d.getIsLoggedIn()) {
                    if (!p.isActive('TimeTrial')) return [];
                    var e = p.getCurrentState(),
                    t = {
                      userId: e.params.userId,
                      id: e.params.id
                    },
                    n = u.get(t);
                    return n &&
                    n.meta &&
                    n.meta.transform ? [
                      n
                    ] : []
                  }
                  var r = d.getCurrentPersona(),
                  a = f.getStatsForPersona(r.personaId) ||
                  {
                  };
                  if (!a.pf_GoldCompleted_Mischief_Maker) return [];
                  var i = void 0 !== a.pf_Global_CityUnlockState ? a.pf_Global_CityUnlockState : null;
                  return u.getPublished().filter(function (e) {
                    return m(e.meta.transform) <= i
                  })
                },
                addChangeListener: function (e) {
                  u.addChangeListener(e),
                  d.addChangeListener(e),
                  f.addChangeListener(e),
                  p.addChangeListener(e)
                },
                removeChangeListener: function (e) {
                  u.removeChangeListener(e),
                  d.removeChangeListener(e),
                  f.removeChangeListener(e),
                  p.removeChangeListener(e)
                },
                getUniqueId: function (e) {
                  return (0, i['default']) ([e.meta.ugcId.id,
                  e.meta.ugcId.userId,
                  e.meta.name])
                }
              }),
              h.prototype = (0, s['default']) ({
              }, c.prototype, {
                typeId: 'timeTrial',
                legendKey: 'TimeTrial',
                legendCategory: 'social',
                iconImage: 'timeTrial_outline.png',
                iconFocusedImage: 'timeTrial_focus.png',
                zoomRange: [
                  0,
                  0.4
                ],
                getTooltip: function () {
                  return new l({
                    title: t('ID_MAP_TIMETRIAL_LABEL'),
                    content: this.data.meta.name
                  })
                },
                getRoute: function () {
                  return ['TimeTrial',
                  {
                    userId: this.data.meta.ugcId.userId,
                    id: this.data.meta.ugcId.id
                  }
                  ]
                }
              }),
              e.exports = h
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(22),
          s = n(38),
          c = n(24).RouterStore,
          l = function (e) {
            o.call(this, e),
            e.meta.isFinish &&
            (
              this.iconImage = 'timeTrialFinish.png',
              this.iconSize = {
                x: 24,
                y: 24
              }
            )
          };
          l.statics = (0, i['default']) ({
          }, o.statics, {
            addChangeListener: function (e) {
              s.addChangeListener(e),
              c.addChangeListener(e)
            },
            removeChangeListener: function (e) {
              s.removeChangeListener(e),
              c.removeChangeListener(e)
            },
            getAll: function () {
              var e,
              t,
              n;
              return c.isActive('TimeTrial') &&
              (
                e = c.getCurrentState(),
                t = {
                  userId: e.params.userId,
                  id: e.params.id
                },
                n = s.getCheckpoints(t)
              ),
              n ? n.map(
                function (e, r) {
                  return {
                    meta: {
                      transform: {
                        x: e[0],
                        y: e[1],
                        z: e[2]
                      },
                      id: r,
                      ugcId: t,
                      isFinish: r === n.length - 1
                    }
                  }
                }
              ) : []
            },
            getUniqueId: function (e) {
              return e.meta.ugcId.id + e.meta.ugcId.userId + e.meta.id
            }
          }),
          l.prototype = (0, i['default']) ({
          }, o.prototype, {
            typeId: 'timeTrialCheckpoint',
            iconImage: 'timeTrialCheckpoint.png',
            zoomRange: [
              0,
              0.6
            ],
            iconSize: {
              x: 8,
              y: 8
            },
            getTooltip: null,
            onClick: null
          }),
          e.exports = l
        },
        function (e, t, n) {
          'use strict';
          e.exports = {
            ReachThis: n(685),
            RunnersRoute: n(686),
            TimeTrial: n(690),
            TimeTrialCheckpoint: n(691),
            Player: n(684),
            DistrictLabel: n(678),
            SceneSwitch: n(688),
            BillboardHack: n(676),
            MissionMain: n(682),
            MissionSide: n(683),
            GridNode: n(680),
            SafeHouse: n(687),
            SecurityHub: n(689),
            Delivery: n(677),
            Diversion: n(679),
            Intel: n(681)
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          var a = n(3),
          i = r(a),
          o = n(12),
          s = n(10),
          c = n(6).ActionTypes,
          l = !1,
          u = (0, i['default']) ({
          }, o, {
            getShowDevTools: function () {
              return l
            }
          });
          u.dispatchToken = s.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case c.DEVTOOLS_SHOW:
                  l = !0,
                  u.emitChange();
                  break;
                case c.DEVTOOLS_HIDE:
                  l = !1,
                  u.emitChange()
              }
            }
          ),
          e.exports = u
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e) {
            return c(m, function (t) {
              return t.id === e
            })
          }
          function i() {
            m = f.slice()
          }
          var o = n(3),
          s = r(o),
          c = n(16),
          l = n(12),
          u = n(6).ActionTypes,
          p = n(10),
          d = n(14),
          f = n(1485),
          m = [],
          h = (0, s['default']) ({
          }, l, {
            getAll: function () {
              return m
            },
            get: function (e) {
              return a(e)
            }
          });
          h.dispatchToken = p.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case u.APP_START:
                  i(),
                  h.emitChange()
              }
            }
          ),
          h.gatewayDispatchToken = d.register(
            function (e) {
              var t = e.action;
              switch (t.type) {
                case 'BeatAuthentication.viaAuthCode':
                case 'BeatAuthentication.logout':
                  i(),
                  h.emitChange()
              }
            }
          ),
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          var r = n(2);
          n(789);
          var a = r.createClass({
            displayName: 'LoadingSpinner',
            render: function () {
              return r.createElement('div', {
                className: 'loading-spinner'
              })
            }
          });
          e.exports = a
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(790);
              var i = r.createClass({
                displayName: 'AboutView',
                render: function () {
                  return r.createElement(
                    a,
                    {
                      position: 'left',
                      className: 'panel-about',
                      title: t('ID_WEB_TITLE_ABOUT')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'content-left'
                      },
                      r.createElement('h2', null, 'Hello World'),
                      r.createElement('p', null, 'This section needs some content.')
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r,
              a = n(2),
              i = n(19),
              o = n(8),
              s = n(24).RouterStore,
              c = n(4),
              l = n(20);
              n(791);
              var u = a.createClass({
                displayName: 'ActionButtons',
                mixins: [
                  o.create(s, c)
                ],
                getStateFromStore: function () {
                  return {
                    isHomeActive: s.isActive('home'),
                    isMapActive: s.isActive('map'),
                    isEmbedded: s.getIsEmbedded(),
                    isLoggedIn: c.getIsLoggedIn()
                  }
                },
                onDevToolsClick: function (e) {
                  e.preventDefault(),
                  r.show()
                },
                render: function () {
                  return a.createElement(
                    'div',
                    {
                      className: i(
                        'action-buttons',
                        {
                          hidden: !this.state.isHomeActive &&
                          !this.state.isMapActive
                        }
                      )
                    },
                    this.state.isMapActive &&
                    this.state.isLoggedIn ? a.createElement(
                      l,
                      {
                        to: 'legend'
                      },
                      a.createElement('img', {
                        src: n(1350),
                        alt: ''
                      }),
                      a.createElement('span', null, t('ID_WEB_NAV_MAP_LEGEND'))
                    ) : null,
                    this.state.isEmbedded ? null : a.createElement(
                      l,
                      {
                        to: 'legal',
                        className: 'action-button-legal'
                      },
                      a.createElement('img', {
                        src: n(1349),
                        alt: ''
                      }),
                      a.createElement('span', null, t('ID_WEB_NAV_HELPABOUT'))
                    ),
                    null
                  )
                }
              });
              e.exports = u
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(85);
              n(792);
              var i = r.createClass({
                displayName: 'ErrorNotifier',
                componentDidMount: function () {
                  document.addEventListener('online', this.onOnline, !1),
                  document.addEventListener('offline', this.onOffline, !1)
                },
                componentWillUnmount: function () {
                  document.removeEventListener('online', this.onOnline, !1),
                  document.removeEventListener('offline', this.onOffline, !1)
                },
                getInitialState: function () {
                  var e = !0;
                  void 0 !== window.navigator.connection &&
                  void 0 !== window.Connection ? window.navigator.connection.type === window.Connection.NONE &&
                  (e = !1) : void 0 !== window.navigator.onLine &&
                  (e = window.navigator.onLine);
                  var t = !1;
                  return {
                    connected: e,
                    dismissed: t
                  }
                },
                onOnline: function () {
                  this.setState({
                    connected: !0,
                    dismissed: !1
                  })
                },
                onOffline: function () {
                  this.setState({
                    connected: !1,
                    dismissed: !1
                  })
                },
                onDismiss: function () {
                  this.setState({
                    dismissed: !0
                  })
                },
                render: function () {
                  var e = null;
                  return this.state.connected ||
                  this.state.dismissed ||
                  (
                    e = r.createElement(
                      'div',
                      {
                        className: 'error-notifier'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'error-message'
                        },
                        t('ID_WEB_ERROR_NO_INTERNETS')
                      ),
                      r.createElement('button', {
                        onClick: this.onDismiss
                      }, '×')
                    )
                  ),
                  r.createElement(
                    a,
                    {
                      component: 'div',
                      className: 'error-notifier-container',
                      transitionName: 'view',
                      transitionEnterTimeout: 250,
                      transitionLeaveTimeout: 250
                    },
                    e
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(793);
              var i = r.createClass({
                displayName: 'ErrorView',
                render: function () {
                  return r.createElement(
                    a,
                    {
                      position: 'right',
                      className: 'panel-error',
                      title: t('ID_WEB_TITLE_ERROR')
                    },
                    r.createElement('h2', null, t('ID_WEB_TITLE_ERROR')),
                    r.createElement('p', null, t('ID_WEB_ERROR_NOTFOUND'))
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          var r = n(2);
          n(794);
          var a = r.createClass({
            displayName: 'HomeView',
            render: function () {
              return null
            }
          });
          e.exports = a
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(11),
              o = n(138),
              s = n(15);
              n(795);
              var c = r.createClass({
                displayName: 'IntelView',
                mixins: [
                  a.create(o)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  s.getIntel(this.getId())
                },
                getStateFromStore: function () {
                  return {
                    item: o.getItem(this.getId()),
                    article: o.getArticle(this.getId())
                  }
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                renderBodyElement: function (e, t) {
                  switch (e.resourceType) {
                    case 'ea/core/contentapi/components/text':
                      return r.createElement('div', {
                        key: t,
                        dangerouslySetInnerHTML: {
                          __html: e.text
                        }
                      });
                    case 'ea/core/contentapi/components/image':
                      return r.createElement('img', {
                        key: t,
                        src: e.fileReference,
                        alt: ''
                      });
                    case 'ea/core/contentapi/components/youtube':
                      return r.createElement(
                        'div',
                        {
                          key: t,
                          className: 'video-container'
                        },
                        r.createElement(
                          'iframe',
                          {
                            src: 'http://www.youtube.com/embed/' + e.youtubeID,
                            width: '560',
                            height: '315'
                          }
                        )
                      );
                    default:
                      return null
                  }
                },
                render: function () {
                  if (!this.state.item && !this.state.article) return r.createElement(i, {
                    position: 'right'
                  });
                  var e,
                  n;
                  return this.state.article &&
                  this.state.article.featuredImage &&
                  (
                    e = this.state.article.featuredImage.fileReference,
                    n = this.state.article.featuredImage.title ||
                    ''
                  ),
                  r.createElement(
                    i,
                    {
                      position: 'right',
                      className: 'panel-intel',
                      title: t('ID_WEB_TITLE_INTEL')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'article-header'
                      },
                      r.createElement('div', {
                        className: 'article-type'
                      }, 'Intel'),
                      r.createElement('div', {
                        className: 'article-subheading'
                      }),
                      r.createElement('h2', null, this.state.article ? this.state.article.pageTitle : '')
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'article-body'
                      },
                      e ? r.createElement('img', {
                        key: n,
                        src: e,
                        alt: n
                      }) : '',
                      this.state.article ? this.state.article.body.elements.map(this.renderBodyElement) : ''
                    )
                  )
                }
              });
              e.exports = c
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(68),
              i = n(8),
              o = n(11),
              s = n(20),
              c = n(136),
              l = n(60),
              u = n(32),
              p = n(72),
              d = n(322),
              f = n(78),
              m = n(4);
              n(796);
              var h = r.createClass({
                displayName: 'CountrySelector',
                getInitialState: function () {
                  return {
                    isOpen: !1
                  }
                },
                componentDidMount: function () {
                  addEventListener('mousedown', this.onPageClick, !1)
                },
                componentWillUnmount: function () {
                  removeEventListener('mousedown', this.onPageClick, !1)
                },
                onPageClick: function (e) {
                  this.state.isOpen &&
                  !a.findDOMNode(this).contains(e.target) &&
                  this.setState({
                    isOpen: !1
                  })
                },
                onChangeCountry: function (e) {
                  e !== l.getCountry().id &&
                  l.setCountry(e)
                },
                onClick: function () {
                  this.setState({
                    isOpen: !this.state.isOpen
                  })
                },
                render: function () {
                  var e,
                  t = this;
                  this.state.isOpen &&
                  (
                    e = r.createElement(
                      'div',
                      {
                        className: 'locale-selector'
                      },
                      c.countries.map(
                        function (e) {
                          return r.createElement(
                            'button',
                            {
                              className: 'locale-button',
                              key: e.id,
                              onClick: t.onChangeCountry.bind(t, e.id)
                            },
                            r.createElement('img', {
                              src: n(308) ('./' + e.id.toUpperCase() + '.png'),
                              alt: ''
                            }),
                            ' ',
                            e.name
                          )
                        }
                      )
                    )
                  );
                  var a = l.getCountry();
                  return r.createElement(
                    'div',
                    {
                      className: 'locale-selector-container'
                    },
                    e,
                    r.createElement(
                      'button',
                      {
                        className: 'locale-button',
                        onClick: this.onClick
                      },
                      r.createElement('img', {
                        src: n(308) ('./' + a.id.toUpperCase() + '.png'),
                        alt: ''
                      }),
                      ' ',
                      a.name
                    )
                  )
                }
              }),
              _ = r.createClass({
                displayName: 'AgeRating',
                renderESRB: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://esrb.org'
                      },
                      r.createElement('img', {
                        src: n(1342),
                        alt: t('ID_WEB_LEGAL_ESRB_RP')
                      })
                    )
                  )
                },
                renderPEGI: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://www.pegi.info'
                      },
                      r.createElement('img', {
                        src: n(1346),
                        alt: t('ID_WEB_LEGAL_PEGI_16')
                      })
                    ),
                    t('ID_WEB_LEGAL_PEGI_PROVISIONAL')
                  )
                },
                renderACB: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://www.classification.gov.au/Pages/Home.aspx'
                      },
                      r.createElement('img', {
                        src: n(1339),
                        alt: 'PG'
                      })
                    ),
                    'ACB'
                  )
                },
                renderDEJUS: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://culturadigital.br/classind/'
                      },
                      r.createElement('img', {
                        src: n(1341),
                        alt: '16'
                      })
                    ),
                    'DEJUS'
                  )
                },
                renderUSK: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://www.usk.de/'
                      },
                      r.createElement(
                        'img',
                        {
                          src: n(1348),
                          alt: 'USK Einstufung ausstehend / Rating pending'
                        }
                      )
                    ),
                    'USK'
                  )
                },
                renderCERO: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://www.cero.gr.jp/'
                      },
                      r.createElement('img', {
                        src: n(1340),
                        alt: 'CERO'
                      })
                    ),
                    'CERO'
                  )
                },
                renderRGRS: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'ratings'
                    },
                    r.createElement('img', {
                      src: n(1347),
                      alt: '18+'
                    }),
                    'RGRS'
                  )
                },
                render: function () {
                  switch (l.getCountry().id) {
                    case 'au':
                      return this.renderACB();
                    case 'br':
                      return this.renderDEJUS();
                    case 'de':
                      return this.renderUSK();
                    case 'jp':
                      return this.renderCERO();
                    case 'ru':
                      return this.renderRGRS();
                    case 'us':
                      return this.renderESRB();
                    case 'fr':
                    case 'it':
                    case 'pl':
                    case 'es':
                    case 'uk':
                    default:
                      return this.renderPEGI()
                  }
                }
              }),
              g = r.createClass({
                displayName: 'CreditsLogos',
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'credits'
                    },
                    r.createElement(
                      s,
                      {
                        href: 'http://ea.com'
                      },
                      r.createElement('img', {
                        src: n(1344),
                        alt: 'EA'
                      })
                    ),
                    r.createElement(
                      s,
                      {
                        href: 'fr' !== l.getCountry().id ? 'http://dice.se' : 'http://ea.com'
                      },
                      r.createElement('img', {
                        src: n(1343),
                        alt: 'DICE'
                      })
                    ),
                    r.createElement(
                      s,
                      {
                        href: 'fr' !== l.getCountry().id ? 'http://frostbite.com' : 'http://ea.com'
                      },
                      r.createElement('img', {
                        src: n(1345),
                        alt: 'Frostbite 3'
                      })
                    )
                  )
                }
              }),
              v = r.createClass({
                displayName: 'WebLegalView',
                render: function () {
                  return r.createElement(
                    o,
                    {
                      position: 'bottom',
                      className: 'panel-legal',
                      title: t('ID_WEB_TITLE_HELPABOUT')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'footer'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'footer-logos'
                        },
                        r.createElement(g, null),
                        r.createElement(_, null)
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'footer-buttons footer-buttons-help'
                        },
                        r.createElement(
                          s,
                          {
                            href: 'https://help.ea.com/en/mirrors-edge/mirrors-edge-catalyst/'
                          },
                          t('ID_WEB_LEGAL_SUPPORT')
                        ),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/1/service-updates'
                          },
                          t('ID_WEB_LEGAL_SERVICEUPDATES')
                        ),
                        r.createElement(h, null)
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'footer-buttons footer-buttons-legal'
                        },
                        r.createElement(
                          s,
                          {
                            href: l.getCountry().cookieLink
                          },
                          t('ID_WEB_LEGAL_PRIVACYPOLICY')
                        ),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/about'
                          },
                          t('ID_WEB_LEGAL_CORPORATEINFO')
                        ),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/global/legal/legalnotice.jsp'
                          },
                          t('ID_WEB_LEGAL_NOTICES')
                        ),
                        r.createElement(s, {
                          href: l.getCountry().eulaLink
                        }, t('ID_WEB_LEGAL_EULAS')),
                        r.createElement(s, {
                          href: l.getCountry().tosLink
                        }, t('ID_WEB_LEGAL_TOS'))
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'footer-copyright'
                        },
                        t('ID_WEB_LEGAL_COPYRIGHT')
                      )
                    )
                  )
                }
              }),
              E = r.createClass({
                displayName: 'TelemetryToggle',
                mixins: [
                  i.create(f)
                ],
                getStateFromStore: function () {
                  return {
                    telemetryEnabled: f.get('telemetry')
                  }
                },
                onToggleClick: function (e) {
                  var n = this;
                  e.preventDefault(),
                  window.cordova &&
                  navigator.notification ? this.state.telemetryEnabled ? navigator.notification.confirm(
                    t('ID_WEB_LEGAL_USAGE_SHARING_ENABLED_INFO'),
                    function (e) {
                      1 === e &&
                      n.disableTelemetry()
                    },
                    t('ID_WEB_LEGAL_USAGE_SHARING_DISABLE'),
                    [
                      t('ID_WEB_COMMON_YES'),
                      t('ID_WEB_COMMON_NO')
                    ]
                  ) : navigator.notification.confirm(
                    t('ID_WEB_LEGAL_USAGE_SHARING_DISABLED_INFO'),
                    function (e) {
                      1 === e &&
                      n.enableTelemetry()
                    },
                    t('ID_WEB_LEGAL_USAGE_SHARING_ENABLE'),
                    [
                      t('ID_WEB_COMMON_YES'),
                      t('ID_WEB_COMMON_NO')
                    ]
                  ) : this.state.telemetryEnabled &&
                  confirm(t('ID_WEB_LEGAL_USAGE_SHARING_ENABLED_INFO')) ? this.disableTelemetry() : !this.state.telemetryEnabled &&
                  confirm(t('ID_WEB_LEGAL_USAGE_SHARING_DISABLED_INFO')) &&
                  this.enableTelemetry()
                },
                enableTelemetry: function () {
                  d.set({
                    telemetry: !0
                  }),
                  u.settingChange('telemetry', 0, 1)
                },
                disableTelemetry: function () {
                  d.set({
                    telemetry: !1
                  }),
                  u.settingChange('telemetry', 1, 0)
                },
                render: function () {
                  return r.createElement(
                    s,
                    {
                      onClick: this.onToggleClick
                    },
                    t(
                      this.state.telemetryEnabled ? 'ID_WEB_LEGAL_USAGE_SHARING_DISABLE' : 'ID_WEB_LEGAL_USAGE_SHARING_ENABLE'
                    )
                  )
                }
              }),
              I = r.createClass({
                displayName: 'ShowPopupLink',
                showPopup: function (e) {
                  e.preventDefault(),
                  navigator.notification.alert(this.props.content, function () {
                  }, '', t('ID_WEB_COMMON_OK'))
                },
                render: function () {
                  var e = this;
                  return r.createElement(
                    'a',
                    {
                      href: '#',
                      onClick: function (t) {
                        return e.showPopup(t)
                      }
                    },
                    this.props.children
                  )
                }
              }),
              b = r.createClass({
                displayName: 'LogoutLink',
                mixins: [
                  i.create(m)
                ],
                getStateFromStore: function () {
                  return {
                    isLoggedIn: m.getIsLoggedIn()
                  }
                },
                onLogoutClick: function (e) {
                  e.preventDefault(),
                  p.showLogout()
                },
                render: function () {
                  return this.state.isLoggedIn ? r.createElement(s, {
                    onClick: this.onLogoutClick
                  }, t('ID_WEB_COMMON_LOGOUT')) : null
                }
              }),
              y = r.createClass({
                displayName: 'CordovaLegalView',
                render: function () {
                  var e = window.device &&
                  'iOS' === window.device.platform;
                  return r.createElement(
                    o,
                    {
                      position: 'bottom',
                      className: 'panel-legal',
                      title: t('ID_WEB_TITLE_HELPABOUT')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'footer'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'footer-about'
                        },
                        t('ID_WEB_APP_NAME'),
                        r.createElement('br', null),
                        t('ID_WEB_APP_COPYRIGHT'),
                        r.createElement('br', null),
                        t('ID_WEB_COMMON_VERSION'),
                        ': ',
                        '1.2.21'
                      ),
                      r.createElement('div', {
                        className: 'footer-logos'
                      }, r.createElement(g, null)),
                      r.createElement(
                        'div',
                        {
                          className: 'footer-buttons footer-buttons-help'
                        },
                        r.createElement(s, {
                          href: 'http://help.ea.com/'
                        }, t('ID_WEB_LEGAL_SUPPORT')),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/1/service-updates'
                          },
                          t('ID_WEB_LEGAL_SERVICEUPDATES')
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'footer-buttons footer-buttons-legal'
                        },
                        r.createElement(s, {
                          to: 'opensource'
                        }, t('ID_WEB_MORE_OPENSOURCE_TITLE')),
                        r.createElement(
                          s,
                          {
                            href: l.getCountry().cookieLink
                          },
                          t('ID_WEB_LEGAL_PRIVACYPOLICY')
                        ),
                        r.createElement(
                          I,
                          {
                            content: t('ID_WEB_LEGAL_SHARING')
                          },
                          t('ID_WEB_LEGAL_SOCIAL_SHARING')
                        ),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/about'
                          },
                          t('ID_WEB_LEGAL_CORPORATEINFO')
                        ),
                        r.createElement(
                          s,
                          {
                            href: 'http://www.ea.com/global/legal/legalnotice.jsp'
                          },
                          t('ID_WEB_LEGAL_NOTICES')
                        ),
                        r.createElement(
                          s,
                          {
                            href: e ? l.getCountry().iosEulaLink : l.getCountry().eulaLink
                          },
                          t('ID_WEB_LEGAL_EULAS')
                        ),
                        r.createElement(s, {
                          href: l.getCountry().tosLink
                        }, t('ID_WEB_LEGAL_TOS')),
                        r.createElement(E, null),
                        r.createElement(b, null)
                      )
                    )
                  )
                }
              }),
              T = r.createClass({
                displayName: 'LegalView',
                render: function () {
                  return window.cordova ? r.createElement(y, null) : r.createElement(v, null)
                }
              });
              e.exports = T
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(8),
          i = n(19),
          o = n(24).RouterStore;
          n(797);
          var s = r.createClass({
            displayName: 'Logo',
            mixins: [
              a.create(o)
            ],
            getStateFromStore: function () {
              return {
                isAboutActive: o.isActive('about'),
                isHomeActive: o.isActive('home')
              }
            },
            render: function () {
              var e = i('logo', 'logo-small');
              return r.createElement(
                'div',
                {
                  className: e
                },
                r.createElement(
                  'a',
                  {
                    href: 'http://www.mirrorsedge.com'
                  },
                  r.createElement('i', {
                    className: 'logo-image'
                  }, 'Mirror\'s Edge')
                )
              )
            }
          });
          e.exports = s
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(26),
              o = n(11),
              s = n(20),
              c = n(141),
              l = n(15);
              n(798);
              var u = r.createClass({
                displayName: 'NewsArticleView',
                mixins: [
                  a.create(c)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  l.getNewsArticle(this.getFriendlyId())
                },
                getStateFromStore: function () {
                  return {
                    article: c.getArticle(this.getFriendlyId())
                  }
                },
                getFriendlyId: function () {
                  return this.context.router.getCurrentParams().friendlyId
                },
                onTextLinkClick: function (e) {
                  var t = e.target;
                  if ('A' === t.tagName) {
                    e.preventDefault();
                    var n = t.getAttribute('href');
                    0 !== n.indexOf('http') &&
                    (n = i.websiteUrl + n),
                    window.cordova ? window.open(n, '_system') : window.open(n, '_blank')
                  }
                },
                renderBodyElement: function (e, t) {
                  var n = this;
                  switch (e.resourceType) {
                    case 'ea/core/contentapi/components/text':
                      return r.createElement(
                        'div',
                        {
                          onClick: function (e) {
                            return n.onTextLinkClick(e)
                          },
                          key: t,
                          dangerouslySetInnerHTML: {
                            __html: e.text
                          }
                        }
                      );
                    case 'ea/core/contentapi/components/image':
                      return r.createElement('img', {
                        key: t,
                        src: e.fileReference,
                        alt: ''
                      });
                    case 'ea/core/contentapi/components/youtube':
                      return r.createElement(
                        s,
                        {
                          key: t,
                          href: 'https://www.youtube.com/watch?v=' + e.youtubeID,
                          className: 'video-container'
                        },
                        r.createElement(
                          'img',
                          {
                            src: 'https://img.youtube.com/vi/' + e.youtubeID + '/maxresdefault.jpg',
                            alt: ''
                          }
                        ),
                        r.createElement('i', {
                          className: 'fa fa-play-circle-o'
                        })
                      );
                    default:
                      return null
                  }
                },
                render: function () {
                  return this.state.article ? r.createElement(
                    o,
                    {
                      position: 'left',
                      className: 'panel-news-article',
                      title: t('ID_WEB_TITLE_NEWS')
                    },
                    r.createElement('h2', null, this.state.article ? this.state.article.pageTitle : ''),
                    r.createElement(
                      'div',
                      {
                        className: 'article-body'
                      },
                      this.state.article ? this.state.article.body.elements.map(this.renderBodyElement) : ''
                    )
                  ) : r.createElement(o, {
                    position: 'left'
                  })
                }
              });
              e.exports = u
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(11),
              o = n(141),
              s = n(15),
              c = n(20),
              l = n(54);
              n(799);
              var u = r.createClass({
                displayName: 'NewsView',
                mixins: [
                  a.create(o)
                ],
                getInitialState: function () {
                  return {
                    page: 0
                  }
                },
                componentDidMount: function () {
                  s.getLatestNewsArticles(this.state.page)
                },
                getStateFromStore: function () {
                  return {
                    articles: o.getArticles(this.state ? this.state.page : 0)
                  }
                },
                render: function () {
                  return r.createElement(
                    i,
                    {
                      position: 'left',
                      className: 'panel-news',
                      title: t('ID_WEB_TITLE_NEWS'),
                      noScroll: !0
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'news-container'
                      },
                      r.createElement(
                        l,
                        null,
                        this.state.articles.map(
                          function (e) {
                            return r.createElement(
                              c,
                              {
                                to: 'news-article',
                                params: {
                                  friendlyId: e.friendlyId
                                },
                                key: e.friendlyId
                              },
                              r.createElement('h2', null, e.pageTitle),
                              r.createElement(
                                'div',
                                {
                                  className: 'article-image',
                                  style: {
                                    backgroundImage: 'url(' + e.featuredImage.fileReference + ')'
                                  }
                                }
                              ),
                              r.createElement('p', null, e.description)
                            )
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = u
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(801);
              var i = '\nReduce-component © 2012 Red Ventures\nKeymirror © 2013-2014 Facebook Inc.\nDat.gui © 2013 Google Data Arts Team\nCordova © 2015 Vladimir Kotikov\n\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.\nEsprima-fb © 2011 jQuery Foundation Inc. and contributors\nQs © 2014 Nathan LaFreniere and other contributors\nSource-map © 2009-2011 Mozilla Foundation and contributors\nFlux © 2014-2015 Facebook Inc.\nReact © 2013-2015 Facebook Inc.\nLeaflet.js © 2010-2015 Vladimir Agafonkin and © 2010-2011 CloudMade\nJstransform © 2013 Facebook Inc.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nFont Awesome ©2013 Dave Gandy @fontawesome\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\nThis license is available with a FAQ at: http://scripts.sil.org/OFL\n',
              o = r.createClass({
                displayName: 'OpenSourceView',
                render: function () {
                  return r.createElement(
                    a,
                    {
                      className: 'panel-opensource',
                      title: t('ID_WEB_MORE_OPENSOURCE_TITLE')
                    },
                    i.split('\n').map(
                      function (e) {
                        return r.createElement('div', null, e, r.createElement('br', null))
                      }
                    )
                  )
                }
              });
              e.exports = o
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(530),
              a = n(2),
              i = n(8),
              o = n(19),
              s = n(60),
              c = n(15),
              l = n(72),
              u = n(73),
              p = n(4),
              d = n(143),
              f = n(24).RouterStore,
              m = n(20),
              h = n(26);
              n(802);
              var _ = h.origin.redirectUrl,
              g = h.origin.loginUrl,
              v = _ + '/origin/logout.html',
              E = g + '/connect/logout?display=web2%2Flogin&client_id=pamplona-web&redirect_uri=' + encodeURIComponent(v),
              I = _ + '/origin/success.html',
              b = g + '/connect/auth?response_type=code&display=web2%2Flogin&client_id=pamplona-web&redirect_uri=' + encodeURIComponent(I),
              y = a.createClass({
                displayName: 'Origin',
                mixins: [
                  i.create(p, d, f)
                ],
                getInitialState: function () {
                  return {
                    hasClickedExplore: !1
                  }
                },
                getStateFromStore: function () {
                  return {
                    isSessionReady: p.getIsReady(),
                    isLoggedIn: p.getIsLoggedIn(),
                    isGuest: p.getIsGuest(),
                    hasAcceptedToS: p.getHasAcceptedToS(),
                    hasDismissedWelcome: p.getHasDismissedWelcome(),
                    showLogin: d.getShowLogin(),
                    showLogout: d.getShowLogout(),
                    loginError: d.getLoginError(),
                    requireLogin: h.requireLogin ||
                    f.getRequireLogin(),
                    isEmbedded: f.getIsEmbedded(),
                    isMapActive: f.isActive('map'),
                    hideWidget: !f.isActive('home') &&
                    !f.isActive('map')
                  }
                },
                getLoginErrorMessage: function (e) {
                  var n;
                  switch (e.code) {
                    case - 32502:
                      n = t('ID_WEB_ERROR_LOGIN_GW');
                      break;
                    case 701:
                      n = t('ID_WEB_ERROR_LOGIN_NOENTITLEMENT');
                      break;
                    default:
                      n = t('ID_WEB_ERROR_UNKNOWN')
                  }
                  return n
                },
                onLoginAuthCodeReceived: function (e) {
                  c.login(e, I, this.state.isEmbedded)
                },
                onLoginError: function () {
                  l.hideLogin()
                },
                onLoginCancel: function () {
                  l.hideLogin()
                },
                onLogoutSuccess: function () {
                  c.logout()
                },
                onLogoutError: function () {
                  c.logout()
                },
                onLogoutCancel: function () {
                  c.logout()
                },
                onTosAcceptClick: function () {
                  l.acceptToS()
                },
                onTosDeclineClick: function () {
                  l.showLogout()
                },
                onWelcomeExploreClick: function () {
                  this.setState({
                    hasClickedExplore: !0
                  })
                },
                onWelcomeDismissClick: function () {
                  u.dismissWelcome()
                },
                showLogin: function () {
                  l.showLogin()
                },
                hideLogin: function () {
                  l.hideLogin()
                },
                retryLogin: function () {
                  l.showLogin()
                },
                cancelLogin: function () {
                  l.hideLogin(),
                  l.showLogout()
                },
                renderLoginModal: function () {
                  var e,
                  n,
                  r;
                  return this.state.loginError ? (
                    r = this.getLoginErrorMessage(this.state.loginError),
                    e = a.createElement(
                      'div',
                      {
                        className: 'modal-box origin-modal'
                      },
                      a.createElement(
                        'div',
                        {
                          className: 'modal-message'
                        },
                        a.createElement('h3', null, t('ID_WEB_TITLE_ERROR_LONG')),
                        a.createElement('h4', null, r),
                        a.createElement(
                          'div',
                          {
                            className: 'buttons'
                          },
                          a.createElement(
                            'button',
                            {
                              className: 'btn',
                              onClick: this.retryLogin
                            },
                            t('ID_WEB_COMMON_TRYAGAIN')
                          ),
                          a.createElement(
                            'button',
                            {
                              className: 'btn',
                              onClick: this.cancelLogin
                            },
                            t('ID_WEB_COMMON_LOGOUT')
                          )
                        )
                      )
                    ),
                    n = this.state.isEmbedded &&
                    h.ignoreEmbeddedLoginErrors
                  ) : (
                    e = a.createElement(
                      'div',
                      {
                        className: 'modal-box origin-modal'
                      },
                      this.state.requireLogin ? null : a.createElement('a', {
                        className: 'modal-close',
                        onClick: this.hideLogin
                      }, '×'),
                      a.createElement('div', {
                        className: 'loading-spinner'
                      }),
                      a.createElement(
                        T,
                        {
                          onAuthCodeReceived: this.onLoginAuthCodeReceived,
                          onError: this.onLoginError,
                          onCancel: this.onLoginCancel
                        }
                      )
                    ),
                    n = this.state.isEmbedded
                  ),
                  a.createElement('div', {
                    className: 'modal',
                    style: n ? {
                      visibility: 'hidden'
                    }
                     : {
                    }
                  }, e)
                },
                renderToSModal: function () {
                  var e = s.getCountry(),
                  r = window.device &&
                  'iOS' === window.device.platform;
                  return a.createElement(
                    'div',
                    {
                      className: 'modal'
                    },
                    a.createElement(
                      'div',
                      {
                        className: 'modal-box tos-modal'
                      },
                      a.createElement(
                        'div',
                        {
                          className: 'tos-logo'
                        },
                        a.createElement('img', {
                          src: n(1351),
                          alt: ''
                        })
                      ),
                      a.createElement(
                        'div',
                        {
                          className: 'tos-container'
                        },
                        a.createElement('p', null, t('ID_WEB_LOGIN_TOS_MESSAGE')),
                        a.createElement(
                          'ul',
                          null,
                          a.createElement(
                            'li',
                            null,
                            a.createElement(m, {
                              href: e.tosLink,
                              target: '_blank'
                            }, t('ID_WEB_LEGAL_TOS'))
                          ),
                          a.createElement(
                            'li',
                            null,
                            a.createElement(
                              m,
                              {
                                href: r ? e.iosEulaLink : e.eulaLink,
                                target: '_blank'
                              },
                              t('ID_WEB_LEGAL_EULAS')
                            )
                          ),
                          a.createElement(
                            'li',
                            null,
                            a.createElement(
                              m,
                              {
                                href: e.cookieLink,
                                target: '_blank'
                              },
                              t('ID_WEB_LEGAL_PRIVACYPOLICY')
                            )
                          )
                        )
                      ),
                      a.createElement(
                        'div',
                        {
                          className: 'tos-buttons'
                        },
                        a.createElement(
                          'button',
                          {
                            onClick: this.onTosAcceptClick
                          },
                          t('ID_WEB_LOGIN_AGREE')
                        )
                      )
                    )
                  )
                },
                renderWelcomeModal: function () {
                  return a.createElement(
                    'div',
                    {
                      className: 'modal'
                    },
                    a.createElement(
                      'div',
                      {
                        className: 'modal-box welcome-modal'
                      },
                      a.createElement(
                        'div',
                        {
                          className: 'welcome-message'
                        },
                        a.createElement('h1', null, t('ID_WEB_LOGIN_GUEST_WELCOME')),
                        a.createElement('p', null, t('ID_WEB_LOGIN_GUEST_MESSAGE'))
                      ),
                      a.createElement(
                        'div',
                        {
                          className: 'welcome-buttons'
                        },
                        a.createElement(
                          m,
                          {
                            href: '/auth/login?ocreturn=/map',
                            target: '_self'
                          },
                          t('ID_WEB_LOGIN_GUEST_LOGIN')
                        ),
                        a.createElement(
                          'button',
                          {
                            onClick: this.onWelcomeExploreClick
                          },
                          t('ID_WEB_LOGIN_GUEST_EXPLORE')
                        )
                      ),
                      a.createElement(
                        'div',
                        {
                          className: 'welcome-dismiss'
                        },
                        a.createElement(
                          'button',
                          {
                            onClick: this.onWelcomeDismissClick
                          },
                          t('ID_WEB_LOGIN_GUEST_DISMISS')
                        )
                      )
                    )
                  )
                },
                renderLogoutModal: function () {
                  return a.createElement(
                    'div',
                    {
                      className: 'modal'
                    },
                    a.createElement(
                      'div',
                      {
                        className: 'modal-box origin-modal'
                      },
                      a.createElement('div', {
                        className: 'loading-spinner'
                      }),
                      a.createElement(
                        S,
                        {
                          onLogoutSuccess: this.onLogoutSuccess,
                          onError: this.onLogoutError,
                          onCancel: this.onLogoutCancel
                        }
                      )
                    )
                  )
                },
                render: function () {
                  return this.state.isSessionReady ? this.state.isEmbedded &&
                  this.state.isGuest ? null : this.state.showLogout ? this.renderLogoutModal() : this.state.isLoggedIn &&
                  !this.state.hasAcceptedToS ? this.renderToSModal() : this.state.isLoggedIn ? null : this.state.showLogin ||
                  this.state.requireLogin &&
                  !this.state.isEmbedded ? this.renderLoginModal() : this.state.isEmbedded &&
                  this.state.isMapActive &&
                  !this.state.hasClickedExplore &&
                  !this.state.hasDismissedWelcome ? this.renderWelcomeModal() : this.state.isEmbedded ? null : a.createElement(
                    'div',
                    {
                      className: o(
                        'login-widget',
                        {
                          hidden: !this.state.isEmbedded &&
                          this.state.hideWidget
                        }
                      )
                    },
                    a.createElement('a', {
                      onClick: this.showLogin
                    }, t('ID_WEB_NAV_LOGIN'))
                  ) : null
                }
              }),
              T = a.createClass({
                displayName: 'OriginLoginFrame',
                propTypes: {
                  onAuthCodeReceived: a.PropTypes.func.isRequired,
                  onError: a.PropTypes.func,
                  onCancel: a.PropTypes.func
                },
                componentDidMount: function () {
                  var e = this;
                  window.cordova &&
                  window.cordova.InAppBrowser ? this._browserTimeout = setTimeout(
                    function () {
                      e._browser = window.cordova.InAppBrowser.open(
                        b,
                        '_blank',
                        'location=no,toolbarposition=top,zoom=no,fullscreen=yes'
                      ),
                      e._browser.addEventListener('loadstop', function (t) {
                        e.onAuthUrl(t.url)
                      }),
                      e._browser.addEventListener('loaderror', function (t) {
                        e.onError()
                      }),
                      e._browserExitCallback = function (t) {
                        e.onExit()
                      },
                      e._browser.addEventListener('exit', e._browserExitCallback)
                    },
                    1000
                  ) : window.addEventListener('message', this.onMessage, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.cordova.InAppBrowser ? (
                    this._browserTimeout &&
                    clearTimeout(this._browserTimeout),
                    this._browser &&
                    (
                      this._browser.removeEventListener('exit', this._browserExitCallback),
                      this._browser.close()
                    )
                  ) : (
                    this.refs.originLoginFrame.blur(),
                    window.removeEventListener('message', this.onMessage)
                  )
                },
                onMessage: function (e) {
                  e.origin === _ &&
                  e.data &&
                  e.data.url &&
                  this.onAuthUrl(e.data.url)
                },
                onAuthUrl: function (e) {
                  var t = r.parse(e, !0),
                  n = t.query.code;
                  n &&
                  this.props.onAuthCodeReceived(n)
                },
                onError: function () {
                  window.cordova &&
                  window.cordova.InAppBrowser &&
                  (
                    this._browser &&
                    this._browser.close(),
                    navigator.notification &&
                    navigator.notification.alert(
                      t('ID_WEB_ERROR_LOGIN_ERROR_GENERIC'),
                      function () {
                      },
                      '',
                      t('ID_WEB_COMMON_OK')
                    )
                  ),
                  this._browser &&
                  (
                    this._browser.removeEventListener('exit', this._browserExitCallback),
                    this._browser.close()
                  ),
                  this.props.onError &&
                  this.props.onError()
                },
                onExit: function () {
                  this.props.onCancel &&
                  this.props.onCancel()
                },
                render: function () {
                  return window.cordova &&
                  window.cordova.InAppBrowser ? null : a.createElement(
                    'iframe',
                    {
                      src: b,
                      allowTransparency: 'true',
                      ref: 'originLoginFrame'
                    }
                  )
                }
              }),
              S = a.createClass({
                displayName: 'OriginLogoutFrame',
                propTypes: {
                  onLogoutSuccess: a.PropTypes.func.isRequired,
                  onError: a.PropTypes.func,
                  onCancel: a.PropTypes.func
                },
                componentDidMount: function () {
                  var e = this;
                  window.cordova &&
                  window.cordova.InAppBrowser ? this._browserTimeout = setTimeout(
                    function () {
                      e._browser = window.cordova.InAppBrowser.open(
                        E,
                        '_blank',
                        'location=no,toolbarposition=top,zoom=no,fullscreen=yes'
                      ),
                      e._browser.addEventListener('loadstop', function () {
                        e.props.onLogoutSuccess()
                      }),
                      e._browser.addEventListener('loaderror', function (t) {
                        e.onError()
                      }),
                      e._browserExitCallback = function (t) {
                        e.onExit()
                      },
                      e._browser.addEventListener('exit', e._browserExitCallback)
                    },
                    1000
                  ) : window.addEventListener('message', this.onMessage, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.cordova.InAppBrowser ? (
                    this._browserTimeout &&
                    clearTimeout(this._browserTimeout),
                    this._browser &&
                    (
                      this._browser.removeEventListener('exit', this._browserExitCallback),
                      this._browser.close()
                    )
                  ) : window.removeEventListener('message', this.onMessage)
                },
                onMessage: function (e) {
                  e.origin === _ &&
                  this.props.onLogoutSuccess()
                },
                onError: function () {
                  window.cordova &&
                  window.cordova.InAppBrowser &&
                  this._browser &&
                  this._browser.close(),
                  this._browser &&
                  (
                    this._browser.removeEventListener('exit', this._browserExitCallback),
                    this._browser.close()
                  ),
                  this.props.onError &&
                  this.props.onError()
                },
                onExit: function () {
                  this.props.onCancel &&
                  this.props.onCancel()
                },
                render: function () {
                  return window.cordova &&
                  window.cordova.InAppBrowser ? null : a.createElement('iframe', {
                    src: E
                  })
                }
              });
              e.exports = y
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(8),
              a = n(2),
              i = n(19),
              o = n(11),
              s = n(37),
              c = n(75),
              l = n(15),
              u = n(77),
              p = n(4),
              d = n(17);
              n(803);
              var f = a.createClass({
                displayName: 'BillboardHackView',
                mixins: [
                  r.create(u, p, d)
                ],
                contextTypes: {
                  router: a.PropTypes.func.isRequired,
                  depth: a.PropTypes.number.isRequired,
                  count: a.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1),
                  this.state.currentPersona &&
                  l.getBillboardData(this.getId())
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getStateFromStore: function () {
                  var e = {
                    billboard: u.get(this.getId()),
                    currentPersona: p.getCurrentPersona()
                  };
                  return e.billboard &&
                  e.billboard.hack &&
                  e.billboard.hack.leader ? (
                    e.hackedBy = e.billboard.hack.leader,
                    e.playerEmblem = d.getPlayerEmblem(e.billboard.hack.leader.personaId)
                  ) : e.hackedBy = null,
                  e
                },
                render: function () {
                  if (!this.state.billboard) return a.createElement(o, null);
                  var e;
                  return this.state.playerEmblem &&
                  (
                    e = a.createElement(
                      c,
                      {
                        emblem: {
                          bg: {
                            source: this.state.playerEmblem.bg,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          detail: {
                            source: this.state.playerEmblem.detail,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          frame: {
                            source: this.state.playerEmblem.frame,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          }
                        }
                      }
                    )
                  ),
                  a.createElement(
                    o,
                    {
                      title: t('ID_WEB_MAP_BILLBOARDHACK')
                    },
                    a.createElement(
                      'div',
                      {
                        className: 'billboard-hack'
                      },
                      a.createElement(
                        'div',
                        {
                          className: 'billboard-hack-head'
                        },
                        a.createElement('div', {
                          className: 'header-left'
                        }),
                        a.createElement(
                          'div',
                          {
                            className: 'billboard-hack-info'
                          },
                          a.createElement(
                            'div',
                            {
                              className: 'billboard-hack-name'
                            },
                            t('ID_WEB_MAP_BILLBOARDHACK')
                          )
                        )
                      ),
                      a.createElement('div', {
                        className: 'billboard-hack-image'
                      }, e),
                      a.createElement(
                        'div',
                        {
                          className: 'billboard-hack-actions'
                        },
                        a.createElement('div', {
                          className: 'actions-left'
                        }),
                        a.createElement(
                          'div',
                          {
                            className: 'actions-right'
                          },
                          this.state.currentPersona ? a.createElement(
                            'div',
                            {
                              className: 'billboard-hack-status'
                            },
                            a.createElement(
                              'i',
                              {
                                className: i(
                                  'fa',
                                  null !== this.state.hackedBy ? 'fa-bookmark' : 'fa-bookmark-o'
                                )
                              }
                            ),
                            '  ',
                            null !== this.state.hackedBy ? t('ID_WEB_BILLBOARD_HACKED').replace('[NAME]', this.state.hackedBy.name).replace('[DATE]', s.friendlyTimeStamp(this.state.hackedBy.score)) : t('ID_WEB_BILLBOARD_NOT_HACKED')
                          ) : null
                        )
                      ),
                      a.createElement(
                        'div',
                        {
                          className: 'billboard-hack-info'
                        },
                        t('ID_MAP_BILLBOARD_HACK_DESCRIPTION').split('\n').map(
                          function (e, t) {
                            return a.createElement('span', {
                              key: t
                            }, e, a.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = f
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(804);
              var i = r.createClass({
                displayName: 'DeliveryMissionView',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                render: function () {
                  var e = n(1352);
                  return r.createElement(
                    a,
                    {
                      title: t('ID_WEB_MAP_DELIVERYMISSION')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'delivery-mission'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'delivery-mission-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'delivery-mission-info'
                          },
                          r.createElement(
                            'div',
                            {
                              className: 'delivery-mission-name'
                            },
                            t('ID_WEB_MAP_DELIVERYMISSION')
                          )
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'delivery-mission-image',
                          style: {
                            backgroundImage: 'url(' + e + ')'
                          }
                        }
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'delivery-mission-info'
                        },
                        t('ID_MIS_OPP_DELIVERY_COVERT_AVAILABLE_DESCRIPTION').split('\n').map(
                          function (e, t) {
                            return r.createElement('span', {
                              key: t
                            }, e, r.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(805);
              var i = r.createClass({
                displayName: 'DiversionMissionView',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                render: function () {
                  return r.createElement(
                    a,
                    {
                      title: t('ID_WEB_MAP_DIVERSIONMISSION')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'diversion-mission'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'diversion-mission-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'diversion-mission-info'
                          },
                          r.createElement(
                            'div',
                            {
                              className: 'diversion-mission-name'
                            },
                            t('ID_WEB_MAP_DIVERSIONMISSION')
                          )
                        )
                      ),
                      r.createElement('div', {
                        className: 'diversion-mission-image'
                      }),
                      r.createElement(
                        'div',
                        {
                          className: 'diversion-mission-info'
                        },
                        t('ID_MIS_OPP_DIVERSION_AVAILABLE_DESCRIPTION').split('\n').map(
                          function (e, t) {
                            return r.createElement('span', {
                              key: t
                            }, e, r.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(806);
              var i = r.createClass({
                displayName: 'GridNodeView',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                render: function () {
                  return r.createElement(
                    a,
                    {
                      title: t('ID_WEB_MAP_GRIDNODE')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'grid-node'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'grid-node-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'grid-node-info'
                          },
                          r.createElement('div', {
                            className: 'grid-node-name'
                          }, t('ID_WEB_MAP_GRIDNODE'))
                        )
                      ),
                      r.createElement('div', {
                        className: 'grid-node-image'
                      }),
                      r.createElement(
                        'div',
                        {
                          className: 'grid-node-info'
                        },
                        t('ID_INT_GRIDNODE_TEXT').split('\n').map(
                          function (e, t) {
                            return r.createElement('span', {
                              key: t
                            }, e, r.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(20),
              o = n(54),
              s = n(62),
              c = n(74),
              l = n(11),
              u = n(15),
              p = n(4),
              d = n(44);
              n(151);
              var f = r.createClass({
                displayName: 'ReachThisLeaderboardView',
                mixins: [
                  a.create(d, p)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                getInitialState: function () {
                  return {
                    selected: 0
                  }
                },
                componentDidMount: function () {
                  this.fetchLeaderboards()
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    reachThis: d.get(this.getUgcId()),
                    currentPersona: p.getCurrentPersona()
                  }
                },
                fetchLeaderboards: function () {
                  u.getReachThisLeaderboard(this.getUgcId(), null, null, this.getPlatform()),
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  u.getReachThisFriendsLeaderboard(this.getUgcId())
                },
                changeSelected: function (e) {
                  this.setState({
                    selected: parseInt(e, 10)
                  })
                },
                render: function () {
                  if (!this.state.reachThis) return r.createElement(l, null);
                  var e = [
                    {
                      name: t('ID_WEB_LEADERBOARD_ALL'),
                      event: this.changeSelected
                    }
                  ];
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  e.push({
                    name: t('ID_WEB_LEADERBOARD_FRIENDS'),
                    event: this.changeSelected
                  });
                  var n,
                  a,
                  i;
                  switch (this.state.selected) {
                    case 0:
                      n = this.state.reachThis.fullLeaderboard,
                      a = 'full';
                      break;
                    case 1:
                      n = this.state.reachThis.friendLeaderboard,
                      a = 'friend'
                  }
                  if (this.state.reachThis.fullLeaderboard) {
                    var u = {
                      leader: n &&
                      n.leaderboard &&
                      n.leaderboard.users &&
                      n.leaderboard.users.length ? n.leaderboard.users[0] : null,
                      leaderboard: null === n ? '' : n.leaderboard,
                      challengeType: 'reachThis',
                      leaderboardType: a,
                      fullLeaderboardSize: null !== this.state.reachThis.fullLeaderboard ? this.state.reachThis.fullLeaderboard.leaderboard.totalCount : 0,
                      platform: this.getPlatform()
                    };
                    '' !== u.leaderboard &&
                    (i = r.createElement(s, {
                      info: u
                    }))
                  }
                  var p = r.createElement(
                    m,
                    {
                      meta: this.state.reachThis.meta,
                      platform: this.getPlatform()
                    }
                  );
                  return r.createElement(
                    l,
                    {
                      title: t('ID_WEB_TITLE_LEADERBOARD'),
                      className: 'panel-challenge-leaderboard'
                    },
                    p,
                    r.createElement(c, {
                      buttons: e,
                      selected: this.state.selected
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'leaderboard'
                      },
                      r.createElement(o, {
                        minHeight: 300
                      }, i)
                    )
                  )
                }
              }),
              m = r.createClass({
                displayName: 'ReachThisHeader',
                propTypes: {
                  meta: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'reach-this-head'
                    },
                    r.createElement('div', {
                      className: 'header-left'
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'reach-this-info'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'reach-this-creation'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'reach-this-creator'
                          },
                          r.createElement(
                            i,
                            {
                              to: 'ReachThis',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.id,
                                userId: this.props.meta.ugcId.userId
                              },
                              stack: !0
                            },
                            this.props.meta.name
                          ),
                          ' ',
                          t('ID_WEB_CHALLENGE_BY').toLowerCase(),
                          ' ',
                          r.createElement(
                            i,
                            {
                              to: 'profile',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.userId
                              },
                              className: 'ReachThis-creator',
                              stack: !0
                            },
                            this.props.meta.creatorName
                          )
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'reach-this-name'
                        },
                        t('ID_WEB_TITLE_LEADERBOARD')
                      )
                    )
                  )
                }
              });
              e.exports = f
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(55),
              i = r(a),
              o = n(2),
              s = n(8),
              c = n(19),
              l = n(26),
              u = n(20),
              p = n(92),
              d = n(62),
              f = n(75),
              m = n(37),
              h = n(11),
              _ = n(4),
              g = n(44),
              v = n(38),
              E = n(53),
              I = n(17),
              b = n(31),
              y = n(15),
              T = n(73),
              S = n(32);
              n(807);
              var C = o.createClass({
                displayName: 'ReachThisView',
                mixins: [
                  s.create(_, g)
                ],
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    editor: 'none'
                  }
                },
                componentDidMount: function () {
                  this.fetchReachThis()
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    reachThis: g.get(this.getUgcId()),
                    currentPersona: _.getCurrentPersona()
                  }
                },
                fetchReachThis: function () {
                  y.getReachThisData(
                    [this.getUgcId()],
                    [
                      'META',
                      'STATS',
                      'USER_STATS'
                    ],
                    null,
                    this.getPlatform()
                  ),
                  this.state.currentPersona ? y.getOverviewReachThisLeaderboard(this.getUgcId(), null, this.getPlatform()) : y.getReachThisLeaderboard(this.getUgcId(), 0, 6, this.getPlatform())
                },
                toggleEditor: function (e) {
                  this.setState({
                    editor: e
                  })
                },
                render: function () {
                  if (!this.state.reachThis) return o.createElement(h, null);
                  var e,
                  n = o.createElement(
                    D,
                    {
                      meta: this.state.reachThis.meta,
                      platform: this.getPlatform()
                    }
                  );
                  return e = 'challenge' === this.state.editor ? o.createElement(O, {
                    reachThis: this.state.reachThis,
                    toggle: this.toggleEditor
                  }) : 'report' === this.state.editor ? o.createElement(N, {
                    toggle: this.toggleEditor
                  }) : o.createElement(A, {
                    reachThis: this.state.reachThis,
                    toggle: this.toggleEditor
                  }),
                  o.createElement(
                    h,
                    {
                      title: t('ID_WEB_TITLE_REACHTHIS')
                    },
                    o.createElement('div', {
                      className: 'reach-this'
                    }, n, e)
                  )
                }
              }),
              D = o.createClass({
                displayName: 'ReachThisHeader',
                propTypes: {
                  meta: o.PropTypes.object,
                  platform: o.PropTypes.string
                },
                render: function () {
                  return o.createElement(
                    'div',
                    {
                      className: 'reach-this-head'
                    },
                    o.createElement('div', {
                      className: 'header-left'
                    }),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-info'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'reach-this-type'
                        },
                        t('ID_WEB_TITLE_REACHTHIS').toUpperCase()
                      ),
                      o.createElement(
                        'div',
                        {
                          className: 'reach-this-creation'
                        },
                        o.createElement(
                          'div',
                          {
                            className: 'reach-this-creator'
                          },
                          t('ID_WEB_CHALLENGE_BY'),
                          ' ',
                          this.props.meta.creatorName &&
                          'unknown' !== this.props.meta.creatorName ? o.createElement(
                            u,
                            {
                              to: 'profile',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.userId
                              },
                              className: 'ReachThis-creator',
                              stack: !0
                            },
                            this.props.meta.creatorName
                          ) : t('ID_SGM_UNKNOWN'),
                          ', ',
                          m.friendlyTimeStamp(this.props.meta.createdAt)
                        )
                      ),
                      o.createElement('div', {
                        className: 'reach-this-name'
                      }, this.props.meta.name)
                    )
                  )
                }
              }),
              A = o.createClass({
                displayName: 'ReachThisInfo',
                mixins: [
                  s.create(g, E, I, _)
                ],
                propTypes: {
                  reachThis: o.PropTypes.object,
                  toggle: o.PropTypes.func
                },
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    isBookmarked: E.getIsUgcBookmarked(this.getUgcId(), 'ReachThis'),
                    playerEmblem: I.getPlayerEmblem(this.getUgcId().userId),
                    currentPersona: _.getCurrentPersona()
                  }
                },
                onEditReachThisButtonClick: function () {
                  this.props.toggle('challenge')
                },
                onReportReachThisButtonClick: function () {
                  this.props.toggle('report')
                },
                onShareClick: function () {
                  var e = this;
                  _.getHasAcceptedSharing() ? this.share() : window.cordova &&
                  navigator.notification &&
                  navigator.notification.alert(
                    t('ID_WEB_LEGAL_SHARING'),
                    function () {
                      T.acceptSharing(),
                      e.share()
                    },
                    '',
                    t('ID_WEB_COMMON_OK')
                  )
                },
                share: function () {
                  if (window.cordova && window.plugins && window.plugins.socialsharing) {
                    var e = this.props.reachThis.meta.name,
                    t = this.props.reachThis.meta.ugcId,
                    n = l.sharing.shareUrl + '/beatle/' + this.getPlatform() + '/' + t.userId + '/' + t.id;
                    window.plugins.socialsharing.share(e, null, null, n)
                  }
                },
                toggleLeaderboard: function () {
                  b.navigateStacked(
                    this.context.depth + 1,
                    'ReachThis-leaderboard',
                    {
                      platform: this.getPlatform(),
                      userId: this.getUgcId().userId,
                      id: this.getUgcId().id
                    }
                  )
                },
                bookmark: function (e) {
                  var n = this;
                  e.preventDefault(),
                  this.state.isBookmarked ? y.removeUGCBookmark('ReachThis', this.props.reachThis.meta.ugcId) : y.addUGCBookmark('ReachThis', this.props.reachThis.meta.ugcId).then(
                    function () {
                      S.bookmark(
                        'ReachThis',
                        n.props.reachThis.meta.name,
                        n.props.reachThis.meta.ugcId.id
                      ),
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_REACHTHIS_BOOKMARK_SUCCESS'),
                        BookmarkMessage: t('ID_WEB_REACHTHIS_BOOKMARK_INFO_SUCCESS')
                      })
                    },
                    function () {
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_REACHTHIS_BOOKMARK_FAILURE'),
                        BookmarkMessage: t('ID_WEB_REACHTHIS_BOOKMARK_INFO_FAILURE')
                      })
                    }
                  )
                },
                showBookmarkedNotification: function () {
                  this.refs.bookmarkTooltip.show()
                },
                render: function () {
                  var e,
                  r = this;
                  this.state.playerEmblem &&
                  (
                    e = o.createElement(
                      f,
                      {
                        emblem: {
                          bg: {
                            source: this.state.playerEmblem.bg,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          detail: {
                            source: this.state.playerEmblem.detail,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          frame: {
                            source: this.state.playerEmblem.frame,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          }
                        }
                      }
                    )
                  );
                  var a;
                  if (this.props.reachThis.overviewLeaderboard) {
                    var i = {
                      leader: this.props.reachThis.overviewLeaderboard.globalLeader,
                      leaderboardType: 'overview',
                      leaderboard: this.props.reachThis.overviewLeaderboard.leaderboard,
                      challengeType: 'reachThis',
                      platform: this.getPlatform()
                    };
                    a = o.createElement(d, {
                      info: i
                    })
                  } else if (this.props.reachThis.fullLeaderboard) {
                    var s = {
                      leader: this.props.reachThis.fullLeaderboard.leaderboard.users.length > 0 ? this.props.reachThis.fullLeaderboard.leaderboard.users[0] : null,
                      leaderboardType: 'overview',
                      leaderboard: this.props.reachThis.fullLeaderboard.leaderboard,
                      challengeType: 'reachThis',
                      limit: 6,
                      platform: this.getPlatform()
                    };
                    a = o.createElement(d, {
                      info: s
                    })
                  }
                  var u;
                  l.sharing.enabled &&
                  window.cordova &&
                  window.plugins &&
                  window.plugins.socialsharing &&
                  (
                    u = o.createElement(
                      'button',
                      {
                        className: 'shareButton',
                        onClick: r.onShareClick
                      },
                      o.createElement('i', {
                        className: c('fa', 'fa-share-alt')
                      }),
                      '  ',
                      t('ID_WEB_CHALLENGE_SHARE')
                    )
                  );
                  var m;
                  m = t(
                    this.props.reachThis.meta.published === !0 ? 'ID_MPA_PUBLISHED_CHALLENGE' : 'ID_MPA_UNLISTED_CHALLENGE'
                  );
                  var h,
                  _,
                  g,
                  v,
                  E;
                  this.state.currentPersona &&
                  this.state.currentPersona.personaId === this.getUgcId().userId ? h = o.createElement(
                    'button',
                    {
                      type: 'button',
                      className: 'editButton',
                      onClick: r.onEditReachThisButtonClick
                    },
                    o.createElement('i', {
                      className: c('fa', 'fa-cog')
                    }),
                    '  ',
                    t('ID_WEB_EDIT_UGC_EDIT_CHALLENGE')
                  ) : this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() ? (
                    _ = o.createElement(
                      'button',
                      {
                        type: 'button',
                        ref: 'button',
                        key: 'bookmark',
                        className: 'bookmarkButton',
                        onClick: this.bookmark
                      },
                      o.createElement(
                        'i',
                        {
                          className: c('fa', this.state.isBookmarked ? 'fa-bookmark' : 'fa-bookmark-o')
                        }
                      ),
                      '  ',
                      t(
                        this.state.isBookmarked ? 'ID_WEB_BOOKMARK_REMOVE' : 'ID_WEB_BOOKMARK_ADD'
                      )
                    ),
                    g = o.createElement(
                      p,
                      {
                        title: this.state.BookmarkTitle,
                        description: this.state.BookmarkMessage,
                        ref: 'bookmarkTooltip'
                      }
                    ),
                    v = o.createElement(
                      'button',
                      {
                        type: 'button',
                        key: 'report',
                        className: 'editButton',
                        onClick: r.onReportReachThisButtonClick
                      },
                      o.createElement('i', {
                        className: c('fa', 'fa-exclamation-triangle')
                      }),
                      '  ',
                      t('ID_WEB_COMMON_REPORT')
                    )
                  ) : E = o.createElement(
                    'i',
                    {
                      className: 'platform-icon platform-icon-' + this.getPlatform()
                    }
                  );
                  var I = n(271);
                  return o.createElement(
                    'div',
                    {
                      className: 'reach-this-body'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-image',
                        style: {
                          backgroundImage: 'url(' + I + ')'
                        }
                      },
                      e
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-actions'
                      },
                      o.createElement('div', {
                        className: 'actions-left'
                      }),
                      o.createElement(
                        'div',
                        {
                          className: 'actions-right'
                        },
                        o.createElement('div', {
                          className: 'reach-this-actions-published-status'
                        }, m),
                        o.createElement('div', {
                          className: 'reach-this-actions-buttons'
                        }, u, _, g, v, h, E)
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-leaderboard'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'reach-this-lb-header'
                        },
                        t('ID_WEB_COMMON_LEADERBOARD'),
                        o.createElement(
                          'button',
                          {
                            onClick: this.toggleLeaderboard
                          },
                          t('ID_WEB_COMMON_SHOWALL'),
                          ' >'
                        )
                      ),
                      a
                    )
                  )
                }
              }),
              O = o.createClass({
                displayName: 'ReachThisEditor',
                mixins: [
                  s.create(g, v)
                ],
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    displayName: this.props.reachThis.meta.name
                  }
                },
                componentWillMount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.exitEditMode, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.exitEditMode, !1)
                },
                getStateFromStore: function () {
                  return {
                    ugc: {
                      timeTrials: v.getPublishedByCreator(this.getUgcId().userId),
                      reachThises: g.getPublishedByCreator(this.getUgcId().userId)
                    }
                  }
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                onDeleteClick: function () {
                  var e = this;
                  navigator.notification ? navigator.notification.confirm(
                    t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_CONFIRMATION'),
                    function (t) {
                      1 === t &&
                      e.deleteUgc()
                    },
                    t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_QUESTION'),
                    [
                      t('ID_WEB_EDIT_UGC_DELETE'),
                      t('ID_WEB_COMMON_CANCEL')
                    ]
                  ) : confirm(t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_CONFIRMATION')) &&
                  this.deleteUgc()
                },
                exitEditMode: function () {
                  this.props.toggle('none')
                },
                toggleEditing: function () {
                  var e = this,
                  n = this.state.displayName,
                  r = function () {
                    return new i['default'](
                      function (t, r) {
                        n !== e.props.reachThis.meta.name ? (
                          y.setUgcName('ReachThis', e.getUgcId(), n).then(t, r),
                          S.settingChange(
                            'ReachThis',
                            e.props.reachThis.meta.name,
                            n,
                            e.props.reachThis.meta.ugcId.id
                          )
                        ) : t()
                      }
                    )
                  },
                  a = this.refs.published.checked,
                  o = function () {
                    return new i['default'](
                      function (t, n) {
                        a !== e.props.reachThis.meta.published ? (
                          y.setUgcPublishedFlag('ReachThis', e.getUgcId(), a).then(t, n),
                          S.settingChange(
                            'ReachThis',
                            e.props.reachThis.meta.published ? 'published' : 'unpublished',
                            a ? 'published' : 'unpublished',
                            e.props.reachThis.meta.ugcId.id
                          )
                        ) : t()
                      }
                    )
                  };
                  if (this.refs.name.value.length <= 22) {
                    var s = this;
                    r().then(
                      function () {
                        o(),
                        s.exitEditMode()
                      },
                      function (e) {
                        s.refs.nametext.style.display = 'block',
                        300 === e.code ? s.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_CONTAINS_PROFANITY') : 302 === e.code &&
                        (
                          s.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_INVALID_NAME')
                        )
                      }
                    )
                  } else this.refs.nametext.style.display = 'block',
                  this.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_TOO_LONG')
                },
                editName: function (e) {
                  this.setState({
                    displayName: e.target.value
                  })
                },
                deleteUgc: function () {
                  y.deleteUGC('ReachThis', this.getUgcId()).then(function () {
                    return b.closeCurrentPanel()
                  })
                },
                render: function () {
                  var e = [].concat(this.state.ugc.reachThises || [], this.state.ugc.timeTrials || []);
                  return o.createElement(
                    'div',
                    {
                      className: 'reach-this-edit'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-edit-name'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement('label', {
                          htmlFor: 'name'
                        }, t('ID_WEB_COMMON_NAME')),
                        o.createElement(
                          'input',
                          {
                            type: 'text',
                            id: 'name',
                            ref: 'name',
                            maxLength: '22',
                            value: this.state.displayName,
                            onChange: this.editName
                          }
                        )
                      ),
                      o.createElement('div', {
                        className: 'name-text explanation',
                        ref: 'nametext'
                      })
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-edit-publish'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement('label', {
                          htmlFor: 'checkbox'
                        }, t('ID_WEB_COMMON_PUBLISHED')),
                        o.createElement(
                          'input',
                          {
                            type: 'checkbox',
                            id: 'checkbox',
                            ref: 'published',
                            defaultChecked: this.props.reachThis.meta.published,
                            disabled: e.length >= 10 &&
                            !this.props.reachThis.meta.published ? 'disabled' : ''
                          }
                        )
                      ),
                      o.createElement(
                        'div',
                        {
                          className: 'explanation'
                        },
                        t('ID_MPA_PUBLISH_DESC'),
                        o.createElement('br', null),
                        o.createElement('br', null),
                        t('ID_WEB_EDIT_UGC_PUBLISHED').replace('[PUBLISHED]', e.length),
                        o.createElement('br', null),
                        e.length >= 10 &&
                        !this.props.reachThis.meta.published ? t('ID_WEB_EDIT_UGC_UNPUBLISH_FOR_MORE_ROOM') : ''
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-edit-delete'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement(
                          'label',
                          {
                            htmlFor: 'delete'
                          },
                          t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_QUESTION')
                        ),
                        o.createElement(
                          'button',
                          {
                            id: 'delete',
                            onClick: this.onDeleteClick
                          },
                          t('ID_WEB_EDIT_UGC_DELETE')
                        )
                      ),
                      o.createElement('div', {
                        className: 'explanation'
                      }, t('ID_MPA_DELETE_DESC'))
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-edit-buttons'
                      },
                      o.createElement(
                        'button',
                        {
                          onClick: this.exitEditMode
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          onClick: this.toggleEditing
                        },
                        t('ID_WEB_COMMON_SAVE')
                      )
                    )
                  )
                }
              }),
              N = o.createClass({
                displayName: 'ReachThisReport',
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    validated: !1
                  }
                },
                componentWillMount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.exitReportMode, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.exitReportMode, !1)
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                onChange: function () {
                  this.refs.details.value.length >= 3 &&
                  this.refs.reason.selectedIndex > 0 ? this.setState({
                    validated: !0
                  }) : this.setState({
                    validated: !1
                  })
                },
                exitReportMode: function () {
                  this.props.toggle('none')
                },
                reportReachThis: function () {
                  var e = this;
                  y.reportReachThis(
                    this.refs.reason.value,
                    this.refs.details.value,
                    this.getUgcId()
                  ).then(function () {
                    return e.exitReportMode()
                  })
                },
                render: function () {
                  return o.createElement(
                    'div',
                    {
                      className: 'reach-this-report'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-report-inputs'
                      },
                      o.createElement('label', {
                        htmlFor: 'reason'
                      }, t('ID_WEB_REPORT_REASON')),
                      o.createElement(
                        'select',
                        {
                          id: 'reason',
                          ref: 'reason',
                          onChange: this.onChange
                        },
                        o.createElement('option', null, t('ID_WEB_REPORT_REASON_CHOOSE')),
                        o.createElement(
                          'option',
                          {
                            value: 'InappropriateName'
                          },
                          t('ID_WEB_REPORT_REASON_INAPPROPRIATE')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'Vulgarity'
                          },
                          t('ID_WEB_REPORT_REASON_VULGARITY')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'SexuallyExplicit'
                          },
                          t('ID_WEB_REPORT_REASON_EXPLICIT')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'SexualContent'
                          },
                          t('ID_WEB_REPORT_REASON_SEXUAL')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'OffensiveContent'
                          },
                          t('ID_WEB_REPORT_REASON_OFFENSIVE')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'Harassment'
                          },
                          t('ID_WEB_REPORT_REASON_HARASSMENT')
                        ),
                        o.createElement('option', {
                          value: 'HateSpeech'
                        }, t('ID_WEB_REPORT_REASON_HATE')),
                        o.createElement(
                          'option',
                          {
                            value: 'Language'
                          },
                          t('ID_WEB_REPORT_REASON_LANGUAGE')
                        )
                      ),
                      o.createElement('label', {
                        htmlFor: 'details'
                      }, t('ID_WEB_REPORT_DETAILS')),
                      o.createElement(
                        'textarea',
                        {
                          id: 'details',
                          ref: 'details',
                          cols: '39',
                          rows: '5',
                          onChange: this.onChange,
                          placeholder: t('ID_WEB_REPORT_DETAILS_INSTRUCTION')
                        }
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'reach-this-report-buttons'
                      },
                      o.createElement(
                        'button',
                        {
                          onClick: this.exitReportMode
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          disabled: !this.state.validated,
                          onClick: this.reportReachThis
                        },
                        t('ID_WEB_COMMON_REPORT')
                      )
                    )
                  )
                }
              });
              e.exports = C
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(19),
              o = n(20),
              s = n(54),
              c = n(62),
              l = n(74),
              u = n(325),
              p = n(11),
              d = n(15),
              f = n(4),
              m = n(45),
              h = n(17);
              n(151);
              var _ = r.createClass({
                displayName: 'RunnersRouteLeaderboardView',
                mixins: [
                  a.create(m, h, f)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                getInitialState: function () {
                  return {
                    selected: 0
                  }
                },
                componentDidMount: function () {
                  this.getLeaderboards()
                },
                componentWillUpdate: function (e, t) {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  (
                    !this.state.reportMode &&
                    t.reportMode ? document.addEventListener('backbutton', this.exitReportMode, !1) : this.state.reportMode &&
                    !t.reportMode &&
                    document.removeEventListener('backbutton', this.exitReportMode, !1)
                  )
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  var e = m.get(this.getId()),
                  t = f.getCurrentPersona(),
                  n = {
                    runnersRoute: e,
                    currentPersona: t,
                    isReportable: t &&
                    t.platform === this.getPlatform() &&
                    e &&
                    e.userStats,
                    reportMode: !1,
                    reported: {
                      player: '',
                      challenge: ''
                    }
                  };
                  return n
                },
                getLeaderboards: function () {
                  d.getRunnersRouteLeaderboard(this.getId(), null, null, this.getPlatform()),
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  (
                    d.getRunnersRouteFriendsLeaderboard(this.getId()),
                    this.fetchGeoLeaderboard()
                  )
                },
                fetchGeoLeaderboard: function (e) {
                  d.getRunnersRouteGeoLeaderboard(this.getId(), e)
                },
                changeSelected: function (e) {
                  this.setState({
                    selected: e
                  })
                },
                setReported: function (e, t) {
                  this.setState({
                    reported: {
                      player: e,
                      challenge: t.id
                    },
                    reportMode: !0
                  })
                },
                exitReportMode: function () {
                  this.setState({
                    reportMode: !1
                  })
                },
                render: function () {
                  if (!this.state.runnersRoute) return null;
                  var e = [
                    this.state.runnersRoute.meta.threshold1Star,
                    this.state.runnersRoute.meta.threshold2Star,
                    this.state.runnersRoute.meta.threshold3Star
                  ],
                  n = [
                    {
                      name: t('ID_WEB_LEADERBOARD_ALL'),
                      event: this.changeSelected
                    }
                  ];
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  n.push({
                    name: t('ID_WEB_LEADERBOARD_GEO'),
                    event: this.changeSelected
                  }, {
                    name: t('ID_WEB_LEADERBOARD_FRIENDS'),
                    event: this.changeSelected
                  });
                  var a,
                  o,
                  d;
                  switch (this.state.selected) {
                    case 0:
                      a = this.state.runnersRoute.fullLeaderboard ? this.state.runnersRoute.fullLeaderboard.leaderboard : '',
                      o = 'full';
                      break;
                    case 1:
                      '' === h.getLocation(this.state.currentPersona.personaId).name ? (d = '', a = 'NoLocation') : (
                        d = r.createElement(
                          'div',
                          null,
                          r.createElement('div', null, t('ID_WEB_LEADERBOARD_CHANGELOCATION')),
                          r.createElement(u, {
                            clicked: this.fetchGeoLeaderboard
                          })
                        ),
                        a = this.state.runnersRoute.geoLeaderboard ? this.state.runnersRoute.geoLeaderboard.leaderboard : ''
                      ),
                      o = 'geo';
                      break;
                    case 2:
                      a = this.state.runnersRoute.friendLeaderboard ? this.state.runnersRoute.friendLeaderboard.leaderboard : '',
                      o = 'friend'
                  }
                  var f;
                  if (this.state.runnersRoute.fullLeaderboard) {
                    var m = {
                      leader: a &&
                      a.users &&
                      a.users.length ? a.users[0] : null,
                      leaderboard: a,
                      leaderboardType: o,
                      fullLeaderboardSize: null !== this.state.runnersRoute.fullLeaderboard ? this.state.runnersRoute.fullLeaderboard.leaderboard.totalCount : 0,
                      challengeType: 'runnersRoute',
                      starThresholds: e,
                      platform: this.getPlatform()
                    };
                    '' !== m.leaderboard &&
                    (
                      f = r.createElement(
                        c,
                        {
                          info: m,
                          reporting: {
                            value: this.state.reportMode,
                            func: this.setReported
                          }
                        }
                      )
                    )
                  }
                  var _,
                  E;
                  if (this.state.isReportable) if (this.state.reportMode === !1) _ = r.createElement(
                    'button',
                    {
                      type: 'button',
                      key: 'report',
                      className: 'editButton',
                      onClick: function () {
                        this.setState({
                          reportMode: 'temp'
                        })
                      }.bind(this)
                    },
                    r.createElement('i', {
                      className: i('fa', 'fa-exclamation-triangle')
                    }),
                    '  ',
                    t('ID_WEB_COMMON_REPORT')
                  );
                   else {
                    var I = this;
                    this.state.reportMode === !0 ? (
                      f = r.createElement(
                        g,
                        {
                          info: this.state.reported,
                          exit: function () {
                            I.setState({
                              reportMode: !1
                            })
                          }
                        }
                      ),
                      E = r.createElement('div', null, ' ')
                    ) : (
                      _ = r.createElement(
                        'button',
                        {
                          type: 'button',
                          key: 'report',
                          className: 'editButton',
                          onClick: function () {
                            this.setState({
                              reportMode: !1
                            })
                          }.bind(this)
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      E = r.createElement('div', null, t('ID_WEB_REPORT_INSTRUCTION'))
                    )
                  }
                  return r.createElement(
                    p,
                    {
                      title: t('ID_WEB_TITLE_LEADERBOARD'),
                      className: 'panel-challenge-leaderboard'
                    },
                    r.createElement(v, {
                      meta: this.state.runnersRoute.meta
                    }),
                    this.state.isReportable ? r.createElement('div', {
                      className: 'report'
                    }, _, ' ', E) : null,
                    r.createElement(l, {
                      buttons: n,
                      selected: this.state.selected
                    }),
                    d ? r.createElement('div', {
                      className: 'leaderboard-meta'
                    }, d) : null,
                    r.createElement(
                      'div',
                      {
                        className: 1 === this.state.selected ? 'leaderboard geo' : 'leaderboard'
                      },
                      r.createElement(s, {
                        minHeight: 300
                      }, f)
                    )
                  )
                }
              }),
              g = r.createClass({
                displayName: 'ReportRunnersRouteLeaderboard',
                mixins: [
                  a.create(h)
                ],
                componentDidMount: function () {
                  h.addChangeListener(this.getStateFromStore),
                  null === this.state.player.name &&
                  d.getPlayerInfo(this.props.info.player)
                },
                getInitialState: function () {
                  return {
                    validated: !1
                  }
                },
                getStateFromStore: function () {
                  return {
                    player: h.getAccountDetails(this.props.info.player)
                  }
                },
                onChange: function () {
                  this.refs.reason.value.length >= 3 ? this.setState({
                    validated: !0
                  }) : this.setState({
                    validated: !1
                  })
                },
                reportRunnersRouteTime: function () {
                  var e = this;
                  d.reportCheatRunnersRoute(
                    this.props.info.challenge,
                    this.refs.reason.value,
                    this.props.info.player
                  ).then(function () {
                    return e.props.exit()
                  })
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'leaderboard-report'
                    },
                    r.createElement('label', {
                      htmlFor: 'player'
                    }, t('ID_WEB_REPORT_PLAYER')),
                    r.createElement(
                      'div',
                      {
                        id: 'player'
                      },
                      h.getAccountDetails(this.props.info.player).name
                    ),
                    r.createElement(
                      'label',
                      {
                        htmlFor: 'challenge'
                      },
                      t('ID_WEB_REPORT_RUNNERSROUTE')
                    ),
                    r.createElement(
                      'div',
                      {
                        id: 'challenge'
                      },
                      t(m.getName(this.props.info.challenge))
                    ),
                    r.createElement('label', {
                      htmlFor: 'reason'
                    }, t('ID_WEB_REPORT_DETAILS')),
                    r.createElement(
                      'textarea',
                      {
                        id: 'reason',
                        ref: 'reason',
                        cols: '39',
                        rows: '5',
                        onChange: this.onChange,
                        placeholder: t('ID_WEB_REPORT_DETAILS_INSTRUCTION')
                      }
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'leaderboard-report-buttons'
                      },
                      r.createElement('button', {
                        onClick: this.props.exit
                      }, t('ID_WEB_COMMON_CANCEL')),
                      r.createElement(
                        'button',
                        {
                          disabled: !this.state.validated,
                          onClick: this.reportRunnersRouteTime
                        },
                        t('ID_WEB_COMMON_REPORT')
                      )
                    )
                  )
                }
              }),
              v = r.createClass({
                displayName: 'RunnersRouteHeader',
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'runners-route-head'
                    },
                    r.createElement('div', {
                      className: 'header-left'
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'runners-route-info'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-creation'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'runners-route-creator'
                          },
                          r.createElement(
                            o,
                            {
                              to: 'RunnersRoute',
                              params: {
                                id: this.props.meta.id
                              },
                              stack: !0
                            },
                            t(this.props.meta.displayName)
                          )
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-name'
                        },
                        t('ID_WEB_TITLE_LEADERBOARD')
                      )
                    )
                  )
                }
              });
              e.exports = _
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(19),
              o = n(92),
              s = n(62),
              c = n(11),
              l = n(32),
              u = n(15),
              p = n(31),
              d = n(4),
              f = n(45),
              m = n(53),
              h = n(17);
              n(808);
              var _ = r.createClass({
                displayName: 'RunnersRouteView',
                mixins: [
                  a.create(f, m, h, d)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  this.getDash()
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    runnersRoute: f.get(this.getId()),
                    isBookmarked: m.getIsChallengeBookmarked(this.getId(), 'RunnersRoute'),
                    currentPersona: d.getCurrentPersona()
                  }
                },
                getDash: function () {
                  u.getRunnersRouteData(
                    [this.getId()],
                    [
                      'STATS',
                      'USER_STATS',
                      'EMBLEM_URL'
                    ],
                    null,
                    this.getPlatform()
                  ),
                  this.state.currentPersona ? u.getOverviewRunnersRouteLeaderboard(this.getId(), null, this.getPlatform()) : u.getRunnersRouteLeaderboard(this.getId(), 0, 6, this.getPlatform())
                },
                toggleLeaderboard: function () {
                  p.navigateStacked(
                    this.context.depth + 1,
                    'RunnersRoute-leaderboard',
                    {
                      platform: this.getPlatform(),
                      id: this.getId()
                    }
                  )
                },
                bookmark: function (e) {
                  var n = this;
                  e.preventDefault(),
                  this.state.isBookmarked ? u.removeChallengeBookmark('RunnersRoute', this.state.runnersRoute.meta.id) : u.addChallengeBookmark('RunnersRoute', this.state.runnersRoute.meta.id).then(
                    function () {
                      l.bookmark(
                        'RunnersRoute',
                        n.state.runnersRoute.meta.displayName,
                        n.state.runnersRoute.meta.id
                      ),
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_RUNNERSROUTE_BOOKMARK_SUCCESS'),
                        BookmarkMessage: t('ID_WEB_RUNNERSROUTE_BOOKMARK_INFO_SUCCESS')
                      })
                    },
                    function () {
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_RUNNERSROUTE_BOOKMARK_FAILURE'),
                        BookmarkMessage: t('ID_WEB_RUNNERSROUTE_BOOKMARK_INFO_FAILURE')
                      })
                    }
                  )
                },
                showBookmarkedNotification: function () {
                  this.refs.bookmarkTooltip.show()
                },
                render: function () {
                  if (!this.state.runnersRoute) return r.createElement(c, null);
                  var e,
                  a = [
                    this.state.runnersRoute.meta.threshold1Star,
                    this.state.runnersRoute.meta.threshold2Star,
                    this.state.runnersRoute.meta.threshold3Star
                  ];
                  if (this.state.runnersRoute.overviewLeaderboard) {
                    var l = {
                      leader: this.state.runnersRoute.overviewLeaderboard.globalLeader,
                      leaderboardType: 'overview',
                      leaderboard: this.state.runnersRoute.overviewLeaderboard.leaderboard,
                      challengeType: 'runnersRoute',
                      starThresholds: a,
                      platform: this.getPlatform()
                    };
                    e = r.createElement(s, {
                      info: l
                    })
                  } else if (this.state.runnersRoute.fullLeaderboard) {
                    var u = {
                      leader: this.state.runnersRoute.fullLeaderboard.leaderboard.users.length > 0 ? this.state.runnersRoute.fullLeaderboard.leaderboard.users[0] : null,
                      leaderboardType: 'overview',
                      leaderboard: this.state.runnersRoute.fullLeaderboard.leaderboard,
                      challengeType: 'runnersRoute',
                      starThresholds: a,
                      limit: 6,
                      platform: this.getPlatform()
                    };
                    e = r.createElement(s, {
                      info: u
                    })
                  }
                  var p,
                  d,
                  f;
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() ? (
                    p = r.createElement(
                      'button',
                      {
                        type: 'button',
                        ref: 'button',
                        className: 'bookmarkButton',
                        onClick: this.bookmark
                      },
                      r.createElement(
                        'i',
                        {
                          className: i('fa', this.state.isBookmarked ? 'fa-bookmark' : 'fa-bookmark-o')
                        }
                      ),
                      '  ',
                      t(
                        this.state.isBookmarked ? 'ID_WEB_BOOKMARK_REMOVE' : 'ID_WEB_BOOKMARK_ADD'
                      )
                    ),
                    d = r.createElement(
                      o,
                      {
                        title: this.state.BookmarkTitle,
                        description: this.state.BookmarkMessage,
                        ref: 'bookmarkTooltip'
                      }
                    )
                  ) : f = r.createElement(
                    'i',
                    {
                      className: 'platform-icon platform-icon-' + this.getPlatform()
                    }
                  );
                  var m = n(271);
                  return r.createElement(
                    c,
                    {
                      title: t('ID_WEB_TITLE_RUNNERSROUTE')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'runners-route'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'runners-route-info'
                          },
                          r.createElement(
                            'div',
                            {
                              className: 'runners-route-type'
                            },
                            t('ID_WEB_TITLE_RUNNERSROUTE')
                          ),
                          r.createElement(
                            'div',
                            {
                              className: 'runners-route-name'
                            },
                            t(this.state.runnersRoute.meta.displayName)
                          )
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-image',
                          style: {
                            backgroundImage: 'url(' + m + ')'
                          }
                        }
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-actions'
                        },
                        r.createElement('div', {
                          className: 'actions-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'actions-right'
                          },
                          r.createElement('div', {
                            className: 'runners-route-actions-buttons'
                          }, p, d, f)
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'runners-route-leaderboard'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'runners-route-lb-header'
                          },
                          t('ID_WEB_COMMON_LEADERBOARD'),
                          r.createElement(
                            'button',
                            {
                              onClick: this.toggleLeaderboard
                            },
                            t('ID_WEB_COMMON_SHOWALL'),
                            ' >'
                          )
                        ),
                        e
                      )
                    )
                  )
                }
              });
              e.exports = _
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(809);
              var i = r.createClass({
                displayName: 'SafeHouseView',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                render: function () {
                  return r.createElement(
                    a,
                    {
                      title: t('ID_WEB_MAP_SAFEHOUSE')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'safehouse'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'safehouse-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'safehouse-info'
                          },
                          r.createElement('div', {
                            className: 'safehouse-name'
                          }, t('ID_WEB_MAP_SAFEHOUSE'))
                        )
                      ),
                      r.createElement('div', {
                        className: 'safehouse-image'
                      }),
                      r.createElement(
                        'div',
                        {
                          className: 'safehouse-info'
                        },
                        t('ID_MAP_SAFE_HOUSE_DESCRIPTION').split('\n').map(
                          function (e, t) {
                            return r.createElement('span', {
                              key: t
                            }, e, r.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(11);
              n(810);
              var i = r.createClass({
                displayName: 'SecurityHubView',
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                render: function () {
                  return r.createElement(
                    a,
                    {
                      title: t('ID_WEB_MAP_SECURITYHUB')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'security-hub'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'security-hub-head'
                        },
                        r.createElement('div', {
                          className: 'header-left'
                        }),
                        r.createElement(
                          'div',
                          {
                            className: 'security-hub-info'
                          },
                          r.createElement(
                            'div',
                            {
                              className: 'security-hub-name'
                            },
                            t('ID_WEB_MAP_SECURITYHUB')
                          )
                        )
                      ),
                      r.createElement('div', {
                        className: 'security-hub-image'
                      }),
                      r.createElement(
                        'div',
                        {
                          className: 'security-hub-info'
                        },
                        t('ID_MAP_SECHUB_DESCRIPTION').split('\n').map(
                          function (e, t) {
                            return r.createElement('span', {
                              key: t
                            }, e, r.createElement('br', null))
                          }
                        )
                      )
                    )
                  )
                }
              });
              e.exports = i
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(19),
              o = n(20),
              s = n(54),
              c = n(62),
              l = n(74),
              u = n(11),
              p = n(15),
              d = n(4),
              f = n(38),
              m = n(17);
              n(151);
              var h = r.createClass({
                displayName: 'TimeTrialLeaderboardView',
                mixins: [
                  a.create(f, d)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                componentDidMount: function () {
                  this.fetchLeaderboards()
                },
                componentWillUpdate: function (e, t) {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  (
                    !this.state.reportMode &&
                    t.reportMode ? document.addEventListener('backbutton', this.exitReportMode, !1) : this.state.reportMode &&
                    !t.reportMode &&
                    document.removeEventListener('backbutton', this.exitReportMode, !1)
                  )
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  var e = f.get(this.getUgcId()),
                  t = d.getCurrentPersona(),
                  n = {
                    timeTrial: e,
                    currentPersona: t,
                    isReportable: t &&
                    e &&
                    e.userStats,
                    selected: 0,
                    reportMode: !1,
                    reported: {
                      player: '',
                      challenge: ''
                    }
                  };
                  return n
                },
                fetchLeaderboards: function () {
                  p.getTimeTrialLeaderboard(this.getUgcId(), null, null, this.getPlatform()),
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  p.getTimeTrialFriendsLeaderboard(this.getUgcId())
                },
                changeSelected: function (e) {
                  this.setState({
                    selected: parseInt(e, 10)
                  })
                },
                setReported: function (e, t) {
                  this.setState({
                    reported: {
                      player: e,
                      challenge: t
                    },
                    reportMode: !0
                  })
                },
                exitReportMode: function () {
                  this.setState({
                    reportMode: !1
                  })
                },
                render: function () {
                  if (!this.state.timeTrial) return r.createElement(u, null);
                  var e = [
                    {
                      name: t('ID_WEB_LEADERBOARD_ALL'),
                      event: this.changeSelected
                    }
                  ];
                  this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() &&
                  e.push({
                    name: t('ID_WEB_LEADERBOARD_FRIENDS'),
                    event: this.changeSelected
                  });
                  var n,
                  a,
                  o;
                  switch (this.state.selected) {
                    case 0:
                      n = this.state.timeTrial.fullLeaderboard,
                      a = 'full';
                      break;
                    case 1:
                      n = this.state.timeTrial.friendLeaderboard,
                      a = 'friend'
                  }
                  var p,
                  d = '';
                  if (this.state.timeTrial.fullLeaderboard) {
                    var f = {
                      leader: n &&
                      n.leaderboard &&
                      n.leaderboard.users &&
                      n.leaderboard.users.length ? n.leaderboard.users[0] : null,
                      leaderboard: null === n ? '' : n.leaderboard,
                      challengeType: 'timeTrial',
                      leaderboardType: a,
                      fullLeaderboardSize: null !== this.state.timeTrial.fullLeaderboard ? this.state.timeTrial.fullLeaderboard.leaderboard.totalCount : 0,
                      platform: this.getPlatform()
                    };
                    '' !== f.leaderboard &&
                    (
                      o = r.createElement(
                        c,
                        {
                          info: f,
                          reporting: {
                            value: this.state.reportMode,
                            func: this.setReported
                          }
                        }
                      )
                    )
                  }
                  if (this.state.isReportable) if (this.state.reportMode === !1) p = r.createElement(
                    'button',
                    {
                      type: 'button',
                      key: 'report',
                      className: 'editButton',
                      onClick: function () {
                        this.setState({
                          reportMode: 'temp'
                        })
                      }.bind(this)
                    },
                    r.createElement('i', {
                      className: i('fa', 'fa-exclamation-triangle')
                    }),
                    '  ',
                    t('ID_WEB_COMMON_REPORT')
                  );
                   else {
                    var m = this;
                    this.state.reportMode === !0 ? (
                      o = r.createElement(
                        _,
                        {
                          info: this.state.reported,
                          exit: function () {
                            m.setState({
                              reportMode: !1
                            })
                          }
                        }
                      ),
                      d = r.createElement('div', null, ' ')
                    ) : (
                      p = r.createElement(
                        'button',
                        {
                          type: 'button',
                          key: 'report',
                          className: 'editButton',
                          onClick: function () {
                            this.setState({
                              reportMode: !1
                            })
                          }.bind(this)
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      d = r.createElement('div', null, t('ID_WEB_REPORT_INSTRUCTION'))
                    )
                  }
                  return r.createElement(
                    u,
                    {
                      title: t('ID_WEB_TITLE_LEADERBOARD'),
                      className: 'panel-challenge-leaderboard'
                    },
                    r.createElement(
                      g,
                      {
                        meta: this.state.timeTrial.meta,
                        platform: this.getPlatform()
                      }
                    ),
                    this.state.isReportable ? r.createElement('div', {
                      className: 'report'
                    }, p, ' ', d) : null,
                    r.createElement(l, {
                      buttons: e,
                      selected: this.state.selected
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'leaderboard'
                      },
                      r.createElement(s, {
                        minHeight: 300
                      }, o)
                    )
                  )
                }
              }),
              _ = r.createClass({
                displayName: 'ReportTimeTrialLeaderboard',
                mixins: [
                  a.create(m)
                ],
                componentDidMount: function () {
                  m.addChangeListener(this.getStateFromStore),
                  null === this.state.player.name &&
                  p.getPlayerInfo(this.props.info.player)
                },
                getInitialState: function () {
                  return {
                    validated: !1
                  }
                },
                componentWillUnmount: function () {
                  m.removeChangeListener(this.getStateFromStore)
                },
                getStateFromStore: function () {
                  return {
                    player: m.getAccountDetails(this.props.info.player)
                  }
                },
                onChange: function () {
                  this.refs.reason.value.length >= 3 ? this.setState({
                    validated: !0
                  }) : this.setState({
                    validated: !1
                  })
                },
                reportTimeTrialTime: function () {
                  var e = this;
                  p.reportCheatTimeTrial(
                    this.refs.reason.value,
                    this.props.info.player,
                    this.props.info.challenge
                  ).then(function () {
                    return e.props.exit()
                  })
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'leaderboard-report'
                    },
                    r.createElement('label', {
                      htmlFor: 'player'
                    }, t('ID_WEB_REPORT_PLAYER')),
                    r.createElement(
                      'div',
                      {
                        id: 'player'
                      },
                      m.getAccountDetails(this.props.info.player).name
                    ),
                    r.createElement('label', {
                      htmlFor: 'challenge'
                    }, t('ID_WEB_REPORT_TIMETRIAL')),
                    r.createElement(
                      'div',
                      {
                        id: 'challenge'
                      },
                      t(f.getName(this.props.info.challenge))
                    ),
                    r.createElement('label', {
                      htmlFor: 'reason'
                    }, t('ID_WEB_REPORT_DETAILS')),
                    r.createElement(
                      'textarea',
                      {
                        id: 'reason',
                        ref: 'reason',
                        cols: '39',
                        rows: '5',
                        onChange: this.onChange,
                        placeholder: t('ID_WEB_REPORT_DETAILS_INSTRUCTION')
                      }
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'leaderboard-report-buttons'
                      },
                      r.createElement('button', {
                        onClick: this.props.exit
                      }, t('ID_WEB_COMMON_CANCEL')),
                      r.createElement(
                        'button',
                        {
                          disabled: !this.state.validated,
                          onClick: this.reportTimeTrialTime
                        },
                        t('ID_WEB_COMMON_REPORT')
                      )
                    )
                  )
                }
              }),
              g = r.createClass({
                displayName: 'TimeTrialHeader',
                propTypes: {
                  meta: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'time-trial-head'
                    },
                    r.createElement('div', {
                      className: 'header-left'
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'time-trial-info'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'time-trial-creation'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'time-trial-creator'
                          },
                          r.createElement(
                            o,
                            {
                              to: 'TimeTrial',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.id,
                                userId: this.props.meta.ugcId.userId
                              },
                              stack: !0
                            },
                            this.props.meta.name
                          ),
                          ' ',
                          t('ID_WEB_CHALLENGE_BY').toLowerCase(),
                          ' ',
                          r.createElement(
                            o,
                            {
                              to: 'profile',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.userId
                              },
                              className: 'TimeTrial-creator',
                              stack: !0
                            },
                            this.props.meta.creatorName
                          )
                        )
                      ),
                      r.createElement(
                        'div',
                        {
                          className: 'time-trial-name'
                        },
                        t('ID_WEB_TITLE_LEADERBOARD')
                      )
                    )
                  )
                }
              });
              e.exports = h
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(55),
              i = r(a),
              o = n(2),
              s = n(8),
              c = n(19),
              l = n(26),
              u = n(20),
              p = n(92),
              d = n(62),
              f = n(75),
              m = n(37),
              h = n(11),
              _ = n(4),
              g = n(44),
              v = n(38),
              E = n(53),
              I = n(17),
              b = n(31),
              y = n(15),
              T = n(73),
              S = n(32);
              n(811);
              var C = o.createClass({
                displayName: 'TimeTrialView',
                mixins: [
                  s.create(v, _)
                ],
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    editor: 'none'
                  }
                },
                componentDidMount: function () {
                  this.fetchTimeTrial()
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    timeTrial: v.get(this.getUgcId()),
                    currentPersona: _.getCurrentPersona()
                  }
                },
                fetchTimeTrial: function () {
                  var e = this;
                  y.getTimeTrialData(
                    [this.getUgcId()],
                    [
                      'STATS',
                      'META',
                      'USER_STATS'
                    ],
                    null,
                    this.getPlatform()
                  ).then(
                    function (t) {
                      t &&
                      t.length &&
                      t[0].meta &&
                      t[0].meta.ugcUrl &&
                      y.getTimeTrialCheckpoints(e.getUgcId(), t[0].meta.ugcUrl)
                    }
                  ),
                  this.state.currentPersona ? y.getOverviewTimeTrialLeaderboard(this.getUgcId(), null, this.getPlatform()) : y.getTimeTrialLeaderboard(this.getUgcId(), 0, 6, this.getPlatform())
                },
                toggleEditor: function (e) {
                  this.setState({
                    editor: e
                  })
                },
                render: function () {
                  if (!this.state.timeTrial) return o.createElement(h, null);
                  var e,
                  n = o.createElement(
                    D,
                    {
                      meta: this.state.timeTrial.meta,
                      platform: this.getPlatform()
                    }
                  );
                  return e = 'challenge' === this.state.editor ? o.createElement(O, {
                    timeTrial: this.state.timeTrial,
                    toggle: this.toggleEditor
                  }) : 'report' === this.state.editor ? o.createElement(N, {
                    toggle: this.toggleEditor
                  }) : o.createElement(A, {
                    timeTrial: this.state.timeTrial,
                    toggle: this.toggleEditor
                  }),
                  o.createElement(
                    h,
                    {
                      title: t('ID_WEB_TITLE_TIMETRIAL')
                    },
                    o.createElement('div', {
                      className: 'time-trial'
                    }, n, e)
                  )
                }
              }),
              D = o.createClass({
                displayName: 'TimeTrialHeader',
                propTypes: {
                  meta: o.PropTypes.object,
                  platform: o.PropTypes.string
                },
                render: function () {
                  return o.createElement(
                    'div',
                    {
                      className: 'time-trial-head'
                    },
                    o.createElement('div', {
                      className: 'header-left'
                    }),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-info'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'time-trial-type'
                        },
                        t('ID_WEB_TITLE_TIMETRIAL')
                      ),
                      o.createElement(
                        'div',
                        {
                          className: 'time-trial-creation'
                        },
                        o.createElement(
                          'div',
                          {
                            className: 'time-trial-creator-container'
                          },
                          t('ID_WEB_CHALLENGE_BY'),
                          ' ',
                          this.props.meta.creatorName &&
                          'unknown' !== this.props.meta.creatorName ? o.createElement(
                            u,
                            {
                              to: 'profile',
                              params: {
                                platform: this.props.platform,
                                id: this.props.meta.ugcId.userId
                              },
                              className: 'time-trial-creator',
                              stack: !0
                            },
                            this.props.meta.creatorName
                          ) : t('ID_SGM_UNKNOWN'),
                          ', ',
                          m.friendlyTimeStamp(this.props.meta.createdAt)
                        )
                      ),
                      o.createElement('div', {
                        className: 'time-trial-name'
                      }, this.props.meta.name)
                    )
                  )
                }
              }),
              A = o.createClass({
                displayName: 'TimeTrialInfo',
                mixins: [
                  s.create(v, E, I, _)
                ],
                propTypes: {
                  timeTrial: o.PropTypes.object,
                  toggle: o.PropTypes.func
                },
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    isBookmarked: E.getIsUgcBookmarked(this.getUgcId(), 'TimeTrial'),
                    playerEmblem: I.getPlayerEmblem(this.getUgcId().userId),
                    currentPersona: _.getCurrentPersona()
                  }
                },
                onEditTimeTrialButtonClick: function () {
                  this.props.toggle('challenge')
                },
                onReportTimeTrialButtonClick: function () {
                  this.props.toggle('report')
                },
                onShareClick: function () {
                  var e = this;
                  _.getHasAcceptedSharing() ? this.share() : window.cordova &&
                  navigator.notification &&
                  navigator.notification.alert(
                    t('ID_WEB_LEGAL_SHARING'),
                    function () {
                      T.acceptSharing(),
                      e.share()
                    },
                    '',
                    t('ID_WEB_COMMON_OK')
                  )
                },
                share: function () {
                  if (window.cordova && window.plugins && window.plugins.socialsharing) {
                    var e = this.props.timeTrial.meta.name,
                    t = this.props.timeTrial.meta.ugcId,
                    n = l.sharing.shareUrl + '/timetrial/' + this.getPlatform() + '/' + t.userId + '/' + t.id;
                    window.plugins.socialsharing.share(e, null, null, n)
                  }
                },
                toggleLeaderboard: function () {
                  b.navigateStacked(
                    this.context.depth + 1,
                    'TimeTrial-leaderboard',
                    {
                      platform: this.getPlatform(),
                      userId: this.getUgcId().userId,
                      id: this.getUgcId().id
                    }
                  )
                },
                bookmark: function (e) {
                  var n = this;
                  e.preventDefault(),
                  this.state.isBookmarked ? y.removeUGCBookmark('TimeTrial', this.props.timeTrial.meta.ugcId) : y.addUGCBookmark('TimeTrial', this.props.timeTrial.meta.ugcId).then(
                    function () {
                      S.bookmark(
                        'TimeTrial',
                        n.props.timeTrial.meta.name,
                        n.props.timeTrial.meta.ugcId.id
                      ),
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_TIMETRIAL_BOOKMARK_SUCCESS'),
                        BookmarkMessage: t('ID_WEB_TIMETRIAL_BOOKMARK_INFO_SUCCESS')
                      })
                    },
                    function () {
                      n.showBookmarkedNotification(),
                      n.setState({
                        BookmarkTitle: t('ID_WEB_TIMETRIAL_BOOKMARK_FAILURE'),
                        BookmarkMessage: t('ID_WEB_TIMETRIAL_BOOKMARK_INFO_FAILURE')
                      })
                    }
                  )
                },
                showBookmarkedNotification: function () {
                  this.refs.bookmarkTooltip.show()
                },
                render: function () {
                  var e,
                  r = this;
                  this.state.playerEmblem &&
                  (
                    e = o.createElement(
                      f,
                      {
                        emblem: {
                          bg: {
                            source: this.state.playerEmblem.bg,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          detail: {
                            source: this.state.playerEmblem.detail,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          frame: {
                            source: this.state.playerEmblem.frame,
                            size: {
                              height: 100,
                              width: 100
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          }
                        }
                      }
                    )
                  );
                  var a;
                  if (this.props.timeTrial.overviewLeaderboard) {
                    var i = {
                      leader: this.props.timeTrial.overviewLeaderboard.globalLeader,
                      leaderboardType: 'overview',
                      leaderboard: this.props.timeTrial.overviewLeaderboard.leaderboard,
                      challengeType: 'timeTrial',
                      platform: this.getPlatform()
                    };
                    a = o.createElement(d, {
                      info: i
                    })
                  } else if (this.props.timeTrial.fullLeaderboard) {
                    var s = {
                      leader: this.props.timeTrial.fullLeaderboard.leaderboard.users.length > 0 ? this.props.timeTrial.fullLeaderboard.leaderboard.users[0] : null,
                      leaderboardType: 'overview',
                      leaderboard: this.props.timeTrial.fullLeaderboard.leaderboard,
                      challengeType: 'timeTrial',
                      limit: 6,
                      platform: this.getPlatform()
                    };
                    a = o.createElement(d, {
                      info: s
                    })
                  }
                  var u;
                  l.sharing.enabled &&
                  window.cordova &&
                  window.plugins &&
                  window.plugins.socialsharing &&
                  (
                    u = o.createElement(
                      'button',
                      {
                        className: 'shareButton',
                        onClick: r.onShareClick
                      },
                      o.createElement('i', {
                        className: c('fa', 'fa-share-alt')
                      }),
                      '  ',
                      t('ID_WEB_CHALLENGE_SHARE')
                    )
                  );
                  var m;
                  m = t(
                    this.props.timeTrial.meta.published === !0 ? 'ID_MPA_PUBLISHED_CHALLENGE' : 'ID_MPA_UNLISTED_CHALLENGE'
                  );
                  var h,
                  _,
                  g,
                  v,
                  E;
                  this.state.currentPersona &&
                  this.state.currentPersona.personaId === this.getUgcId().userId ? h = o.createElement(
                    'button',
                    {
                      type: 'button',
                      className: 'editButton',
                      onClick: r.onEditTimeTrialButtonClick
                    },
                    o.createElement('i', {
                      className: c('fa', 'fa-cog')
                    }),
                    '  ',
                    t('ID_WEB_EDIT_UGC_EDIT_CHALLENGE')
                  ) : this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() ? (
                    _ = o.createElement(
                      'button',
                      {
                        type: 'button',
                        ref: 'button',
                        key: 'bookmark',
                        className: 'bookmarkButton',
                        onClick: this.bookmark
                      },
                      o.createElement(
                        'i',
                        {
                          className: c('fa', this.state.isBookmarked ? 'fa-bookmark' : 'fa-bookmark-o')
                        }
                      ),
                      '  ',
                      t(
                        this.state.isBookmarked ? 'ID_WEB_BOOKMARK_REMOVE' : 'ID_WEB_BOOKMARK_ADD'
                      )
                    ),
                    g = o.createElement(
                      p,
                      {
                        title: this.state.BookmarkTitle,
                        description: this.state.BookmarkMessage,
                        ref: 'bookmarkTooltip'
                      }
                    ),
                    v = o.createElement(
                      'button',
                      {
                        type: 'button',
                        key: 'report',
                        className: 'editButton',
                        onClick: r.onReportTimeTrialButtonClick
                      },
                      o.createElement('i', {
                        className: c('fa', 'fa-exclamation-triangle')
                      }),
                      '  ',
                      t('ID_WEB_COMMON_REPORT')
                    )
                  ) : E = o.createElement(
                    'i',
                    {
                      className: 'platform-icon platform-icon-' + this.getPlatform()
                    }
                  );
                  var I = n(271);
                  return o.createElement(
                    'div',
                    {
                      className: 'time-trial-body'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-image',
                        style: {
                          backgroundImage: 'url(' + I + ')'
                        }
                      },
                      e
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-actions'
                      },
                      o.createElement('div', {
                        className: 'actions-left'
                      }),
                      o.createElement(
                        'div',
                        {
                          className: 'actions-right'
                        },
                        o.createElement('div', {
                          className: 'time-trial-actions-published-status'
                        }, m),
                        o.createElement('div', {
                          className: 'time-trial-actions-buttons'
                        }, u, _, g, v, h, E)
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-leaderboard'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'time-trial-lb-header'
                        },
                        t('ID_WEB_COMMON_LEADERBOARD'),
                        o.createElement(
                          'button',
                          {
                            onClick: this.toggleLeaderboard
                          },
                          t('ID_WEB_COMMON_SHOWALL'),
                          ' >'
                        )
                      ),
                      a
                    )
                  )
                }
              }),
              O = o.createClass({
                displayName: 'TimeTrialEditor',
                mixins: [
                  s.create(g, v)
                ],
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    displayName: this.props.timeTrial.meta.name
                  }
                },
                componentWillMount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.exitEditMode, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.exitEditMode, !1)
                },
                getStateFromStore: function () {
                  return {
                    ugc: {
                      timeTrials: v.getPublishedByCreator(this.getCreatorId()),
                      reachThises: g.getPublishedByCreator(this.getCreatorId())
                    }
                  }
                },
                getCreatorId: function () {
                  return this.context.router.getCurrentParams().userId
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                onDeleteClick: function () {
                  var e = this;
                  navigator.notification ? navigator.notification.confirm(
                    t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_CONFIRMATION'),
                    function (t) {
                      1 === t &&
                      e.deleteUgc()
                    },
                    t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_QUESTION'),
                    [
                      t('ID_WEB_EDIT_UGC_DELETE'),
                      t('ID_WEB_COMMON_CANCEL')
                    ]
                  ) : confirm(t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_CONFIRMATION')) &&
                  this.deleteUgc()
                },
                exitEditMode: function () {
                  this.props.toggle('none')
                },
                toggleEditing: function () {
                  var e = this,
                  n = this.state.displayName,
                  r = function () {
                    return new i['default'](
                      function (t, r) {
                        n !== e.props.timeTrial.meta.name ? (
                          y.setUgcName('TimeTrial', e.getUgcId(), n).then(t, r),
                          S.settingChange(
                            'TimeTrial',
                            e.props.timeTrial.meta.name,
                            n,
                            e.props.timeTrial.meta.ugcId.id
                          )
                        ) : t()
                      }
                    )
                  },
                  a = this.refs.published.checked,
                  o = function () {
                    return new i['default'](
                      function (t, n) {
                        a !== e.props.timeTrial.meta.published ? (
                          y.setUgcPublishedFlag('TimeTrial', e.getUgcId(), a).then(t, n),
                          S.settingChange(
                            'TimeTrial',
                            e.props.timeTrial.meta.published ? 'published' : 'unpublished',
                            a ? 'published' : 'unpublished',
                            e.props.timeTrial.meta.ugcId.id
                          )
                        ) : t()
                      }
                    )
                  };
                  if (this.refs.name.value.length <= 22) {
                    var s = this;
                    r().then(
                      function () {
                        o(),
                        s.exitEditMode()
                      },
                      function (e) {
                        s.refs.nametext.style.display = 'block',
                        300 === e.code ? s.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_CONTAINS_PROFANITY') : 302 === e.code &&
                        (
                          s.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_INVALID_NAME')
                        )
                      }
                    )
                  } else this.refs.nametext.style.display = 'block',
                  this.refs.nametext.innerHTML = t('ID_WEB_EDIT_UGC_NAME_TOO_LONG')
                },
                editName: function (e) {
                  this.setState({
                    displayName: e.target.value
                  })
                },
                deleteUgc: function () {
                  y.deleteUGC('TimeTrial', this.getUgcId()).then(function () {
                    return b.closeCurrentPanel()
                  })
                },
                render: function () {
                  var e = [].concat(this.state.ugc.reachThises || [], this.state.ugc.timeTrials || []);
                  return o.createElement(
                    'div',
                    {
                      className: 'time-trial-edit'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-edit-name'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement('label', {
                          htmlFor: 'name'
                        }, t('ID_WEB_COMMON_NAME')),
                        o.createElement(
                          'input',
                          {
                            type: 'text',
                            id: 'name',
                            ref: 'name',
                            maxLength: '22',
                            value: this.state.displayName,
                            onChange: this.editName
                          }
                        )
                      ),
                      o.createElement('div', {
                        className: 'name-text explanation',
                        ref: 'nametext'
                      })
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-edit-publish'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement('label', {
                          htmlFor: 'checkbox'
                        }, t('ID_WEB_COMMON_PUBLISHED')),
                        o.createElement(
                          'input',
                          {
                            type: 'checkbox',
                            id: 'checkbox',
                            ref: 'published',
                            defaultChecked: this.props.timeTrial.meta.published,
                            disabled: e.length >= 10 &&
                            !this.props.timeTrial.meta.published ? 'disabled' : ''
                          }
                        )
                      ),
                      o.createElement(
                        'div',
                        {
                          className: 'explanation'
                        },
                        t('ID_MPA_PUBLISH_DESC'),
                        o.createElement('br', null),
                        o.createElement('br', null),
                        t('ID_WEB_EDIT_UGC_PUBLISHED').replace('[PUBLISHED]', e.length),
                        o.createElement('br', null),
                        e.length >= 10 &&
                        !this.props.timeTrial.meta.published ? t('ID_WEB_EDIT_UGC_UNPUBLISH_FOR_MORE_ROOM') : ''
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-edit-delete'
                      },
                      o.createElement(
                        'div',
                        {
                          className: 'input-row'
                        },
                        o.createElement(
                          'label',
                          {
                            htmlFor: 'delete'
                          },
                          t('ID_WEB_EDIT_UGC_DELETE_CHALLENGE_QUESTION')
                        ),
                        o.createElement(
                          'button',
                          {
                            id: 'delete',
                            onClick: this.onDeleteClick
                          },
                          t('ID_WEB_EDIT_UGC_DELETE')
                        )
                      ),
                      o.createElement('div', {
                        className: 'explanation'
                      }, t('ID_MPA_DELETE_DESC'))
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-edit-buttons'
                      },
                      o.createElement(
                        'button',
                        {
                          onClick: this.exitEditMode
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          onClick: this.toggleEditing
                        },
                        t('ID_WEB_COMMON_SAVE')
                      )
                    )
                  )
                }
              }),
              N = o.createClass({
                displayName: 'TimeTrialReport',
                contextTypes: {
                  router: o.PropTypes.func.isRequired,
                  depth: o.PropTypes.number.isRequired,
                  count: o.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    validated: !1
                  }
                },
                componentWillMount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.exitReportMode, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.exitReportMode, !1)
                },
                getUgcId: function () {
                  return {
                    userId: this.context.router.getCurrentParams().userId,
                    id: this.context.router.getCurrentParams().id
                  }
                },
                onChange: function () {
                  this.refs.details.value.length >= 3 &&
                  this.refs.reason.selectedIndex > 0 ? this.setState({
                    validated: !0
                  }) : this.setState({
                    validated: !1
                  })
                },
                exitReportMode: function () {
                  this.props.toggle('none')
                },
                reportTimeTrial: function () {
                  var e = this;
                  y.reportTimeTrial(
                    this.refs.reason.value,
                    this.refs.details.value,
                    this.getUgcId()
                  ).then(function () {
                    return e.exitReportMode()
                  })
                },
                render: function () {
                  return o.createElement(
                    'div',
                    {
                      className: 'time-trial-report'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-report-inputs'
                      },
                      o.createElement('label', {
                        htmlFor: 'reason'
                      }, t('ID_WEB_REPORT_REASON')),
                      o.createElement(
                        'select',
                        {
                          id: 'reason',
                          ref: 'reason',
                          onChange: this.onChange
                        },
                        o.createElement('option', null, t('ID_WEB_REPORT_REASON_CHOOSE')),
                        o.createElement(
                          'option',
                          {
                            value: 'InappropriateName'
                          },
                          t('ID_WEB_REPORT_REASON_INAPPROPRIATE')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'Vulgarity'
                          },
                          t('ID_WEB_REPORT_REASON_VULGARITY')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'SexuallyExplicit'
                          },
                          t('ID_WEB_REPORT_REASON_EXPLICIT')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'SexualContent'
                          },
                          t('ID_WEB_REPORT_REASON_SEXUAL')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'OffensiveContent'
                          },
                          t('ID_WEB_REPORT_REASON_OFFENSIVE')
                        ),
                        o.createElement(
                          'option',
                          {
                            value: 'Harassment'
                          },
                          t('ID_WEB_REPORT_REASON_HARASSMENT')
                        ),
                        o.createElement('option', {
                          value: 'HateSpeech'
                        }, t('ID_WEB_REPORT_REASON_HATE')),
                        o.createElement(
                          'option',
                          {
                            value: 'Language'
                          },
                          t('ID_WEB_REPORT_REASON_LANGUAGE')
                        )
                      ),
                      o.createElement('label', {
                        htmlFor: 'details'
                      }, t('ID_WEB_REPORT_DETAILS')),
                      o.createElement(
                        'textarea',
                        {
                          id: 'details',
                          ref: 'details',
                          cols: '39',
                          rows: '5',
                          onChange: this.onChange,
                          placeholder: t('ID_WEB_REPORT_DETAILS_INSTRUCTION')
                        }
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'time-trial-report-buttons'
                      },
                      o.createElement(
                        'button',
                        {
                          onClick: this.exitReportMode
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          disabled: !this.state.validated,
                          onClick: this.reportTimeTrial
                        },
                        t('ID_WEB_COMMON_REPORT')
                      )
                    )
                  )
                }
              });
              e.exports = C
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(93),
              i = r(a),
              o = n(2),
              s = n(11),
              c = n(139),
              l = n(652);
              n(812);
              var u = {
                ID_WEB_MAP_MAINMISSION: n(262),
                ID_WEB_MAP_SIDEMISSION: n(263),
                ID_WEB_MAP_SAFEHOUSE: n(267),
                ID_MAP_TOGGLE_UNDERGROUND: n(270),
                ID_WEB_MAP_GRIDNODE: n(261),
                ID_WEB_MAP_SECURITYHUB: n(268),
                ID_WEB_MAP_RUNNERSROUTE: n(266),
                ID_WEB_MAP_BILLBOARDHACK: n(258),
                ID_WEB_MAP_DELIVERYMISSION: n(259),
                ID_WEB_MAP_DIVERSIONMISSION: n(260),
                ID_WEB_MAP_RUNNERKIT: n(265),
                ID_WEB_MAP_TIMETRIAL: n(269),
                ID_WEB_MAP_REACHTHIS: n(264),
                ID_WEB_MAP_PLAYER: n(99)
              },
              p = o.createClass({
                displayName: 'ListChallenges',
                toggleChallenge: function (e) {
                  l.toggleChallenge(e[0], e[1])
                },
                findImage: function (e) {
                  return o.createElement('img', {
                    className: 'legendImage',
                    src: u[e]
                  })
                },
                render: function () {
                  var e = this,
                  n = (0, i['default']) (this.props.legendChallenges).map(
                    function (n) {
                      return o.createElement(
                        'div',
                        {
                          key: n,
                          className: 'category'
                        },
                        o.createElement(
                          'div',
                          {
                            className: 'rows'
                          },
                          (0, i['default']) (e.props.legendChallenges[n]).map(
                            function (r) {
                              var a,
                              i;
                              return null === e.props.activeLegendChallenges[n] ? (
                                a = 'row inactive',
                                i = o.createElement('i', {
                                  className: 'fa fa-square-o row-icon'
                                })
                              ) : null !== e.props.activeLegendChallenges[n][r] ? (
                                a = 'row',
                                i = o.createElement('i', {
                                  className: 'fa fa-check-square row-icon'
                                })
                              ) : (
                                a = 'row inactive',
                                i = o.createElement('i', {
                                  className: 'fa fa-square-o row-icon'
                                })
                              ),
                              o.createElement(
                                'div',
                                {
                                  key: r,
                                  className: a,
                                  onClick: e.toggleChallenge.bind(e, [
                                    n,
                                    r
                                  ])
                                },
                                o.createElement(
                                  'div',
                                  {
                                    className: 'name-and-logo'
                                  },
                                  e.findImage(e.props.legendChallenges[n][r]),
                                  t(e.props.legendChallenges[n][r]).toUpperCase()
                                ),
                                i
                              )
                            }
                          )
                        )
                      )
                    }
                  );
                  return o.createElement(
                    'div',
                    {
                      className: 'legend'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'legend-head'
                      },
                      o.createElement('div', {
                        className: 'legend-id'
                      }),
                      o.createElement('div', {
                        className: 'legend-name'
                      }, t('ID_WEB_NAV_MAP_LEGEND'))
                    ),
                    o.createElement('div', {
                      className: 'legend-area'
                    }, n)
                  )
                }
              }),
              d = o.createClass({
                displayName: 'LegendView',
                getInitialState: function () {
                  return {
                    legendChallenges: c.getLegendChallenges(),
                    activeLegendChallenges: c.getActiveLegendChallenges()
                  }
                },
                componentDidMount: function () {
                  c.addChangeListener(this.onLegendUpdate)
                },
                componentWillUnmount: function () {
                  c.removeChangeListener(this.onLegendUpdate)
                },
                onLegendUpdate: function () {
                  this.setState({
                    legendChallenges: c.getLegendChallenges(),
                    activeLegendChallenges: c.getActiveLegendChallenges()
                  })
                },
                render: function () {
                  return o.createElement(
                    s,
                    {
                      className: 'panel-legend',
                      title: t('ID_WEB_NAV_MAP_LEGEND')
                    },
                    o.createElement(
                      p,
                      {
                        legendChallenges: this.state.legendChallenges,
                        activeLegendChallenges: this.state.activeLegendChallenges
                      }
                    )
                  )
                }
              });
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(19);
          n(813);
          var i = r.createClass({
            displayName: 'MapOverlayView',
            render: function () {
              return r.createElement('div', {
                className: a('map-overlay', this.props.className)
              })
            }
          });
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(2),
          a = n(85),
          i = n(8),
          o = n(26),
          s = n(695),
          c = n(650),
          l = n(324),
          u = n(31),
          p = n(24).RouterStore,
          d = n(4),
          f = n(18),
          m = n(675),
          h = n(320);
          n(814);
          var _ = r.createClass({
            displayName: 'MapView',
            mixins: [
              i.create(p, d, f)
            ],
            getInitialState: function () {
              return {
                webGl: new c,
                showLoadingOverlay: !0,
                showSceneSwitchOverlay: !1
              }
            },
            componentDidMount: function () {
              var e = this.state.webGl.webglSupported &&
              this.state.webGl.webglEnabled;
              window.cordova &&
              window.device &&
              'Android' === window.device.platform &&
              (e = !1),
              o.map.enable3dMap ||
              (e = !1),
              p.getCurrentState().query.force3d ? this.initWebGLMap() : p.getCurrentState().query.force2d ? this.init2DMap() : e &&
              'mobile' !== l.getDevice() ? this.initWebGLMap() : this.init2DMap()
            },
            componentDidUpdate: function (e, t) {
              this.state.cityUnlockState !== t.cityUnlockState &&
              this.updateFog()
            },
            getStateFromStore: function () {
              var e = d.getCurrentPersona(),
              t = e ? f.getStatsForPersona(e.personaId) ||
              {
              }
               : {
              },
              n = void 0 !== t.pf_Global_CityUnlockState ? t.pf_Global_CityUnlockState : null;
              return {
                numOpenPanels: p.getStack().length,
                cityUnlockState: n
              }
            },
            initWebGLMap: function () {
              n.e(
                1,
                function () {
                  this.mapRenderer = n(76),
                  this.mapCameraControls = n(331),
                  this.mapCity = n(664),
                  this.mapRaycaster = n(332),
                  this.mapIconRenderer = n(666),
                  this.mapIconDealer = new m(this.mapIconRenderer),
                  this.mapRenderer.addEventListener(
                    'readyToRender',
                    function () {
                      this.updateFog(),
                      this.mapRenderer.start(),
                      this.setState({
                        showLoadingOverlay: !1
                      }),
                      h.emit('appLoaded')
                    }.bind(this)
                  ),
                  this.mapRenderer.addEventListener(
                    'sceneSwitchOverlayHide',
                    function () {
                      this.setState({
                        showSceneSwitchOverlay: !1
                      })
                    }.bind(this)
                  ),
                  this.mapRenderer.addEventListener(
                    'sceneSwitchOverlayShow',
                    function () {
                      this.setState({
                        showSceneSwitchOverlay: !0
                      })
                    }.bind(this)
                  ),
                  this.mapRaycaster.addEventListener(
                    'click',
                    function (e) {
                      e.object ||
                      p.isActive('map') ||
                      u.navigate('map')
                    }
                  ),
                  this.mapCity.loadCityData()
                }.bind(this)
              )
            },
            init2DMap: function () {
              n.e(
                2,
                function () {
                  this.mapRenderer = n(329),
                  this.mapIconRenderer = n(661),
                  this.mapIconDealer = new m(this.mapIconRenderer),
                  this.mapRenderer.map.on('click', function () {
                    p.isActive('map') ||
                    u.navigate('map')
                  }),
                  this.setState({
                    showLoadingOverlay: !1
                  }),
                  h.emit('appLoaded')
                }.bind(this)
              )
            },
            updateFog: function () {
              if (this.mapCity && null !== this.state.cityUnlockState) {
                for (var e = 0; 8 >= e; e++) this.mapCity.setCityPartFoggy(e, this.state.cityUnlockState < e);
                this.mapCity.setCityPartFoggy( - 1, !0)
              }
            },
            render: function () {
              var e;
              return this.state.showLoadingOverlay ? e = r.createElement('div', {
                className: 'loading-overlay'
              }, r.createElement(s, null)) : this.state.showSceneSwitchOverlay &&
              (e = r.createElement('div', {
                className: 'scene-switch-overlay'
              })),
              r.createElement(
                'div',
                null,
                r.createElement(
                  a,
                  {
                    transitionName: 'map-overlay',
                    transitionEnterTimeout: 300,
                    transitionLeaveTimeout: 300
                  },
                  e
                ),
                r.createElement('div', {
                  id: 'map'
                })
              )
            }
          });
          e.exports = _
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(17),
              o = n(4),
              s = n(77),
              c = n(44),
              l = n(38),
              u = n(45),
              p = n(37),
              d = n(61),
              f = n(11),
              m = n(20);
              n(356);
              var h = r.createClass({
                displayName: 'ChallengeView',
                mixins: [
                  a.create(i, o, c, l)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    latestPlayed: i.getLatestPlayed(this.getId())
                  }
                },
                render: function () {
                  var e,
                  n = this;
                  return e = this.state.latestPlayed.length ? this.state.latestPlayed.slice(0, 10).map(
                    function (e, t) {
                      return r.createElement(
                        _,
                        {
                          challenge: e,
                          platform: n.getPlatform(),
                          key: 'recentlyPlayed-' + t
                        }
                      )
                    }
                  ) : r.createElement('div', null, t('ID_WEB_PROFILE_NOCHALLENGES')),
                  r.createElement(
                    f,
                    {
                      className: 'panel-ugc',
                      title: t('ID_WEB_TITLE_UGC')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'selected-area'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'ugc'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'headline'
                          },
                          t('ID_WEB_PROFILE_COMPLETED_CHALLENGES')
                        ),
                        r.createElement('div', {
                          className: 'challenges'
                        }, e)
                      )
                    )
                  )
                }
              }),
              _ = r.createClass({
                displayName: 'Challenge',
                render: function () {
                  var e;
                  e = 0 === this.props.challenge.time ? '--' : 'RunnersRoute' === this.props.challenge.type ||
                  'TimeTrial' === this.props.challenge.type ? p.challengeScoreToRunTime(this.props.challenge.time) : p.formatTimeStamp(this.props.challenge.time);
                  var n,
                  a;
                  return 'ReachThis' === this.props.challenge.type ? (
                    n = c.getName(this.props.challenge.id),
                    a = void 0 !== c.getIsPublished(this.props.challenge.id) ? r.createElement('i', {
                      className: 'fa fa-eye'
                    }) : r.createElement('i', {
                      className: 'fa fa-eye-slash'
                    })
                  ) : 'TimeTrial' === this.props.challenge.type ? (
                    n = l.getName(this.props.challenge.id),
                    a = void 0 !== l.getIsPublished(this.props.challenge.id) ? r.createElement('i', {
                      className: 'fa fa-eye'
                    }) : r.createElement('i', {
                      className: 'fa fa-eye-slash'
                    })
                  ) : n = 'HackableBillboard' === this.props.challenge.type ? s.getName(this.props.challenge.id.id) : u.getName(this.props.challenge.id.id),
                  r.createElement(
                    'div',
                    {
                      className: 'item-challenge'
                    },
                    r.createElement(
                      'img',
                      {
                        src: d.challenge(this.props.challenge.type),
                        className: 'icon'
                      }
                    ),
                    a,
                    r.createElement(
                      'div',
                      {
                        className: 'information'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'item-challenge-name'
                        },
                        r.createElement(
                          m,
                          {
                            to: this.props.challenge.type,
                            params: {
                              platform: this.props.platform,
                              userId: this.props.challenge.id.userId,
                              id: this.props.challenge.id.id
                            },
                            stack: !0
                          },
                          t(n)
                        )
                      ),
                      r.createElement('div', {
                        className: 'item-challenge-time'
                      }, e)
                    )
                  )
                }
              });
              e.exports = h
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(15),
              o = n(20),
              s = n(61),
              c = n(11),
              l = n(135),
              u = n(45),
              p = n(17);
              n(816);
              var d = r.createClass({
                displayName: 'DivisionView',
                mixins: [
                  a.create(p)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    division: p.getDivision(this.getId())
                  }
                },
                render: function () {
                  var e = this,
                  n = s.generateRank(this.state.division),
                  a = s.divisions.map(
                    function (t) {
                      var n;
                      return n = t.old &&
                      e.state.division.name &&
                      t.old.toLowerCase() === e.state.division.name.toLowerCase() ? r.createElement(
                        'img',
                        {
                          src: s.divisionImage(e.state.division),
                          className: 'division_logos selected',
                          key: t.old
                        }
                      ) : r.createElement(
                        'img',
                        {
                          src: s.divisionImage({
                            name: t.old,
                            rank: e.state.division.rank
                          }),
                          className: 'division_logos',
                          key: t.old
                        }
                      )
                    }
                  );
                  return r.createElement(
                    c,
                    {
                      className: 'panel-division',
                      title: t('ID_WEB_TITLE_DIVISION')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'top'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'title'
                        },
                        r.createElement('div', {
                          className: 'panelName'
                        }, t('ID_WEB_COMMON_DIVISION')),
                        r.createElement('div', {
                          className: 'division_text'
                        }, n)
                      ),
                      r.createElement('div', {
                        className: 'logos'
                      }, a)
                    ),
                    r.createElement('div', {
                      className: 'help'
                    }, t('ID_WEB_DIVISION_HELP')),
                    r.createElement(f, null)
                  )
                }
              }),
              f = r.createClass({
                displayName: 'Progression',
                mixins: [
                  a.create(u, p)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                componentDidMount: function () {
                  i.getPlayerRunnersRoutePercentiles(this.getPersonaId(), this.getPlatform())
                },
                getPersonaId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    runnersRoutes: u.getAll(this.getPersonaId()),
                    runnersRoutePercentiles: p.getRunnersRoutePercentiles(this.getPersonaId())
                  }
                },
                render: function () {
                  var e = this,
                  n = this.state.runnersRoutes.map(
                    function (t) {
                      var n,
                      a;
                      return e.state.runnersRoutePercentiles &&
                      e.state.runnersRoutePercentiles[t.id] &&
                      e.state.runnersRoutePercentiles[t.id].hasPlayed &&
                      (
                        n = e.state.runnersRoutePercentiles[t.id].percentile,
                        a = e.state.runnersRoutePercentiles[t.id].rank
                      ),
                      r.createElement(
                        m,
                        {
                          key: t.id,
                          route: t,
                          platform: e.getPlatform(),
                          percentile: n,
                          rank: a
                        }
                      )
                    }
                  );
                  return r.createElement(
                    'div',
                    {
                      className: 'runnersRoutes'
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'runnersRouteTitle'
                      },
                      t('ID_WEB_COMMON_CHALLENGES')
                    ),
                    n
                  )
                }
              }),
              m = r.createClass({
                displayName: 'ProgressionDetail',
                render: function () {
                  var e,
                  n = {
                    transform: 'scaleX(' + (
                      void 0 !== this.props.percentile ? (100 - this.props.percentile) / 100 : 0
                    ) + ')'
                  };
                  return this.props.rank &&
                  this.props.rank <= 3 ? e = t('ID_WEB_LEADERBOARD_NR').replace('[NUMBER]', this.props.rank) : this.props.percentile &&
                  (
                    e = l(t('ID_MPA_DIVISION_TOP_PERCENT'), [
                      this.props.percentile
                    ])
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'runnersRoute'
                    },
                    r.createElement('div', {
                      className: 'progress',
                      style: n
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'info'
                      },
                      r.createElement('img', {
                        src: s.challenge('RunnersRoute'),
                        className: 'icon'
                      }),
                      r.createElement(
                        o,
                        {
                          to: 'RunnersRoute',
                          params: {
                            platform: this.props.platform,
                            id: this.props.route.meta.id
                          },
                          stack: !0
                        },
                        t(this.props.route.meta.displayName)
                      ),
                      r.createElement('div', {
                        className: 'percent'
                      }, e || '--')
                    )
                  )
                }
              });
              e.exports = d
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(3),
              i = r(a),
              o = n(2),
              s = n(16),
              c = n(490),
              l = n(8),
              u = n(15),
              p = n(654),
              d = n(17),
              f = n(339),
              m = n(74),
              h = n(657),
              _ = n(32),
              g = n(454),
              v = n(1478),
              E = n(272);
              n(817);
              var I = o.createClass({
                displayName: 'EmblemGenerator',
                mixins: [
                  l.create(d, f)
                ],
                getInitialState: function () {
                  var e = d.getAllEmblems(),
                  n = s(e.layers, function (e) {
                    return 'bg' === e.name
                  }),
                  r = n.tags.map(function (e) {
                    return {
                      name: e.name,
                      category: e.category
                    }
                  }),
                  a = s(e.layers, function (e) {
                    return 'detail' === e.name
                  }),
                  i = a.tags.map(function (e) {
                    return {
                      name: e.name,
                      category: e.category
                    }
                  }),
                  o = s(e.layers, function (e) {
                    return 'frame' === e.name
                  }),
                  c = o.tags.map(function (e) {
                    return {
                      name: e.name,
                      category: e.category
                    }
                  }),
                  l = {
                    bg: r,
                    detail: i,
                    frame: c
                  };
                  return {
                    allEmblems: l,
                    currentEmblem: d.getPlayerEmblem(),
                    originalEmblem: d.getPlayerEmblem(),
                    buttons: [
                      {
                        name: t('ID_WEB_EMBLEM_LAYER_DETAIL'),
                        key: 'detail',
                        event: this.menuClicked
                      },
                      {
                        name: t('ID_WEB_EMBLEM_LAYER_FRAME'),
                        key: 'frame',
                        event: this.menuClicked
                      },
                      {
                        name: t('ID_WEB_EMBLEM_LAYER_BACKGROUND'),
                        key: 'bg',
                        event: this.menuClicked
                      }
                    ],
                    selectedCategory: 'detail'
                  }
                },
                componentWillMount: function () {
                  u.getInventory(),
                  p.setTemp(),
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.cancelButton, !1)
                },
                componentWillUnmount: function () {
                  p.resetTemp(),
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.cancelButton, !1)
                },
                getStateFromStore: function () {
                  return {
                    inventoryItems: f.getItems()
                  }
                },
                getEmblemParts: function (e) {
                  return 'all' === e ? v[this.state.selectedCategory].map(
                    function (e) {
                      return e.tags.map(function (t) {
                        return {
                          category: e.name,
                          name: t
                        }
                      })
                    }
                  ) : this.state.currentEmblem[this.state.selectedCategory]
                },
                menuClicked: function (e) {
                  switch (e) {
                    case 0:
                      this.setState({
                        selectedCategory: 'detail'
                      });
                      break;
                    case 1:
                      this.setState({
                        selectedCategory: 'frame'
                      });
                      break;
                    case 2:
                      this.setState({
                        selectedCategory: 'bg'
                      })
                  }
                },
                previewClicked: function (e) {
                  var t = (0, i['default']) ({
                  }, this.state.currentEmblem);
                  t[this.state.selectedCategory] = e,
                  this.setState({
                    currentEmblem: t
                  }),
                  p.updateTemp(t)
                },
                saveEmblem: function () {
                  var e = this,
                  t = s(g.layers, function (e) {
                    return 'bg' === e.name
                  }),
                  n = s(t.tags, function (t) {
                    return t.name === e.state.currentEmblem.bg
                  }).hash,
                  r = s(g.layers, function (e) {
                    return 'detail' === e.name
                  }),
                  a = s(
                    r.tags,
                    function (t) {
                      return t.name === e.state.currentEmblem.detail
                    }
                  ).hash,
                  i = s(g.layers, function (e) {
                    return 'frame' === e.name
                  }),
                  o = s(
                    i.tags,
                    function (t) {
                      return t.name === e.state.currentEmblem.frame
                    }
                  ).hash,
                  c = {
                    bg: {
                      tag: n
                    },
                    detail: {
                      tag: a
                    },
                    frame: {
                      tag: o
                    }
                  };
                  this.state.currentEmblem.bg !== this.state.originalEmblem.bg &&
                  _.settingChange(
                    'persona_tag_background',
                    this.state.originalEmblem.bg,
                    this.state.currentEmblem.bg
                  ),
                  this.state.currentEmblem.detail !== this.state.originalEmblem.detail &&
                  _.settingChange(
                    'persona_tag_symbol',
                    this.state.originalEmblem.detail,
                    this.state.currentEmblem.detail
                  ),
                  this.state.currentEmblem.frame !== this.state.originalEmblem.frame &&
                  _.settingChange(
                    'persona_tag_frame',
                    this.state.originalEmblem.frame,
                    this.state.currentEmblem.frame
                  ),
                  u.setPlayerTag(c),
                  this.props.toggle('none')
                },
                cancelButton: function () {
                  this.props.toggle('none')
                },
                render: function () {
                  var e = {
                    parts: this.getEmblemParts('all'),
                    type: this.state.selectedCategory
                  },
                  n = this.getEmblemParts('current');
                  return o.createElement(
                    'div',
                    {
                      className: 'emblemEdit'
                    },
                    o.createElement('h2', null, t('ID_WEB_PROFILE_EDIT_TAG')),
                    o.createElement(
                      'div',
                      {
                        className: 'emblemEdit-actions'
                      },
                      o.createElement(
                        'button',
                        {
                          className: 'cancel',
                          onClick: this.cancelButton
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          className: 'save',
                          onClick: this.saveEmblem
                        },
                        t('ID_WEB_COMMON_SAVE')
                      )
                    ),
                    o.createElement(
                      m,
                      {
                        buttons: this.state.buttons,
                        selected: this.state.selectedCategory
                      }
                    ),
                    o.createElement(
                      b,
                      {
                        emblemInfo: e,
                        inventoryItems: this.state.inventoryItems,
                        currentEmblem: n,
                        clicked: this.previewClicked
                      }
                    )
                  )
                }
              }),
              b = o.createClass({
                displayName: 'Overview',
                clicked: function (e) {
                  this.props.clicked(e)
                },
                generateItems: function () {
                  var e = this,
                  t = this,
                  n = s(g.layers, function (t) {
                    return t.name === e.props.emblemInfo.type
                  }),
                  r = c(t.props.emblemInfo.parts).map(
                    function (e) {
                      var r = e.map(
                        function (e) {
                          var r = s(n.tags, function (t) {
                            return t.name === e.name
                          }),
                          a = E[t.props.emblemInfo.type] === e.name,
                          i = a ||
                          !!s(t.props.inventoryItems, function (e) {
                            return e.id === r.hash
                          });
                          return {
                            image: {
                              name: e.name,
                              type: t.props.emblemInfo.type
                            },
                            unlocked: i,
                            event: t.clicked
                          }
                        }
                      );
                      return {
                        title: e[0].category,
                        items: r
                      }
                    }
                  );
                  return r
                },
                render: function () {
                  var e;
                  e = 'bg' === this.props.emblemInfo.type ? 'large' : 'small';
                  var t = {
                    selected: this.props.currentEmblem,
                    size: e,
                    sets: this.generateItems()
                  };
                  return o.createElement(h, {
                    previews: t
                  })
                }
              });
              e.exports = I
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(20),
              o = n(17),
              s = n(45),
              c = n(77),
              l = n(53),
              u = n(44),
              p = n(38),
              d = n(15),
              f = n(31),
              m = n(74),
              h = n(37),
              _ = n(61),
              g = n(54);
              n(818);
              var v = r.createClass({
                displayName: 'InteractiveItems',
                getInitialState: function () {
                  return {
                    buttons: [
                      {
                        name: t('ID_WEB_COMMON_CHALLENGES'),
                        event: this.changeSelected
                      },
                      {
                        name: t('ID_WEB_COMMON_BOOKMARKS'),
                        event: this.changeSelected
                      },
                      {
                        name: t('ID_WEB_COMMON_FRIENDS'),
                        event: this.changeSelected
                      }
                    ],
                    selected: 0
                  }
                },
                changeSelected: function (e) {
                  this.setState({
                    selected: e
                  })
                },
                render: function () {
                  var e = [
                    r.createElement(E, null),
                    r.createElement(b, null),
                    r.createElement(S, null)
                  ];
                  return r.createElement(
                    'div',
                    {
                      className: 'interactive-items'
                    },
                    r.createElement(m, {
                      buttons: this.state.buttons,
                      selected: this.state.selected
                    }),
                    e[this.state.selected]
                  )
                }
              }),
              E = r.createClass({
                displayName: 'Challenges',
                mixins: [
                  a.create(o, s, u, p)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired
                },
                componentDidMount: function () {
                  d.getRunnersRouteData(
                    s.getAll().map(function (e) {
                      return e.meta.id
                    }),
                    [
                      'USER_STATS'
                    ],
                    this.getId(),
                    this.getPlatform()
                  )
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    runnersRoutes: s.getAll(this.getId()),
                    latestPlayed: o.getLatestPlayed(this.getId()),
                    ugc: {
                      timeTrials: p.getPublishedByCreator(this.getId()),
                      reachThises: u.getPublishedByCreator(this.getId())
                    }
                  }
                },
                render: function () {
                  var e = this,
                  n = this,
                  a = [].concat(this.state.ugc.reachThises || [], this.state.ugc.timeTrials || []),
                  i = [];
                  i = a.length ? a.map(
                    function (e) {
                      var t;
                      return t = {
                        createdAt: e.meta.createdAt,
                        type: e.meta.typeId,
                        id: e.meta.ugcId
                      },
                      'ReachThis' === e.meta.typeId ? t.time = e.userStats ? e.userStats.reachedAt : 0 : 'TimeTrial' === e.meta.typeId &&
                      (t.time = e.userStats ? e.userStats.finishTime : 0),
                      t
                    }
                  ).sort(function (e, t) {
                    return t.createdAt - e.createdAt
                  }).map(
                    function (t, n) {
                      return r.createElement(I, {
                        challenge: t,
                        platform: e.getPlatform(),
                        key: 'ugc-' + n
                      })
                    }
                  ) : r.createElement('div', null, t('ID_WEB_PROFILE_NOUGC'));
                  var o;
                  return o = this.state.latestPlayed.length ? this.state.latestPlayed.slice(0, 10).map(
                    function (t, n) {
                      return r.createElement(
                        I,
                        {
                          challenge: t,
                          platform: e.getPlatform(),
                          key: 'recentlyPlayed-' + n
                        }
                      )
                    }
                  ) : r.createElement('div', null, t('ID_WEB_PROFILE_NOCHALLENGES')),
                  r.createElement(
                    'div',
                    {
                      className: 'selected-area'
                    },
                    r.createElement(
                      g,
                      {
                        minHeight: 300
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'headline'
                        },
                        t('ID_WEB_PROFILE_PUBLISHED_UGC'),
                        r.createElement(
                          'button',
                          {
                            input: 'button',
                            onClick: function () {
                              f.navigateStacked(
                                e.context.depth + 1,
                                'ugc',
                                {
                                  platform: e.getPlatform(),
                                  id: e.getId()
                                }
                              )
                            }
                          },
                          t('ID_WEB_COMMON_SHOWALL'),
                          ' >'
                        )
                      ),
                      r.createElement('div', {
                        className: 'challenges'
                      }, i),
                      r.createElement(
                        'div',
                        {
                          className: 'headline'
                        },
                        t('ID_WEB_PROFILE_COMPLETED_CHALLENGES'),
                        r.createElement(
                          'button',
                          {
                            input: 'button',
                            onClick: function () {
                              f.navigateStacked(
                                n.context.depth + 1,
                                'challenges',
                                {
                                  platform: e.getPlatform(),
                                  id: e.getId()
                                }
                              )
                            }
                          },
                          t('ID_WEB_COMMON_SHOWALL'),
                          ' >'
                        )
                      ),
                      r.createElement('div', {
                        className: 'challenges'
                      }, o)
                    )
                  )
                }
              }),
              I = r.createClass({
                displayName: 'Challenge',
                propTypes: {
                  challenge: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  var e;
                  e = 0 === this.props.challenge.time ? '--' : 'RunnersRoute' === this.props.challenge.type ||
                  'TimeTrial' === this.props.challenge.type ? h.challengeScoreToRunTime(this.props.challenge.time) : h.formatTimeStamp(this.props.challenge.time);
                  var n;
                  return 'ReachThis' === this.props.challenge.type ? n = u.getName(this.props.challenge.id) : 'TimeTrial' === this.props.challenge.type ? n = p.getName(this.props.challenge.id) : 'RunnersRoute' === this.props.challenge.type ? n = s.getName(this.props.challenge.id.id) : 'HackableBillboard' === this.props.challenge.type &&
                  (n = c.getName(this.props.challenge.id.id)),
                  r.createElement(
                    'div',
                    {
                      className: 'item-challenge'
                    },
                    r.createElement(
                      'img',
                      {
                        src: _.challenge(this.props.challenge.type),
                        className: 'player-icon'
                      }
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'information'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'item-challenge-name'
                        },
                        r.createElement(
                          i,
                          {
                            to: this.props.challenge.type,
                            params: {
                              platform: this.props.platform,
                              userId: this.props.challenge.id.userId,
                              id: this.props.challenge.id.id
                            },
                            stack: !0
                          },
                          t(n)
                        )
                      ),
                      r.createElement('div', {
                        className: 'item-challenge-time'
                      }, e)
                    )
                  )
                }
              }),
              b = r.createClass({
                displayName: 'Bookmarks',
                mixins: [
                  a.create(l)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                componentDidMount: function () {
                  d.getBookmarks(this.getId(), this.getPlatform()),
                  d.getFollowed(this.getId(), this.getPlatform())
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    bookmarks: l.getAllChallenges(this.getId()),
                    followed: l.getAllFollowed(this.getId())
                  }
                },
                render: function () {
                  var e,
                  n = this;
                  e = this.state.bookmarks &&
                  this.state.bookmarks.length ? this.state.bookmarks.slice().sort(function (e, t) {
                    return t.bookmarkTime - e.bookmarkTime
                  }).map(
                    function (e, t) {
                      return r.createElement(y, {
                        info: e,
                        platform: n.getPlatform(),
                        key: 'Bookmark-' + t
                      })
                    }
                  ) : t('ID_WEB_PROFILE_NOBOOKMARKEDCHALLENGES');
                  var a;
                  return a = this.state.followed &&
                  this.state.followed.length ? this.state.followed.map(
                    function (e, t) {
                      return r.createElement(T, {
                        info: e,
                        platform: n.getPlatform(),
                        key: 'Followed-' + t
                      })
                    }
                  ) : t('ID_WEB_PROFILE_NOBOOKMARKEDPLAYERS'),
                  r.createElement(
                    'div',
                    {
                      className: 'selected-area'
                    },
                    r.createElement(
                      g,
                      {
                        minHeight: 300
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'bookmarks'
                        },
                        r.createElement('div', {
                          className: 'headline'
                        }, t('ID_WEB_PROFILE_CHALLENGES')),
                        r.createElement('div', {
                          className: 'challenges'
                        }, e),
                        r.createElement('div', {
                          className: 'headline'
                        }, t('ID_WEB_PROFILE_PLAYERS')),
                        r.createElement('div', {
                          className: 'challenges'
                        }, a)
                      )
                    )
                  )
                }
              }),
              y = r.createClass({
                displayName: 'Bookmark',
                propTypes: {
                  info: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  var e,
                  n,
                  a,
                  o = this.props.info;
                  if (
                    o.challengeType ? (
                      e = o.challengeType,
                      n = {
                        to: e,
                        params: {
                          platform: this.props.platform,
                          id: o.challengeId
                        }
                      },
                      a = t(s.getName(o.challengeId))
                    ) : o.ugcType &&
                    (
                      e = o.ugcType,
                      n = {
                        to: e,
                        params: {
                          platform: this.props.platform,
                          userId: o.ugcId.userId,
                          id: o.ugcId.id
                        }
                      },
                      'TimeTrial' === e ? a = p.getName(o.ugcId) : 'ReachThis' === e &&
                      (a = u.getName(o.ugcId))
                    ),
                    !a
                  ) return null;
                  var c = h.friendlyTimeStamp(o.bookmarkTime);
                  return r.createElement(
                    'div',
                    {
                      className: 'item-bookmark'
                    },
                    r.createElement('img', {
                      src: _.challenge(e),
                      className: 'player-icon'
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'bookmark-name'
                      },
                      r.createElement(i, {
                        to: n.to,
                        params: n.params,
                        stack: !0
                      }, a),
                      r.createElement('div', {
                        className: 'item-bookmark-created'
                      }, c)
                    )
                  )
                }
              }),
              T = r.createClass({
                displayName: 'Followed',
                propTypes: {
                  info: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'item-bookmark'
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'bookmark-name'
                      },
                      r.createElement(
                        i,
                        {
                          to: 'profile',
                          params: {
                            platform: this.props.platform,
                            id: this.props.info.personaId
                          },
                          stack: !0
                        },
                        this.props.info.name
                      )
                    )
                  )
                }
              }),
              S = r.createClass({
                displayName: 'Friends',
                mixins: [
                  a.create(o)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  return {
                    friends: o.getFriends(this.getId())
                  }
                },
                render: function () {
                  var e = this;
                  return r.createElement(
                    'div',
                    {
                      className: 'selected-area'
                    },
                    r.createElement(
                      g,
                      {
                        minHeight: 300
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'friends'
                        },
                        this.state.friends.length ? this.state.friends.map(
                          function (t, n) {
                            return r.createElement(C, {
                              info: t,
                              platform: e.getPlatform(),
                              key: 'Friend-' + n
                            })
                          }
                        ) : t('ID_WEB_PROFILE_NOFRIENDS')
                      )
                    )
                  )
                }
              }),
              C = r.createClass({
                displayName: 'Friend',
                propTypes: {
                  info: r.PropTypes.object,
                  platform: r.PropTypes.string
                },
                render: function () {
                  return r.createElement(
                    'div',
                    {
                      className: 'item-friend'
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'friend-name'
                      },
                      r.createElement(
                        i,
                        {
                          to: 'profile',
                          params: {
                            platform: this.props.platform,
                            id: this.props.info.personaId
                          },
                          stack: !0
                        },
                        this.props.info.name
                      )
                    )
                  )
                }
              });
              e.exports = v
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              function r(e) {
                return e &&
                e.__esModule ? e : {
                  'default': e
                }
              }
              var a = n(93),
              i = r(a),
              o = n(2),
              s = n(8),
              c = n(19),
              l = n(325),
              u = n(15),
              p = n(322),
              d = n(4),
              f = n(78),
              m = n(17),
              h = n(32);
              n(819);
              var _ = o.createClass({
                displayName: 'ProfileEdit',
                mixins: [
                  s.create(d, m)
                ],
                getInitialState: function () {
                  return {
                    pushNotifications: f.get('pushNotifications'),
                    sounds: f.get('sounds')
                  }
                },
                componentWillMount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.addEventListener('backbutton', this.onBackButton, !1)
                },
                componentWillUnmount: function () {
                  window.cordova &&
                  window.device &&
                  'Android' === window.device.platform &&
                  document.removeEventListener('backbutton', this.onBackButton, !1)
                },
                getStateFromStore: function () {
                  return {
                    personas: d.getPersonas(),
                    currentPersona: d.getCurrentPersona(),
                    location: m.getLocation()
                  }
                },
                onBackButton: function () {
                  this.props.toggle('none')
                },
                _getLocationString: function () {
                  var e = [
                    'locality',
                    'state',
                    'country'
                  ],
                  t = this.state.location.slice().sort(function (t, n) {
                    return e.indexOf(t.type) - e.indexOf(n.type)
                  }).shift();
                  return t ? t.name + ', ' + t.cc : ''
                },
                changePersona: function (e) {
                  u.selectPersona(e)
                },
                okButton: function () {
                  var e = {
                    pushNotifications: f.get('pushNotifications'),
                    sounds: f.get('sounds')
                  },
                  t = {
                    pushNotifications: this.state.pushNotifications,
                    sounds: this.state.sounds
                  };
                  (0, i['default']) (t).forEach(
                    function (n) {
                      t[n] !== e[n] &&
                      h.settingChange(n, e[n] ? 1 : 0, t[n] ? 1 : 0)
                    }
                  ),
                  p.set(t),
                  this.props.toggle('none')
                },
                setLocation: function (e, t) {
                  var n = this._getLocationString(),
                  r = t ? t.name + ', ' + t.cc : '';
                  n !== r &&
                  h.settingChange('persona_location', n, r),
                  u.setPlayerLocation(e)
                },
                clearLocation: function () {
                  var e = this._getLocationString(),
                  t = '';
                  e !== t &&
                  h.settingChange('persona_location', e, t),
                  u.clearPlayerLocation()
                },
                changePushNotifications: function () {
                  this.setState({
                    pushNotifications: !this.state.pushNotifications
                  })
                },
                changeSound: function () {
                  this.setState({
                    sounds: !this.state.sounds
                  })
                },
                render: function () {
                  var e = this,
                  n = this;
                  return o.createElement(
                    'div',
                    {
                      className: 'profile-edit'
                    },
                    o.createElement(
                      'div',
                      {
                        className: 'profile-edit-persona'
                      },
                      this.state.personas.map(
                        function (t) {
                          return o.createElement(
                            'div',
                            {
                              key: t.personaId,
                              className: c('persona', {
                                current: e.state.currentPersona === t
                              }),
                              onClick: function () {
                                n.changePersona(t.personaId)
                              },
                              style: {
                                cursor: 'pointer'
                              }
                            },
                            o.createElement('div', {
                              className: 'persona-name'
                            }, t.personaName),
                            o.createElement(
                              'div',
                              {
                                className: 'persona-platform-icon'
                              },
                              o.createElement('i', {
                                className: 'platform-icon platform-icon-' + t.platform
                              })
                            )
                          )
                        }
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'profile-edit-location'
                      },
                      o.createElement('h2', null, t('ID_WEB_PROFILE_EDIT_LOCATION')),
                      o.createElement(l, {
                        clicked: this.setLocation
                      }),
                      o.createElement(
                        'button',
                        {
                          type: 'button',
                          onClick: this.clearLocation
                        },
                        t('ID_WEB_PROFILE_EDIT_RESETLOCATION')
                      )
                    ),
                    o.createElement(
                      'div',
                      {
                        className: 'profile-edit-done'
                      },
                      o.createElement(
                        'button',
                        {
                          className: 'btn cancel',
                          onClick: function () {
                            n.props.toggle('none')
                          }
                        },
                        t('ID_WEB_COMMON_CANCEL')
                      ),
                      o.createElement(
                        'button',
                        {
                          className: 'btn save',
                          onClick: this.okButton
                        },
                        t('ID_WEB_COMMON_SAVE')
                      )
                    )
                  )
                }
              });
              e.exports = _
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(19),
              o = n(1587),
              s = n(32),
              c = n(92),
              l = n(31),
              u = n(15),
              p = n(17),
              d = n(4),
              f = n(53),
              m = n(18),
              h = n(658),
              _ = n(11),
              g = n(61),
              v = n(75),
              E = n(324),
              I = n(326),
              b = n(726),
              y = n(725),
              T = n(727);
              n(820);
              var S = r.createClass({
                displayName: 'ProfileView',
                mixins: [
                  a.create(p, d, f, m)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                getInitialState: function () {
                  return {
                    editor: 'none'
                  }
                },
                componentDidMount: function () {
                  window.addEventListener('mousedown', this.pageClick, !1),
                  u.getProfile(this.getPersonaId(), this.getPlatform())
                },
                componentWillUnmount: function () {
                  window.removeEventListener('mousedown', this.pageClick, !1)
                },
                getStateFromStore: function () {
                  return {
                    account: p.getAccountDetails(this.getPersonaId()),
                    isBookmarked: f.getIsFollowed(this.getPersonaId()),
                    stats: m.getStatsForPersona(this.getPersonaId()),
                    statsSummary: m.getSummary(this.getPersonaId())
                  }
                },
                getPersonaId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                toggleEditor: function (e) {
                  this.setState({
                    editor: e
                  })
                },
                toggleSecondary: function (e) {
                  l.navigateStacked(
                    this.context.depth + 1,
                    e,
                    {
                      platform: this.getPlatform(),
                      id: this.getPersonaId()
                    }
                  )
                },
                render: function () {
                  if (!this.state.account) return r.createElement(_, null);
                  var e = r.createElement(
                    C,
                    {
                      ref: 'account_head',
                      account: this.state.account,
                      isBookmarked: this.state.isBookmarked,
                      toggle: this.toggleEditor
                    }
                  );
                  return 'emblem' === this.state.editor ? r.createElement(
                    _,
                    {
                      className: 'panel-profile',
                      title: t('ID_WEB_MAP_PLAYER')
                    },
                    e,
                    r.createElement(y, {
                      toggle: this.toggleEditor
                    })
                  ) : 'profile' === this.state.editor ? r.createElement(
                    _,
                    {
                      className: 'panel-profile',
                      title: t('ID_WEB_MAP_PLAYER')
                    },
                    e,
                    r.createElement(T, {
                      toggle: this.toggleEditor
                    })
                  ) : r.createElement(
                    _,
                    {
                      className: 'panel-profile',
                      title: t('ID_WEB_MAP_PLAYER')
                    },
                    e,
                    r.createElement(
                      D,
                      {
                        stats: this.state.stats,
                        statsSummary: this.state.statsSummary,
                        division: this.state.account.stats.division,
                        onClick: this.toggleSecondary
                      }
                    ),
                    r.createElement(b, null)
                  )
                }
              }),
              C = r.createClass({
                displayName: 'AccountHead',
                mixins: [
                  a.create(d)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                getInitialState: function () {
                  return this.getSizes()
                },
                componentDidMount: function () {
                  window.addEventListener('resize', this.onPageResize, !1)
                },
                componentWillUnmount: function () {
                  window.removeEventListener('resize', this.onPageResize, !1)
                },
                getStateFromStore: function () {
                  return {
                    currentPersona: d.getCurrentPersona()
                  }
                },
                getPersonaId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getSizes: function () {
                  switch (E.getDevice()) {
                    case 'mobile':
                      return {
                        emblemSize: 72,
                        backgroundSize: {
                          height: 128,
                          width: window.innerWidth
                        },
                        marginTop: 25,
                        marginLeft: 18
                      };
                    case 'tablet':
                      return {
                        emblemSize: 72,
                        backgroundSize: {
                          height: 128,
                          width: 512
                        },
                        marginTop: 25,
                        marginLeft: 18
                      };
                    default:
                      return {
                        emblemSize: 114,
                        backgroundSize: {
                          height: 200,
                          width: 640
                        },
                        marginTop: 43,
                        marginLeft: 43
                      }
                  }
                },
                onProfileButtonClick: function (e) {
                  this.props.toggle(e)
                },
                onPageResize: function () {
                  this.setState(this.getSizes())
                },
                onBookmarkButtonClick: function () {
                  var e = this;
                  this.props.isBookmarked ? u.unfollowPlayer(this.props.account.name, this.getPersonaId()) : (
                    u.followPlayer(this.props.account.name, this.getPersonaId()).then(
                      function () {
                        e.showBookmarkedNotification(),
                        e.setState({
                          BookmarkTitle: t('ID_WEB_PROFILE_BOOKMARK_SUCCESS'),
                          BookmarkMessage: t('ID_WEB_PROFILE_BOOKMARK_INFO_SUCCESS')
                        })
                      },
                      function () {
                        e.showBookmarkedNotification(),
                        e.setState({
                          BookmarkTitle: t('ID_WEB_PROFILE_BOOKMARK_FAILURE'),
                          BookmarkMessage: t('ID_WEB_PROFILE_BOOKMARK_INFO_FAILURE')
                        })
                      }
                    ),
                    s.bookmark('Profile', this.getPersonaId(), '')
                  )
                },
                showBookmarkedNotification: function () {
                  this.refs.bookmarkTooltip.show()
                },
                render: function () {
                  var e;
                  this.props.account.location &&
                  this.props.account.location.length &&
                  (
                    e = r.createElement(
                      'div',
                      {
                        className: 'profile-location'
                      },
                      I(this.props.account.location)
                    )
                  );
                  var n;
                  return n = this.state.currentPersona &&
                  this.state.currentPersona.personaId === this.getPersonaId() ? [
                    r.createElement(
                      'button',
                      {
                        className: 'bookmarkOrEditButton',
                        key: 'btn-editprofile',
                        onClick: this.onProfileButtonClick.bind(this, 'emblem')
                      },
                      r.createElement('i', {
                        className: 'fa fa-pencil'
                      }),
                      t('ID_WEB_PROFILE_EDIT_TAG')
                    ),
                    r.createElement(
                      'button',
                      {
                        className: 'bookmarkOrEditButton',
                        key: 'btn-settings',
                        onClick: this.onProfileButtonClick.bind(this, 'profile')
                      },
                      r.createElement('i', {
                        className: 'fa fa-cog'
                      }),
                      t('ID_WEB_PROFILE_SETTINGS')
                    )
                  ] : this.state.currentPersona &&
                  this.state.currentPersona.platform === this.getPlatform() ? r.createElement(
                    'button',
                    {
                      type: 'button',
                      className: 'bookmarkOrEditButton',
                      onClick: this.onBookmarkButtonClick
                    },
                    r.createElement(
                      'i',
                      {
                        className: i('fa', this.props.isBookmarked ? 'fa-bookmark' : 'fa-bookmark-o')
                      }
                    ),
                    t(
                      this.props.isBookmarked ? 'ID_WEB_BOOKMARK_REMOVE' : 'ID_WEB_BOOKMARK_ADD'
                    )
                  ) : r.createElement(
                    'i',
                    {
                      className: 'platform-icon platform-icon-' + this.getPlatform()
                    }
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'accountHead'
                    },
                    r.createElement(
                      v,
                      {
                        emblem: {
                          bg: {
                            source: this.props.account.profileEmblem.bg,
                            size: {
                              height: this.state.backgroundSize.height,
                              width: this.state.backgroundSize.width
                            },
                            margin: {
                              top: 0,
                              left: 0
                            }
                          },
                          detail: {
                            source: this.props.account.profileEmblem.detail,
                            size: {
                              height: this.state.emblemSize,
                              width: this.state.emblemSize
                            },
                            margin: {
                              top: this.state.marginTop,
                              left: this.state.marginLeft
                            }
                          },
                          frame: {
                            source: this.props.account.profileEmblem.frame,
                            size: {
                              height: this.state.emblemSize,
                              width: this.state.emblemSize
                            },
                            margin: {
                              top: this.state.marginTop,
                              left: this.state.marginLeft
                            }
                          }
                        }
                      }
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'profile-account-holder'
                      },
                      r.createElement('div', {
                        className: 'profile-name'
                      }, this.props.account.name),
                      e,
                      r.createElement('div', {
                        className: 'profile-actions'
                      }, n)
                    ),
                    r.createElement(
                      c,
                      {
                        title: this.state.BookmarkTitle,
                        description: this.state.BookmarkMessage,
                        ref: 'bookmarkTooltip'
                      }
                    )
                  )
                }
              }),
              D = r.createClass({
                displayName: 'RadialGraphs',
                propTypes: {
                  stats: r.PropTypes.object,
                  statsSummary: r.PropTypes.object,
                  division: r.PropTypes.object,
                  onClick: r.PropTypes.func
                },
                onGraphClick: function (e) {
                  this.props.onClick(e)
                },
                render: function () {
                  var e = this,
                  n = {
                    story: {
                      main: 0,
                      sub: 0,
                      total: 0
                    },
                    world: {
                      main: 0,
                      sub: 0,
                      total: 0
                    },
                    division: {
                      main: 0,
                      sub: 0
                    }
                  };
                  return this.props.statsSummary &&
                  (
                    n.story.main = this.props.statsSummary.story.main,
                    n.story.sub = this.props.statsSummary.story.sub,
                    n.story.total = this.props.statsSummary.story.total,
                    n.world.main = this.props.statsSummary.world.main,
                    n.world.sub = this.props.statsSummary.world.sub,
                    n.world.total = this.props.statsSummary.world.total
                  ),
                  this.props.division &&
                  (
                    n.division.main = o(
                      g.divisions,
                      function (t) {
                        return t.old.toLowerCase() === e.props.division.name.toLowerCase()
                      }
                    ) / (g.divisions.length - 1) * 100,
                    n.division.sub = g.divisionLevels.indexOf(this.props.division.rank) / (g.divisionLevels.length - 1) * 100
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'graphs'
                    },
                    r.createElement(
                      h,
                      {
                        label: t('ID_WEB_PROFILE_STORY'),
                        mainValue: n.story.main,
                        subValue: n.story.sub,
                        centerValue: n.story.total,
                        onClick: this.onGraphClick.bind(this, 'story')
                      }
                    ),
                    r.createElement(
                      h,
                      {
                        label: t('ID_WEB_PROFILE_WORLD'),
                        mainValue: n.world.main,
                        subValue: n.world.sub,
                        centerValue: n.world.total,
                        onClick: this.onGraphClick.bind(this, 'world')
                      }
                    ),
                    r.createElement(
                      h,
                      {
                        label: t('ID_WEB_PROFILE_DIVISION'),
                        mainValue: n.division.main,
                        subValue: n.division.sub,
                        centerImage: g.divisionImage(this.props.division),
                        onClick: this.onGraphClick.bind(this, 'division')
                      }
                    )
                  )
                }
              });
              e.exports = S
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(1594),
              o = n(11),
              s = n(37),
              c = n(660),
              l = n(18),
              u = n(694),
              p = n(140),
              d = n(15);
              n(821);
              var f = r.createClass({
                displayName: 'MissionsView',
                mixins: [
                  a.create(l, u, p)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                componentDidMount: function () {
                  d.getPersonaStats(this.getPersonaId(), this.getPlatform())
                },
                getStateFromStore: function () {
                  return {
                    stats: l.getStatsForPersona(this.getPersonaId()),
                    progression: l.getProgression(this.getPersonaId()),
                    missions: p.getAll(),
                    unlockables: u.getAll()
                  }
                },
                getPersonaId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                render: function () {
                  var e,
                  n,
                  a = this.state.stats ||
                  {
                  },
                  i = this.state.missions ||
                  {
                  },
                  s = this.state.unlockables ||
                  {
                  },
                  l = [];
                  for (e = 0; e < i.length; e++) for (n = 0; n < i.length; n++) if (
                    n !== e &&
                    i[n].meta.displayName.indexOf(i[e].meta.displayName) > - 1
                  ) {
                    l.push(i[e].meta.displayName);
                    break
                  }
                  var u = [];
                  i.forEach(
                    function (e) {
                      var r = !1;
                      if (
                        (a[e.meta.availableStat] || a[e.meta.completedFlag]) &&
                        'Reunion' !== e.meta.displayName &&
                        'Birdman\'s Route' !== e.meta.displayName &&
                        'Mischief Maker' !== e.meta.displayName &&
                        'Payback' !== e.meta.displayName
                      ) {
                        for (n = 0; n < l.length; n++) if (
                          e.meta.displayName.indexOf(l[n]) > - 1 &&
                          e.meta.displayName !== l[n]
                        ) {
                          r = !0;
                          break
                        }
                        if (!r) {
                          var i = 0,
                          o = 0,
                          p = e.meta.displayName.replace(/\s+/g, '').toLowerCase();
                          s.filter(
                            function (e) {
                              return e.id.toLowerCase().substr(e.id.length - p.length, e.id.length) === p
                            }
                          ).forEach(function (e) {
                            i += e.max,
                            a[e.id] &&
                            (o += a[e.id])
                          }),
                          u.push({
                            name: t(c(e.meta.displayName)),
                            current: o,
                            max: i,
                            time: a[e.meta.completedStat]
                          })
                        }
                      }
                    }
                  );
                  var p = this.state.progression &&
                  this.state.progression.story.sideMissions ||
                  0;
                  return r.createElement(
                    o,
                    {
                      title: t('ID_WEB_TITLE_STORY')
                    },
                    r.createElement('div', {
                      className: 'storyPanelName'
                    }, t('ID_WEB_TITLE_STORY')),
                    r.createElement(m, {
                      type: 'main',
                      data: u
                    }),
                    r.createElement(m, {
                      type: 'secondary',
                      data: p
                    })
                  )
                }
              }),
              m = r.createClass({
                displayName: 'MissionList',
                render: function () {
                  var e;
                  if ('main' === this.props.type) {
                    var n;
                    n = 0 === this.props.data.length ? r.createElement(
                      'div',
                      {
                        className: 'storyMission'
                      },
                      t('ID_WEB_STORY_MISSION_LOCKED')
                    ) : this.props.data.map(
                      function (e, t) {
                        return r.createElement(
                          'div',
                          {
                            className: 'storyMission',
                            key: 'mission' + t
                          },
                          r.createElement('div', {
                            className: 'storyName'
                          }, e.name),
                          r.createElement(
                            'div',
                            {
                              className: 'storyResult'
                            },
                            r.createElement('div', null, e.max ? e.current + '/' + e.max : '-'),
                            r.createElement(
                              'div',
                              null,
                              i(e.time) ? s.challengeScoreToRunTime(e.time) : s.challengeScoreToRunTime(0)
                            )
                          )
                        )
                      }
                    ),
                    e = r.createElement(
                      'div',
                      {
                        className: 'storyMain'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'storyTop'
                        },
                        r.createElement(
                          'div',
                          {
                            className: 'storyTitle'
                          },
                          t('ID_WEB_STORY_MAINMISSIONS')
                        ),
                        r.createElement(
                          'div',
                          {
                            className: 'storyLogos'
                          },
                          r.createElement('i', {
                            className: 'fa fa-bar-chart'
                          }),
                          r.createElement('i', {
                            className: 'fa fa-clock-o'
                          })
                        )
                      ),
                      n
                    )
                  } else e = r.createElement(
                    'div',
                    {
                      className: 'storySide'
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'storyTop'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'storyTitle'
                        },
                        t('ID_WEB_STORY_SIDEMISSIONS')
                      )
                    ),
                    r.createElement(
                      'div',
                      {
                        className: 'storyMission'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'storyName'
                        },
                        t('ID_WEB_STORY_SECONDARY_COMPLETION')
                      ),
                      r.createElement('div', {
                        className: 'storyResult'
                      }, this.props.data + '%')
                    )
                  );
                  return r.createElement('div', {
                    className: 'storyList'
                  }, e)
                }
              });
              e.exports = f
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(17),
              o = n(4),
              s = n(44),
              c = n(38),
              l = n(37),
              u = n(61),
              p = n(11),
              d = n(20);
              n(356);
              var f = r.createClass({
                displayName: 'UGCView',
                mixins: [
                  a.create(i, o, s, c)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired,
                  depth: r.PropTypes.number.isRequired,
                  count: r.PropTypes.number
                },
                getId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                getStateFromStore: function () {
                  var e = {};
                  return this.getId() !== o.getCurrentPersona().personaId ? e.ugc = {
                    timeTrials: c.getPublishedByCreator(this.getId()),
                    reachThises: s.getPublishedByCreator(this.getId())
                  }
                   : e.ugc = {
                    timeTrials: c.getByCreator(this.getId()),
                    reachThises: s.getByCreator(this.getId())
                  },
                  e
                },
                render: function () {
                  var e,
                  n = this,
                  a = [].concat(this.state.ugc.reachThises || [], this.state.ugc.timeTrials || []);
                  return e = a.length ? a.map(
                    function (e, t) {
                      return r.createElement(m, {
                        ugc: e,
                        platform: n.getPlatform(),
                        key: 'ugc-' + t
                      })
                    }
                  ) : r.createElement('div', null, t('ID_WEB_UGC_NOPUBLISHEDCHALLENGES')),
                  r.createElement(
                    p,
                    {
                      className: 'panel-ugc',
                      title: t('ID_WEB_TITLE_UGC')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'selected-area'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'ugc'
                        },
                        r.createElement('div', {
                          className: 'headline'
                        }, t('ID_WEB_UGC_USERCREATED')),
                        r.createElement('div', {
                          className: 'challenges'
                        }, e)
                      )
                    )
                  )
                }
              }),
              m = r.createClass({
                displayName: 'Challenge',
                render: function () {
                  var e;
                  e = null !== this.props.ugc.userStats ? 'TimeTrial' === this.props.ugc.meta.typeId ? l.challengeScoreToRunTime(this.props.ugc.userStats.finishTime) : l.formatTimeStamp(this.props.ugc.userStats.reachedAt) : '--';
                  var t;
                  return t = this.props.ugc.meta.published === !0 ? 'fa fa-eye' : 'fa fa-eye-slash',
                  r.createElement(
                    'div',
                    {
                      className: 'item-challenge'
                    },
                    r.createElement(
                      'img',
                      {
                        src: u.challenge(this.props.ugc.meta.typeId),
                        className: 'icon'
                      }
                    ),
                    r.createElement('i', {
                      className: t
                    }),
                    r.createElement(
                      'div',
                      {
                        className: 'information'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'item-challenge-name'
                        },
                        r.createElement(
                          d,
                          {
                            to: this.props.ugc.meta.typeId,
                            params: {
                              platform: this.props.platform,
                              userId: this.props.ugc.meta.ugcId.userId,
                              id: this.props.ugc.meta.ugcId.id
                            },
                            stack: !0
                          },
                          this.props.ugc.meta.name
                        )
                      ),
                      r.createElement('div', {
                        className: 'item-challenge-time'
                      }, e)
                    )
                  )
                }
              });
              e.exports = f
            }
          ).call(t, n(1))
        },
        function (e, t, n) {
          (
            function (t) {
              'use strict';
              var r = n(2),
              a = n(8),
              i = n(11),
              o = n(18),
              s = n(15);
              n(822);
              var c = r.createClass({
                displayName: 'WorldView',
                mixins: [
                  a.create(o)
                ],
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                componentDidMount: function () {
                  s.getPersonaStats(this.getPersonaId(), this.getPlatform())
                },
                getStateFromStore: function () {
                  return {
                    progression: o.getProgression(this.getPersonaId())
                  }
                },
                getPersonaId: function () {
                  return this.context.router.getCurrentParams().id
                },
                getPlatform: function () {
                  return this.context.router.getCurrentParams().platform
                },
                render: function () {
                  var e = this.state.progression ||
                  {
                  };
                  return r.createElement(
                    i,
                    {
                      title: t('ID_WEB_TITLE_WORLDPROGRESSION')
                    },
                    r.createElement(
                      'div',
                      {
                        className: 'worldPanelName'
                      },
                      t('ID_WEB_TITLE_WORLDPROGRESSION')
                    ),
                    r.createElement(
                      l,
                      {
                        type: 'objectives',
                        platform: this.getPlatform(),
                        data: e.objectives
                      }
                    ),
                    r.createElement(
                      l,
                      {
                        type: 'collectibles',
                        platform: this.getPlatform(),
                        data: e.collectibles
                      }
                    )
                  )
                }
              }),
              l = r.createClass({
                displayName: 'MissionList',
                contextTypes: {
                  router: r.PropTypes.func.isRequired
                },
                render: function () {
                  var e,
                  n;
                  e = t(
                    'objectives' === this.props.type ? 'ID_WEB_STATS_OBJECTIVES' : 'ID_WEB_STATS_COLLECTIBLES'
                  );
                  var a,
                  i,
                  o;
                  return n = this.props.data.map(
                    function (e, t) {
                      return i = e.current / e.max,
                      a = {
                        transform: 'scaleX(' + (void 0 !== i ? i : 0) + ')'
                      },
                      r.createElement(
                        'div',
                        {
                          className: 'worldMission',
                          key: 'mission' + t
                        },
                        r.createElement('div', {
                          className: 'progress',
                          style: a
                        }),
                        e.delinear ? e.delinear.map(
                          function (t) {
                            return o = {
                              left: t / e.max * 100 + '%'
                            },
                            r.createElement('div', {
                              key: 'delinear-' + t,
                              className: 'delinear',
                              style: o
                            })
                          }
                        ) : null,
                        r.createElement('div', {
                          className: 'worldName'
                        }, e.name),
                        r.createElement('div', {
                          className: 'worldResult'
                        }, e.current + ' / ' + e.max)
                      )
                    }
                  ),
                  r.createElement(
                    'div',
                    {
                      className: 'worldList'
                    },
                    r.createElement('div', {
                      className: 'worldTitle'
                    }, e),
                    r.createElement('div', null, n)
                  )
                }
              });
              e.exports = c
            }
          ).call(t, n(1))
        },
        ,
        function (e, t) {
          'use strict';
          t.__esModule = !0,
          t['default'] = function (e, t) {
            var n = {};
            for (var r in e) t.indexOf(r) >= 0 ||
            Object.prototype.hasOwnProperty.call(e, r) &&
            (n[r] = e[r]);
            return n
          }
        },
        function (e, t, n) {
          var r = n(40);
          e.exports = function (e) {
            return (r.JSON && r.JSON.stringify || JSON.stringify).apply(JSON, arguments)
          }
        },
        function (e, t, n) {
          n(768),
          e.exports = n(40).Object.assign
        },
        ,
        function (e, t, n) {
          n(769),
          e.exports = n(40).Object.keys
        },
        function (e, t, n) {
          n(355),
          n(771),
          n(773),
          n(770),
          e.exports = n(40).Promise
        },
        ,
        function (e, t) {
          e.exports = function () {
          }
        },
        function (e, t, n) {
          var r = n(96),
          a = n(46).document,
          i = r(a) &&
          r(a.createElement);
          e.exports = function (e) {
            return i ? a.createElement(e) : {
            }
          }
        },
        ,
        function (e, t, n) {
          var r = n(80),
          a = n(749),
          i = n(747),
          o = n(63),
          s = n(765),
          c = n(766);
          e.exports = function (e, t, n, l) {
            var u,
            p,
            d,
            f = c(e),
            m = r(n, l, t ? 2 : 1),
            h = 0;
            if ('function' != typeof f) throw TypeError(e + ' is not iterable!');
            if (i(f)) for (u = s(e.length); u > h; h++) t ? m(o(p = e[h]) [0], p[1]) : m(e[h]);
             else for (d = f.call(e); !(p = d.next()).done; ) a(d, m, p.value, t)
          }
        },
        ,
        function (e, t, n) {
          e.exports = n(46).document &&
          document.documentElement
        },
        function (e, t) {
          e.exports = function (e, t, n) {
            var r = void 0 === n;
            switch (t.length) {
              case 0:
                return r ? e() : e.call(n);
              case 1:
                return r ? e(t[0]) : e.call(n, t[0]);
              case 2:
                return r ? e(t[0], t[1]) : e.call(n, t[0], t[1]);
              case 3:
                return r ? e(t[0], t[1], t[2]) : e.call(n, t[0], t[1], t[2]);
              case 4:
                return r ? e(t[0], t[1], t[2], t[3]) : e.call(n, t[0], t[1], t[2], t[3])
            }
            return e.apply(n, t)
          }
        },
        function (e, t, n) {
          var r = n(82),
          a = n(33) ('iterator'),
          i = Array.prototype;
          e.exports = function (e) {
            return void 0 !== e &&
            (r.Array === e || i[a] === e)
          }
        },
        ,
        function (e, t, n) {
          var r = n(63);
          e.exports = function (e, t, n, a) {
            try {
              return a ? t(r(n) [0], n[1]) : t(n)
            } catch (i) {
              var o = e['return'];
              throw void 0 !== o &&
              r(o.call(e)),
              i
            }
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(29),
          a = n(149),
          i = n(97),
          o = {};
          n(147) (o, n(33) ('iterator'), function () {
            return this
          }),
          e.exports = function (e, t, n) {
            e.prototype = r.create(o, {
              next: a(1, n)
            }),
            i(e, t + ' Iterator')
          }
        },
        function (e, t, n) {
          var r = n(33) ('iterator'),
          a = !1;
          try {
            var i = [
              7
            ][r]();
            i['return'] = function () {
              a = !0
            },
            Array.from(i, function () {
              throw 2
            })
          } catch (o) {
          }
          e.exports = function (e, t) {
            if (!t && !a) return !1;
            var n = !1;
            try {
              var i = [
                7
              ],
              o = i[r]();
              o.next = function () {
                n = !0
              },
              i[r] = function () {
                return o
              },
              e(i)
            } catch (s) {
            }
            return n
          }
        },
        function (e, t) {
          e.exports = function (e, t) {
            return {
              value: t,
              done: !!e
            }
          }
        },
        ,
        function (e, t, n) {
          var r,
          a,
          i,
          o = n(46),
          s = n(764).set,
          c = o.MutationObserver ||
          o.WebKitMutationObserver,
          l = o.process,
          u = o.Promise,
          p = 'process' == n(79) (l),
          d = function () {
            var e,
            t,
            n;
            for (p && (e = l.domain) && (l.domain = null, e.exit()); r; ) t = r.domain,
            n = r.fn,
            t &&
            t.enter(),
            n(),
            t &&
            t.exit(),
            r = r.next;
            a = void 0,
            e &&
            e.enter()
          };
          if (p) i = function () {
            l.nextTick(d)
          };
           else if (c) {
            var f = 1,
            m = document.createTextNode('');
            new c(d).observe(m, {
              characterData: !0
            }),
            i = function () {
              m.data = f = - f
            }
          } else i = u &&
          u.resolve ? function () {
            u.resolve().then(d)
          }
           : function () {
            s.call(o, d)
          };
          e.exports = function (e) {
            var t = {
              fn: e,
              next: void 0,
              domain: p &&
              l.domain
            };
            a &&
            (a.next = t),
            r ||
            (r = t, i()),
            a = t
          }
        },
        function (e, t, n) {
          var r = n(29),
          a = n(353),
          i = n(349);
          e.exports = n(95) (
            function () {
              var e = Object.assign,
              t = {},
              n = {},
              r = Symbol(),
              a = 'abcdefghijklmnopqrst';
              return t[r] = 7,
              a.split('').forEach(function (e) {
                n[e] = e
              }),
              7 != e({
              }, t) [r] ||
              Object.keys(e({
              }, n)).join('') != a
            }
          ) ? function (e, t) {
            for (
              var n = a(e),
              o = arguments,
              s = o.length,
              c = 1,
              l = r.getKeys,
              u = r.getSymbols,
              p = r.isEnum;
              s > c;
            ) for (
              var d,
              f = i(o[c++]),
              m = u ? l(f).concat(u(f)) : l(f),
              h = m.length,
              _ = 0;
              h > _;
            ) p.call(f, d = m[_++]) &&
            (n[d] = f[d]);
            return n
          }
           : Object.assign
        },
        function (e, t, n) {
          var r = n(81),
          a = n(40),
          i = n(95);
          e.exports = function (e, t) {
            var n = (a.Object || {
            }) [e] ||
            Object[e],
            o = {};
            o[e] = t(n),
            r(r.S + r.F * i(function () {
              n(1)
            }), 'Object', o)
          }
        },
        function (e, t, n) {
          var r = n(150);
          e.exports = function (e, t) {
            for (var n in t) r(e, n, t[n]);
            return e
          }
        },
        function (e, t) {
          e.exports = Object.is ||
          function (e, t) {
            return e === t ? 0 !== e ||
            1 / e === 1 / t : e != e &&
            t != t
          }
        },
        function (e, t, n) {
          var r = n(29).getDesc,
          a = n(96),
          i = n(63),
          o = function (e, t) {
            if (i(e), !a(t) && null !== t) throw TypeError(t + ': can\'t set as prototype!')
          };
          e.exports = {
            set: Object.setPrototypeOf ||
            (
              '__proto__' in {}
              ? function (e, t, a) {
                try {
                  a = n(80) (Function.call, r(Object.prototype, '__proto__').set, 2),
                  a(e, []),
                  t = !(e instanceof Array)
                } catch (i) {
                  t = !0
                }
                return function (e, n) {
                  return o(e, n),
                  t ? e.__proto__ = n : a(e, n),
                  e
                }
              }({
              }, !1) : void 0
            ),
            check: o
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(40),
          a = n(29),
          i = n(94),
          o = n(33) ('species');
          e.exports = function (e) {
            var t = r[e];
            i &&
            t &&
            !t[o] &&
            a.setDesc(t, o, {
              configurable: !0,
              get: function () {
                return this
              }
            })
          }
        },
        function (e, t, n) {
          var r = n(63),
          a = n(144),
          i = n(33) ('species');
          e.exports = function (e, t) {
            var n,
            o = r(e).constructor;
            return void 0 === o ||
            void 0 == (n = r(o) [i]) ? t : a(n)
          }
        },
        function (e, t) {
          e.exports = function (e, t, n) {
            if (!(e instanceof t)) throw TypeError(n + ': use the \'new\' operator!');
            return e
          }
        },
        function (e, t, n) {
          var r = n(352),
          a = n(145);
          e.exports = function (e) {
            return function (t, n) {
              var i,
              o,
              s = String(a(t)),
              c = r(n),
              l = s.length;
              return 0 > c ||
              c >= l ? e ? '' : void 0 : (
                i = s.charCodeAt(c),
                55296 > i ||
                i > 56319 ||
                c + 1 === l ||
                (o = s.charCodeAt(c + 1)) < 56320 ||
                o > 57343 ? e ? s.charAt(c) : i : e ? s.slice(c, c + 2) : (i - 55296 << 10) + (o - 56320) + 65536
              )
            }
          }
        },
        function (e, t, n) {
          var r,
          a,
          i,
          o = n(80),
          s = n(746),
          c = n(745),
          l = n(741),
          u = n(46),
          p = u.process,
          d = u.setImmediate,
          f = u.clearImmediate,
          m = u.MessageChannel,
          h = 0,
          _ = {},
          g = 'onreadystatechange',
          v = function () {
            var e = + this;
            if (_.hasOwnProperty(e)) {
              var t = _[e];
              delete _[e],
              t()
            }
          },
          E = function (e) {
            v.call(e.data)
          };
          d &&
          f ||
          (
            d = function (e) {
              for (var t = [], n = 1; arguments.length > n; ) t.push(arguments[n++]);
              return _[++h] = function () {
                s('function' == typeof e ? e : Function(e), t)
              },
              r(h),
              h
            },
            f = function (e) {
              delete _[e]
            },
            'process' == n(79) (p) ? r = function (e) {
              p.nextTick(o(v, e, 1))
            }
             : m ? (a = new m, i = a.port2, a.port1.onmessage = E, r = o(i.postMessage, i, 1)) : u.addEventListener &&
            'function' == typeof postMessage &&
            !u.importScripts ? (
              r = function (e) {
                u.postMessage(e + '', '*')
              },
              u.addEventListener('message', E, !1)
            ) : r = g in l('script') ? function (e) {
              c.appendChild(l('script')) [g] = function () {
                c.removeChild(this),
                v.call(e)
              }
            }
             : function (e) {
              setTimeout(o(v, e, 1), 0)
            }
          ),
          e.exports = {
            set: d,
            clear: f
          }
        },
        function (e, t, n) {
          var r = n(352),
          a = Math.min;
          e.exports = function (e) {
            return e > 0 ? a(r(e), 9007199254740991) : 0
          }
        },
        function (e, t, n) {
          var r = n(348),
          a = n(33) ('iterator'),
          i = n(82);
          e.exports = n(40).getIteratorMethod = function (e) {
            return void 0 != e ? e[a] ||
            e['@@iterator'] ||
            i[r(e)] : void 0
          }
        },
        function (e, t, n) {
          'use strict';
          var r = n(740),
          a = n(752),
          i = n(82),
          o = n(98);
          e.exports = n(350) (
            Array,
            'Array',
            function (e, t) {
              this._t = o(e),
              this._i = 0,
              this._k = t
            },
            function () {
              var e = this._t,
              t = this._k,
              n = this._i++;
              return !e ||
              n >= e.length ? (this._t = void 0, a(1)) : 'keys' == t ? a(0, n) : 'values' == t ? a(0, e[n]) : a(0, [
                n,
                e[n]
              ])
            },
            'values'
          ),
          i.Arguments = i.Array,
          r('keys'),
          r('values'),
          r('entries')
        },
        function (e, t, n) {
          var r = n(81);
          r(r.S + r.F, 'Object', {
            assign: n(755)
          })
        },
        function (e, t, n) {
          var r = n(353);
          n(756) ('keys', function (e) {
            return function (t) {
              return e(r(t))
            }
          })
        },
        function (e, t, n) {
          'use strict';
          var r,
          a = n(29),
          i = n(148),
          o = n(46),
          s = n(80),
          c = n(348),
          l = n(81),
          u = n(96),
          p = n(63),
          d = n(144),
          f = n(762),
          m = n(743),
          h = n(759).set,
          _ = n(758),
          g = n(33) ('species'),
          v = n(761),
          E = n(754),
          I = 'Promise',
          b = o.process,
          y = 'process' == c(b),
          T = o[I],
          S = function (e) {
            var t = new T(function () {
            });
            return e &&
            (t.constructor = Object),
            T.resolve(t) === t
          },
          C = function () {
            function e(t) {
              var n = new T(t);
              return h(n, e.prototype),
              n
            }
            var t = !1;
            try {
              if (
                t = T &&
                T.resolve &&
                S(),
                h(e, T),
                e.prototype = a.create(T.prototype, {
                  constructor: {
                    value: e
                  }
                }),
                e.resolve(5).then(function () {
                }) instanceof e ||
                (t = !1),
                t &&
                n(94)
              ) {
                var r = !1;
                T.resolve(a.setDesc({
                }, 'then', {
                  get: function () {
                    r = !0
                  }
                })),
                t = r
              }
            } catch (i) {
              t = !1
            }
            return t
          }(),
          D = function (e, t) {
            return i &&
            e === T &&
            t === r ? !0 : _(e, t)
          },
          A = function (e) {
            var t = p(e) [g];
            return void 0 != t ? t : e
          },
          O = function (e) {
            var t;
            return u(e) &&
            'function' == typeof (t = e.then) ? t : !1
          },
          N = function (e) {
            var t,
            n;
            this.promise = new e(
              function (e, r) {
                if (void 0 !== t || void 0 !== n) throw TypeError('Bad Promise constructor');
                t = e,
                n = r
              }
            ),
            this.resolve = d(t),
            this.reject = d(n)
          },
          w = function (e) {
            try {
              e()
            } catch (t) {
              return {
                error: t
              }
            }
          },
          x = function (e, t) {
            if (!e.n) {
              e.n = !0;
              var n = e.c;
              E(
                function () {
                  for (
                    var r = e.v,
                    a = 1 == e.s,
                    i = 0,
                    s = function (t) {
                      var n,
                      i,
                      o = a ? t.ok : t.fail,
                      s = t.resolve,
                      c = t.reject;
                      try {
                        o ? (
                          a ||
                          (e.h = !0),
                          n = o === !0 ? r : o(r),
                          n === t.promise ? c(TypeError('Promise-chain cycle')) : (i = O(n)) ? i.call(n, s, c) : s(n)
                        ) : c(r)
                      } catch (l) {
                        c(l)
                      }
                    };
                    n.length > i;
                  ) s(n[i++]);
                  n.length = 0,
                  e.n = !1,
                  t &&
                  setTimeout(
                    function () {
                      var t,
                      n,
                      a = e.p;
                      R(a) &&
                      (
                        y ? b.emit('unhandledRejection', r, a) : (t = o.onunhandledrejection) ? t({
                          promise: a,
                          reason: r
                        }) : (n = o.console) &&
                        n.error &&
                        n.error('Unhandled promise rejection', r)
                      ),
                      e.a = void 0
                    },
                    1
                  )
                }
              )
            }
          },
          R = function (e) {
            var t,
            n = e._d,
            r = n.a ||
            n.c,
            a = 0;
            if (n.h) return !1;
            for (; r.length > a; ) if (t = r[a++], t.fail || !R(t.promise)) return !1;
            return !0
          },
          L = function (e) {
            var t = this;
            t.d ||
            (t.d = !0, t = t.r || t, t.v = e, t.s = 2, t.a = t.c.slice(), x(t, !0))
          },
          P = function (e) {
            var t,
            n = this;
            if (!n.d) {
              n.d = !0,
              n = n.r ||
              n;
              try {
                if (n.p === e) throw TypeError('Promise can\'t be resolved itself');
                (t = O(e)) ? E(
                  function () {
                    var r = {
                      r: n,
                      d: !1
                    };
                    try {
                      t.call(e, s(P, r, 1), s(L, r, 1))
                    } catch (a) {
                      L.call(r, a)
                    }
                  }
                ) : (n.v = e, n.s = 1, x(n, !1))
              } catch (r) {
                L.call({
                  r: n,
                  d: !1
                }, r)
              }
            }
          };
          C ||
          (
            T = function (e) {
              d(e);
              var t = this._d = {
                p: f(this, T, I),
                c: [],
                a: void 0,
                s: 0,
                d: !1,
                v: void 0,
                h: !1,
                n: !1
              };
              try {
                e(s(P, t, 1), s(L, t, 1))
              } catch (n) {
                L.call(t, n)
              }
            },
            n(757) (
              T.prototype,
              {
                then: function (e, t) {
                  var n = new N(v(this, T)),
                  r = n.promise,
                  a = this._d;
                  return n.ok = 'function' == typeof e ? e : !0,
                  n.fail = 'function' == typeof t &&
                  t,
                  a.c.push(n),
                  a.a &&
                  a.a.push(n),
                  a.s &&
                  x(a, !1),
                  r
                },
                'catch': function (e) {
                  return this.then(void 0, e)
                }
              }
            )
          ),
          l(l.G + l.W + l.F * !C, {
            Promise: T
          }),
          n(97) (T, I),
          n(760) (I),
          r = n(40) [I],
          l(
            l.S + l.F * !C,
            I,
            {
              reject: function (e) {
                var t = new N(this),
                n = t.reject;
                return n(e),
                t.promise
              }
            }
          ),
          l(
            l.S + l.F * (!C || S(!0)),
            I,
            {
              resolve: function (e) {
                if (e instanceof T && D(e.constructor, this)) return e;
                var t = new N(this),
                n = t.resolve;
                return n(e),
                t.promise
              }
            }
          ),
          l(
            l.S + l.F * !(C && n(751) (function (e) {
              T.all(e) ['catch'](function () {
              })
            })),
            I,
            {
              all: function (e) {
                var t = A(this),
                n = new N(t),
                r = n.resolve,
                i = n.reject,
                o = [],
                s = w(
                  function () {
                    m(e, !1, o.push, o);
                    var n = o.length,
                    s = Array(n);
                    n ? a.each.call(
                      o,
                      function (e, a) {
                        var o = !1;
                        t.resolve(e).then(function (e) {
                          o ||
                          (o = !0, s[a] = e, --n || r(s))
                        }, i)
                      }
                    ) : r(s)
                  }
                );
                return s &&
                i(s.error),
                n.promise
              },
              race: function (e) {
                var t = A(this),
                n = new N(t),
                r = n.reject,
                a = w(
                  function () {
                    m(e, !1, function (e) {
                      t.resolve(e).then(n.resolve, r)
                    })
                  }
                );
                return a &&
                r(a.error),
                n.promise
              }
            }
          )
        },
        function (e, t, n) {
          'use strict';
          var r = n(763) (!0);
          n(350) (
            String,
            'String',
            function (e) {
              this._t = String(e),
              this._i = 0
            },
            function () {
              var e,
              t = this._t,
              n = this._i;
              return n >= t.length ? {
                value: void 0,
                done: !0
              }
               : (e = r(t, n), this._i += e.length, {
                value: e,
                done: !1
              })
            }
          )
        },
        ,
        function (e, t, n) {
          n(767);
          var r = n(82);
          r.NodeList = r.HTMLCollection = r.Array
        },
        ,
        function (e, t) {
          e.exports = function () {
            var e = [];
            return e.toString = function () {
              for (var e = [], t = 0; t < this.length; t++) {
                var n = this[t];
                n[2] ? e.push('@media ' + n[2] + '{' + n[1] + '}') : e.push(n[1])
              }
              return e.join('')
            },
            e.i = function (t, n) {
              'string' == typeof t &&
              (t = [
                [null,
                t,
                '']
              ]);
              for (var r = {}, a = 0; a < this.length; a++) {
                var i = this[a][0];
                'number' == typeof i &&
                (r[i] = !0)
              }
              for (a = 0; a < t.length; a++) {
                var o = t[a];
                'number' == typeof o[0] &&
                r[o[0]] ||
                (n && !o[2] ? o[2] = n : n && (o[2] = '(' + o[2] + ') and (' + n + ')'), e.push(o))
              }
            },
            e
          }
        },
        function (e, t) {
          !function () {
            'use strict';
            function e(e) {
              u.push(e),
              1 === u.length &&
              d()
            }
            function t() {
              for (; u.length; ) u[0](),
              u.shift()
            }
            function n(e) {
              this.a = f,
              this.b = void 0,
              this.f = [];
              var t = this;
              try {
                e(function (e) {
                  i(t, e)
                }, function (e) {
                  o(t, e)
                })
              } catch (n) {
                o(t, n)
              }
            }
            function r(e) {
              return new n(function (t, n) {
                n(e)
              })
            }
            function a(e) {
              return new n(function (t) {
                t(e)
              })
            }
            function i(e, t) {
              if (e.a === f) {
                if (t === e) throw new TypeError('Promise settled with itself.');
                var n = !1;
                try {
                  var r = t &&
                  t.then;
                  if (null !== t && 'object' == typeof t && 'function' == typeof r) return void r.call(t, function (t) {
                    n ||
                    i(e, t),
                    n = !0
                  }, function (t) {
                    n ||
                    o(e, t),
                    n = !0
                  })
                } catch (a) {
                  return void (n || o(e, a))
                }
                e.a = 0,
                e.b = t,
                s(e)
              }
            }
            function o(e, t) {
              if (e.a === f) {
                if (t === e) throw new TypeError('Promise settled with itself.');
                e.a = 1,
                e.b = t,
                s(e)
              }
            }
            function s(t) {
              e(
                function () {
                  if (t.a !== f) for (; t.f.length; ) {
                    var e = t.f.shift(),
                    n = e[0],
                    r = e[1],
                    a = e[2],
                    e = e[3];
                    try {
                      0 === t.a ? a('function' == typeof n ? n.call(void 0, t.b) : t.b) : 1 === t.a &&
                      ('function' == typeof r ? a(r.call(void 0, t.b)) : e(t.b))
                    } catch (i) {
                      e(i)
                    }
                  }
                }
              )
            }
            function c(e) {
              return new n(
                function (t, n) {
                  function r(n) {
                    return function (r) {
                      o[n] = r,
                      i += 1,
                      i === e.length &&
                      t(o)
                    }
                  }
                  var i = 0,
                  o = [];
                  0 === e.length &&
                  t(o);
                  for (var s = 0; s < e.length; s += 1) a(e[s]).c(r(s), n)
                }
              )
            }
            function l(e) {
              return new n(function (t, n) {
                for (var r = 0; r < e.length; r += 1) a(e[r]).c(t, n)
              })
            }
            var u = [];
            if (window.MutationObserver) {
              var p = document.createElement('div');
              new MutationObserver(t).observe(p, {
                attributes: !0
              });
              var d = function () {
                p.setAttribute('x', 0)
              }
            } else d = function () {
              setTimeout(t)
            };
            var f = 2;
            n.prototype.g = function (e) {
              return this.c(void 0, e)
            },
            n.prototype.c = function (e, t) {
              var r = this;
              return new n(function (n, a) {
                r.f.push([e,
                t,
                n,
                a]),
                s(r)
              })
            },
            window.Promise ||
            (
              window.Promise = n,
              window.Promise.resolve = a,
              window.Promise.reject = r,
              window.Promise.race = l,
              window.Promise.all = c,
              window.Promise.prototype.then = n.prototype.c,
              window.Promise.prototype['catch'] = n.prototype.g
            )
          }(),
          function () {
            'use strict';
            function e(e) {
              document.body ? e() : document.addEventListener('DOMContentLoaded', e)
            }
            function t(e) {
              this.a = document.createElement('div'),
              this.a.setAttribute('aria-hidden', 'true'),
              this.a.appendChild(document.createTextNode(e)),
              this.b = document.createElement('span'),
              this.c = document.createElement('span'),
              this.h = document.createElement('span'),
              this.g = document.createElement('span'),
              this.f = - 1,
              this.b.style.cssText = 'display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;',
              this.c.style.cssText = 'display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;',
              this.g.style.cssText = 'display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;',
              this.h.style.cssText = 'display:inline-block;width:200%;height:200%;font-size:16px;',
              this.b.appendChild(this.h),
              this.c.appendChild(this.g),
              this.a.appendChild(this.b),
              this.a.appendChild(this.c)
            }
            function n(e, t, n) {
              e.a.style.cssText = 'min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font-size:100px;font-family:' + t + ';' + n
            }
            function r(e) {
              var t = e.a.offsetWidth,
              n = t + 100;
              return e.g.style.width = n + 'px',
              e.c.scrollLeft = n,
              e.b.scrollLeft = e.b.scrollWidth + 100,
              e.f !== t ? (e.f = t, !0) : !1
            }
            function a(e, t) {
              e.b.addEventListener('scroll', function () {
                r(e) &&
                null !== e.a.parentNode &&
                t(e.f)
              }, !1),
              e.c.addEventListener('scroll', function () {
                r(e) &&
                null !== e.a.parentNode &&
                t(e.f)
              }, !1),
              r(e)
            }
            function i(e, t) {
              var n = t ||
              {
              };
              this.family = e,
              this.style = n.style ||
              'normal',
              this.variant = n.variant ||
              'normal',
              this.weight = n.weight ||
              'normal',
              this.stretch = n.stretch ||
              'normal',
              this.featureSettings = n.featureSettings ||
              'normal',
              this.a = null
            }
            var o = null;
            i.prototype.b = function (r, i) {
              var s = r ||
              'BESbswy',
              c = i ||
              3000,
              l = 'font-style:' + this.style + ';font-variant:' + this.variant + ';font-weight:' + this.weight + ';font-stretch:' + this.stretch + ';font-feature-settings:' + this.featureSettings + ';-moz-font-feature-settings:' + this.featureSettings + ';-webkit-font-feature-settings:' + this.featureSettings + ';',
              u = document.createElement('div'),
              p = new t(s),
              d = new t(s),
              f = new t(s),
              m = - 1,
              h = - 1,
              _ = - 1,
              g = - 1,
              v = - 1,
              E = - 1,
              I = this;
              return u.dir = 'ltr',
              new Promise(
                function (t, r) {
                  function i() {
                    null !== u.parentNode &&
                    u.parentNode.removeChild(u)
                  }
                  function s() {
                    if (
                      ( - 1 !== m && - 1 !== h || - 1 !== m && - 1 !== _ || - 1 !== h && - 1 !== _) &&
                      (m === h || m === _ || h === _)
                    ) {
                      if (null === o) {
                        var e = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);
                        o = !!e &&
                        (
                          536 > parseInt(e[1], 10) ||
                          536 === parseInt(e[1], 10) &&
                          11 >= parseInt(e[2], 10)
                        )
                      }
                      o ? m === g &&
                      h === g &&
                      _ === g ||
                      m === v &&
                      h === v &&
                      _ === v ||
                      m === E &&
                      h === E &&
                      _ === E ||
                      (i(), clearTimeout(I.a), t(I)) : (i(), clearTimeout(I.a), t(I))
                    }
                  }
                  e(
                    function () {
                      function e() {
                        if (Date.now() - t >= c) i(),
                        r(I);
                         else {
                          var n = document.hidden;
                          !0 !== n &&
                          void 0 !== n ||
                          (m = p.a.offsetWidth, h = d.a.offsetWidth, _ = f.a.offsetWidth, s()),
                          I.a = setTimeout(e, 50)
                        }
                      }
                      var t = Date.now();
                      n(p, 'sans-serif', l),
                      n(d, 'serif', l),
                      n(f, 'monospace', l),
                      u.appendChild(p.a),
                      u.appendChild(d.a),
                      u.appendChild(f.a),
                      document.body.appendChild(u),
                      g = p.a.offsetWidth,
                      v = d.a.offsetWidth,
                      E = f.a.offsetWidth,
                      e(),
                      a(p, function (e) {
                        m = e,
                        s()
                      }),
                      n(p, '"' + I.family + '",sans-serif', l),
                      a(d, function (e) {
                        h = e,
                        s()
                      }),
                      n(d, '"' + I.family + '",serif', l),
                      a(f, function (e) {
                        _ = e,
                        s()
                      }),
                      n(f, '"' + I.family + '",monospace', l)
                    }
                  )
                }
              )
            },
            window.FontFaceObserver = i,
            window.FontFaceObserver.prototype.check = i.prototype.b
          }(),
          e.exports = window.FontFaceObserver
        },
        ,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        151,
        function (e, t, n) {
          var r;
          !function () {
            'use strict'; /**
		 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
		 *
		 * @codingstandard ftlabs-jsv2
		 * @copyright The Financial Times Limited [All Rights Reserved]
		 * @license MIT License (see LICENSE.txt)
		 */
            function a(e, t) {
              function n(e, t) {
                return function () {
                  return e.apply(t, arguments)
                }
              }
              var r;
              if (
                t = t ||
                {
                },
                this.trackingClick = !1,
                this.trackingClickStart = 0,
                this.targetElement = null,
                this.touchStartX = 0,
                this.touchStartY = 0,
                this.lastTouchIdentifier = 0,
                this.touchBoundary = t.touchBoundary ||
                10,
                this.layer = e,
                this.tapDelay = t.tapDelay ||
                200,
                this.tapTimeout = t.tapTimeout ||
                700,
                !a.notNeeded(e)
              ) {
                for (
                  var i = [
                    'onMouse',
                    'onClick',
                    'onTouchStart',
                    'onTouchMove',
                    'onTouchEnd',
                    'onTouchCancel'
                  ],
                  s = this,
                  c = 0,
                  l = i.length;
                  l > c;
                  c++
                ) s[i[c]] = n(s[i[c]], s);
                o &&
                (
                  e.addEventListener('mouseover', this.onMouse, !0),
                  e.addEventListener('mousedown', this.onMouse, !0),
                  e.addEventListener('mouseup', this.onMouse, !0)
                ),
                e.addEventListener('click', this.onClick, !0),
                e.addEventListener('touchstart', this.onTouchStart, !1),
                e.addEventListener('touchmove', this.onTouchMove, !1),
                e.addEventListener('touchend', this.onTouchEnd, !1),
                e.addEventListener('touchcancel', this.onTouchCancel, !1),
                Event.prototype.stopImmediatePropagation ||
                (
                  e.removeEventListener = function (t, n, r) {
                    var a = Node.prototype.removeEventListener;
                    'click' === t ? a.call(e, t, n.hijacked || n, r) : a.call(e, t, n, r)
                  },
                  e.addEventListener = function (t, n, r) {
                    var a = Node.prototype.addEventListener;
                    'click' === t ? a.call(
                      e,
                      t,
                      n.hijacked ||
                      (n.hijacked = function (e) {
                        e.propagationStopped ||
                        n(e)
                      }),
                      r
                    ) : a.call(e, t, n, r)
                  }
                ),
                'function' == typeof e.onclick &&
                (
                  r = e.onclick,
                  e.addEventListener('click', function (e) {
                    r(e)
                  }, !1),
                  e.onclick = null
                )
              }
            }
            var i = navigator.userAgent.indexOf('Windows Phone') >= 0,
            o = navigator.userAgent.indexOf('Android') > 0 &&
            !i,
            s = /iP(ad|hone|od)/.test(navigator.userAgent) &&
            !i,
            c = s &&
            /OS 4_\d(_\d)?/.test(navigator.userAgent),
            l = s &&
            /OS [6-7]_\d/.test(navigator.userAgent),
            u = navigator.userAgent.indexOf('BB10') > 0;
            a.prototype.needsClick = function (e) {
              switch (e.nodeName.toLowerCase()) {
                case 'button':
                case 'select':
                case 'textarea':
                  if (e.disabled) return !0;
                  break;
                case 'input':
                  if (s && 'file' === e.type || e.disabled) return !0;
                  break;
                case 'label':
                case 'iframe':
                case 'video':
                  return !0
              }
              return /\bneedsclick\b/.test(e.className)
            },
            a.prototype.needsFocus = function (e) {
              switch (e.nodeName.toLowerCase()) {
                case 'textarea':
                  return !0;
                case 'select':
                  return !o;
                case 'input':
                  switch (e.type) {
                    case 'button':
                    case 'checkbox':
                    case 'file':
                    case 'image':
                    case 'radio':
                    case 'submit':
                      return !1
                  }
                  return !e.disabled &&
                  !e.readOnly;
                default:
                  return /\bneedsfocus\b/.test(e.className)
              }
            },
            a.prototype.sendClick = function (e, t) {
              var n,
              r;
              document.activeElement &&
              document.activeElement !== e &&
              document.activeElement.blur(),
              r = t.changedTouches[0],
              n = document.createEvent('MouseEvents'),
              n.initMouseEvent(
                this.determineEventType(e),
                !0,
                !0,
                window,
                1,
                r.screenX,
                r.screenY,
                r.clientX,
                r.clientY,
                !1,
                !1,
                !1,
                !1,
                0,
                null
              ),
              n.forwardedTouchEvent = !0,
              e.dispatchEvent(n)
            },
            a.prototype.determineEventType = function (e) {
              return o &&
              'select' === e.tagName.toLowerCase() ? 'mousedown' : 'click'
            },
            a.prototype.focus = function (e) {
              var t;
              s &&
              e.setSelectionRange &&
              0 !== e.type.indexOf('date') &&
              'time' !== e.type &&
              'month' !== e.type ? (t = e.value.length, e.setSelectionRange(t, t)) : e.focus()
            },
            a.prototype.updateScrollParent = function (e) {
              var t,
              n;
              if (t = e.fastClickScrollParent, !t || !t.contains(e)) {
                n = e;
                do {
                  if (n.scrollHeight > n.offsetHeight) {
                    t = n,
                    e.fastClickScrollParent = n;
                    break
                  }
                  n = n.parentElement
                } while (n)
              }
              t &&
              (t.fastClickLastScrollTop = t.scrollTop)
            },
            a.prototype.getTargetElementFromEventTarget = function (e) {
              return e.nodeType === Node.TEXT_NODE ? e.parentNode : e
            },
            a.prototype.onTouchStart = function (e) {
              var t,
              n,
              r;
              if (e.targetTouches.length > 1) return !0;
              if (
                t = this.getTargetElementFromEventTarget(e.target),
                n = e.targetTouches[0],
                s
              ) {
                if (r = window.getSelection(), r.rangeCount && !r.isCollapsed) return !0;
                if (!c) {
                  if (n.identifier && n.identifier === this.lastTouchIdentifier) return e.preventDefault(),
                  !1;
                  this.lastTouchIdentifier = n.identifier,
                  this.updateScrollParent(t)
                }
              }
              return this.trackingClick = !0,
              this.trackingClickStart = e.timeStamp,
              this.targetElement = t,
              this.touchStartX = n.pageX,
              this.touchStartY = n.pageY,
              e.timeStamp - this.lastClickTime < this.tapDelay &&
              e.preventDefault(),
              !0
            },
            a.prototype.touchHasMoved = function (e) {
              var t = e.changedTouches[0],
              n = this.touchBoundary;
              return Math.abs(t.pageX - this.touchStartX) > n ||
              Math.abs(t.pageY - this.touchStartY) > n
            },
            a.prototype.onTouchMove = function (e) {
              return this.trackingClick ? (
                (
                  this.targetElement !== this.getTargetElementFromEventTarget(e.target) ||
                  this.touchHasMoved(e)
                ) &&
                (this.trackingClick = !1, this.targetElement = null),
                !0
              ) : !0
            },
            a.prototype.findControl = function (e) {
              return void 0 !== e.control ? e.control : e.htmlFor ? document.getElementById(e.htmlFor) : e.querySelector(
                'button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea'
              )
            },
            a.prototype.onTouchEnd = function (e) {
              var t,
              n,
              r,
              a,
              i,
              u = this.targetElement;
              if (!this.trackingClick) return !0;
              if (e.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0,
              !0;
              if (e.timeStamp - this.trackingClickStart > this.tapTimeout) return !0;
              if (
                this.cancelNextClick = !1,
                this.lastClickTime = e.timeStamp,
                n = this.trackingClickStart,
                this.trackingClick = !1,
                this.trackingClickStart = 0,
                l &&
                (
                  i = e.changedTouches[0],
                  u = document.elementFromPoint(i.pageX - window.pageXOffset, i.pageY - window.pageYOffset) ||
                  u,
                  u.fastClickScrollParent = this.targetElement.fastClickScrollParent
                ),
                r = u.tagName.toLowerCase(),
                'label' === r
              ) {
                if (t = this.findControl(u)) {
                  if (this.focus(u), o) return !1;
                  u = t
                }
              } else if (this.needsFocus(u)) return e.timeStamp - n > 100 ||
              s &&
              window.top !== window &&
              'input' === r ? (this.targetElement = null, !1) : (
                this.focus(u),
                this.sendClick(u, e),
                s &&
                'select' === r ||
                (this.targetElement = null, e.preventDefault()),
                !1
              );
              return s &&
              !c &&
              (
                a = u.fastClickScrollParent,
                a &&
                a.fastClickLastScrollTop !== a.scrollTop
              ) ? !0 : (
                this.needsClick(u) ||
                (e.preventDefault(), this.sendClick(u, e)),
                !1
              )
            },
            a.prototype.onTouchCancel = function () {
              this.trackingClick = !1,
              this.targetElement = null
            },
            a.prototype.onMouse = function (e) {
              return this.targetElement ? e.forwardedTouchEvent ? !0 : e.cancelable &&
              (!this.needsClick(this.targetElement) || this.cancelNextClick) ? (
                e.stopImmediatePropagation ? e.stopImmediatePropagation() : e.propagationStopped = !0,
                e.stopPropagation(),
                e.preventDefault(),
                !1
              ) : !0 : !0
            },
            a.prototype.onClick = function (e) {
              var t;
              return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : 'submit' === e.target.type &&
              0 === e.detail ? !0 : (t = this.onMouse(e), t || (this.targetElement = null), t)
            },
            a.prototype.destroy = function () {
              var e = this.layer;
              o &&
              (
                e.removeEventListener('mouseover', this.onMouse, !0),
                e.removeEventListener('mousedown', this.onMouse, !0),
                e.removeEventListener('mouseup', this.onMouse, !0)
              ),
              e.removeEventListener('click', this.onClick, !0),
              e.removeEventListener('touchstart', this.onTouchStart, !1),
              e.removeEventListener('touchmove', this.onTouchMove, !1),
              e.removeEventListener('touchend', this.onTouchEnd, !1),
              e.removeEventListener('touchcancel', this.onTouchCancel, !1)
            },
            a.notNeeded = function (e) {
              var t,
              n,
              r,
              a;
              if ('undefined' == typeof window.ontouchstart) return !0;
              if (n = + (/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [
                ,
                0
              ]) [1]) {
                if (!o) return !0;
                if (t = document.querySelector('meta[name=viewport]')) {
                  if ( - 1 !== t.content.indexOf('user-scalable=no')) return !0;
                  if (
                    n > 31 &&
                    document.documentElement.scrollWidth <= window.outerWidth
                  ) return !0
                }
              }
              if (
                u &&
                (
                  r = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/),
                  r[1] >= 10 &&
                  r[2] >= 3 &&
                  (t = document.querySelector('meta[name=viewport]'))
                )
              ) {
                if ( - 1 !== t.content.indexOf('user-scalable=no')) return !0;
                if (document.documentElement.scrollWidth <= window.outerWidth) return !0
              }
              return 'none' === e.style.msTouchAction ||
              'manipulation' === e.style.touchAction ? !0 : (
                a = + (/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [
                  ,
                  0
                ]) [1],
                a >= 27 &&
                (
                  t = document.querySelector('meta[name=viewport]'),
                  t &&
                  (
                    - 1 !== t.content.indexOf('user-scalable=no') ||
                    document.documentElement.scrollWidth <= window.outerWidth
                  )
                ) ? !0 : 'none' === e.style.touchAction ||
                'manipulation' === e.style.touchAction
              )
            },
            a.attach = function (e, t) {
              return new a(e, t)
            },
            r = function () {
              return a
            }.call(t, n, t, e),
            !(void 0 !== r && (e.exports = r))
          }()
        },
        function (e, t, n) {
          e.exports = n.p + 'AD.78caa5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AE.00b785.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AF.ccb89d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AG.259146.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AI.d0cf65.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AL.1f071b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AM.0def72.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AN.935d81.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AO.c8cbfa.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AQ.cb9bae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AR.d2783b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AS.e7bbbe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AT.d44c0d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AU.5ec686.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AW.34d5cf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AX.8bd6f7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'AZ.c606dc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BA.07d23a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BB.324776.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BD.b1d658.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BE.dff1ce.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BF.9b1b93.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BG.1768b4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BH.dc354f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BI.247ef6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BJ.2a7572.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BL.9871eb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BM.7c24ee.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BN.84b82a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BO.6ff3c2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BR.db4a3b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BS.e53e1d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BT.3228ab.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BW.416cbc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BY.496869.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'BZ.006dbc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CA.d7f2c8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CC.86c88a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CD.dd5d30.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CF.722c94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CG.1f1465.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CH.628f57.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CI.88d1d9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CK.f0c3bf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CL.8a4655.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CM.b5c6ad.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CN.78fc5b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CO.d3be46.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CR.e3a374.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CU.20367b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CV.f97bd0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CW.f8a71c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CX.e78ccd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CY.732c15.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'CZ.126cdc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DE.32aa0e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DJ.04dd36.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DK.665c34.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DM.7c357e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DO.d6a320.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'DZ.493738.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'EC.ca74b0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'EE.799d26.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'EG.987ab9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'EH.c16005.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ER.0bb9ff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ES.5dfdd1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ET.d6d844.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'EU.22627d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FI.0248c8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FJ.50f297.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FK.603cb3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FM.a0b531.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FO.591646.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'FR.36fa74.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GA.36a8d1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GB.8e58fc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GD.cc04ca.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GE.593f75.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GG.21af90.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GH.ba1ae7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GI.8fcc44.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GL.8b6fe9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GM.59063b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GN.68904a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GQ.afa77d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GR.7b5367.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GS.c58292.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GT.68ecab.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GU.ea6dfb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GW.3856f0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'GY.c2ed94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'HK.b2b314.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'HN.df4771.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'HR.dd80ca.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'HT.0f71f8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'HU.84609b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IC.ecbfa8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ID.a61778.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IE.db667d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IL.f5acf6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IM.495493.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IN.75857a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IQ.1af18c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IR.7aaf1b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IS.58aaf5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'IT.435152.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'JE.25685d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'JM.e3a3b7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'JO.484b8e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'JP.6d0ef4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KE.f49dfe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KG.0b76a1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KH.1638fb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KI.c6c2ff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KM.e9b14d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KN.6df614.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KP.ed028f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KR.898b94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KW.c135fc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KY.4a128f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'KZ.a98c82.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LA.ccb240.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LB.3e380d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LC.f81e45.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LI.e74fbf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LK.9155ee.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LR.942a98.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LS.683458.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LT.613a1c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LU.3539fe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LV.4398c7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'LY.665c2f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MA.133e1a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MC.a61778.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MD.abcf6f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ME.83f4fc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MF.2b6a98.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MG.00d319.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MH.a1a297.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MK.c12bd7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ML.a8b9a0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MM.e1db18.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MN.ae711e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MO.fd536e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MP.db789d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MQ.18f79e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MR.29419b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MS.6bca4b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MT.673271.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MU.9c4901.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MV.411f94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MW.19aa84.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MX.adb547.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MY.c41f6f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'MZ.2e2bc3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NA.dce41e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NC.e9b243.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NE.a6b739.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NF.5a36a8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NG.8571ec.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NI.405cfd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NL.f3b330.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NO.0114e6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NP.5ddda0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NR.1309e2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NU.1b3423.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'NZ.2825e0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'OM.7dcf4a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PA.8d86de.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PE.f53af6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PF.b20346.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PG.0ba458.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PH.7bf6e7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PK.ea3c57.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PL.a6d299.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PN.c18f46.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PR.a1300a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PS.769538.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PT.cde677.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PW.636141.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'PY.c16833.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'QA.741f35.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'RO.a0b4bc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'RS.d38065.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'RU.1aa8f5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'RW.374d7d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SA.2d6b1f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SB.3eb06f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SC.f8813f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SD.dc330d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SE.21a188.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SG.3cda7c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SH.0aee29.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SI.777883.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SK.f68d55.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SL.68fc48.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SM.584a9a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SN.86bb1e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SO.c1dae5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SR.9092bc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SS.0bb001.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ST.d91008.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SV.88b698.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SY.ad2609.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'SZ.e4d2e0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TC.8b5868.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TD.9bf76e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TF.083147.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TG.dfcd8c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TH.205911.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TJ.a857b9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TK.ada9b9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TL.b17119.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TM.ed1891.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TN.d8cf33.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TO.86e7b5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TR.7bd837.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TT.1a2bc1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TV.35fad5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TW.1a49d4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'TZ.d8b7af.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'UA.5803ea.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'UG.0bfe4f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'US.20cdd5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'UY.27ec70.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'UZ.05d933.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VA.aee5c5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VC.c35205.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VE.aaac8d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VG.b65035.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VI.2b2155.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VN.c0edff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'VU.c9cd9b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'WF.c0cc67.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'WS.2436e7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'YE.989d62.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'YT.fa4074.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ZA.8bc274.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ZM.78a4d5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ZW.c5be61.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_abkhazia.e55977.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_basque-country.b931fb.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_british-antarctic-territory.c9bc79.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_commonwealth.08ec94.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_england.31a896.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_gosquared.5885d9.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_kosovo.818762.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_mars.c1fe0f.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_nagorno-karabakh.605066.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_nato.4e4940.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_northern-cyprus.5112a3.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_olympics.85b588.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_red-cross.44a0de.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_scotland.bc7972.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_somaliland.2a4ed8.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_south-ossetia.0dccdb.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_united-nations.f379c6.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_unknown.e7f448.png'
        },
        function (e, t, n) {
          e.exports = n.p + '_wales.7f115c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-1.fb6385.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-2.9c3fe9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-3.c94f0a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-4.03a25b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-5.8d31f3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-1.768f52.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-2.f1b9b5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-3.579402.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-4.d839e4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-5.a3e079.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'red-1.e06851.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'red-2.23446a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'red-3.d04738.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'red-4.edc4c3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'red-5.824b53.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'silver-1.45f93b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'silver-2.73d203.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'silver-3.a2bb3b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'silver-4.6b85b1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'silver-5.f52371.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'white-1.ace2cb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'white-2.27d375.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'white-3.e8104e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'white-4.21ba06.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'blocks_01.e212f0.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'blocks_02.74cdb4.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'blocks_03.112a9c.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_01.029cde.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_02.2709de.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_03.de3a3a.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_04.62d5e6.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_05.469a13.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_06.1f6638.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_07.8520d1.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'crystaline_08.c4d9e7.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'grid_01.00cd46.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'grid_02.b45bb1.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'grid_03.e4c873.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'grid_04.188ad5.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'grid_05.b3e3b0.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'hex_01.8af6d6.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'hex_02.a03543.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'hex_03.a2fedc.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'organic_01.46e675.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'organic_02.a2bfd5.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'organic_03.518b4c.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'organic_04.6f8b06.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'organic_05.cc1913.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'preorder_combat_bg.d53686.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'preorder_speedrunner_bg.e3be7f.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'renewed_faith_reward_bg.562848.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'spheres_01.6aa9ad.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'spheres_02.fb2233.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'spheres_03.764146.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + 'spheres_04.6135c8.jpg'
        },
        function (e, t, n) {
          e.exports = n.p + '3-stars.21e3e4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'anchor.355620.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'angel-wings.0fd19c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'battlefield-dog-tag.6578ad.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bee.1ee00e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'big-thick-book.542bbf.png';
        },
        function (e, t, n) {
          e.exports = n.p + 'black-november.eba1a4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-Interceptor.c04ff5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-apex.3f0662.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-chaser.68a650.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-deer.17c8af.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-longranger.c1bd2b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-lowflier.89f6ca.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-predator.4376c9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-stalker.7097e5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'butterfly.6b2edc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'c4.8ea386.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cat-profile.4e259e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'chains.88881b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'che-noah.5a22d5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cheetah.8898aa.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'claw-marks.49a349.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'closed-fist-revolutionary.9e3a2d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'closed-fist.9b2ab4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cowboyhat-and-bandana.ece469.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'crocodile.4fa263.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery.2fe571.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'destoyed-security-camera.5ba350.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'dice-logo.73fcba.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'double-dragon.4cd2f6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ea-frostbite.b5f755.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ea-logo.3f3878.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'falling-dominoes.437de0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'feather-2.308cc2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'feather.8c1baa.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'fist.67b5ad.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'fly.bbecb5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'geococcyx.5bf996.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ghost.24207f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gift.4dc4ee.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-pieces.1c6e00.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'hood.5e11b6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'huma-persepolis.7ef3b9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'hunter.b857fd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ikarus_portrait.6fd102.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'jacknife.b74afe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'july-revolution.95ada8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'key.6c9659.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'leon.95a15c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'lion.0d2a8a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'me-logo.ff7514.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'mercury-god-helmet.a417f0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'mountain-peak.34943c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'open-hand-with-droplet.63310b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pickpocketing-hand.b4f747.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pigeon.76aa1b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pith-helmet.92bb65.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'queen.b6b54b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ram.2992ec.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'rat.b8823f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'rising-sun.7c4b0b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-enforcer-helmet.820b7d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-glass-panel.7dda6d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-light-bulb.c3567b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-oldschool-footprint.b93a1b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-protector-helmet.b1686d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-shock-protector-helmet.9579fc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-turret.d6074c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered_senteniel_armor.c4f780.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered_senteniel_helmet.6794ac.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shatteret-padlock.2c740e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shatteret-shard-building.b41fbf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'singe-bird-wing.d305a1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'small-book.758fc6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'spider.906150.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'stallion.d5a056.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'target.3b6f94.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thumbs-crossed.90c7b2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thumbs-up.781d05.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'tiger.1e56ff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'two-pigeons.72e60e.png'
        },
        function (e, t, n) {
          e.exports = n.p + '3-stars.74e810.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'anchor.0c529d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'angel-wings.882af3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'battlefield-dog-tag.767a89.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bee.1846b2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'big-thick-book.10ee6f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'black-november.3fe64a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-Interceptor.e4dab9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-apex.2f1080.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-chaser.bf196b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-deer.9f148c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-longranger.a0c9c3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-lowflier.651d87.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-predator.43d3d1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'bop-stalker.f951a8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'butterfly.d920b8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'c4.52d443.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cat-profile.0dcc9c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'chains.86473e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'che-noah.e9cb31.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cheetah.5b4e00.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'claw-marks.f127fe.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'closed-fist-revolutionary.40402c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'closed-fist.368aa6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cowboyhat-and-bandana.b6b18c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'crocodile.6f1087.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'delivery.bf1bdf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'destoyed-security-camera.7b86a5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'dice-logo.3fa23a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'double-dragon.eab703.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ea-frostbite.e4a746.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ea-logo.054e23.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'falling-dominoes.774dd7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'feather-2.75e83a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'feather.576e02.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'fist.3d0d3b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'fly.ae77e4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'geococcyx.c9df18.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ghost.c570d0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'gift.2c7525.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'glass-pieces.a07128.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'hood.bf489d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'huma-persepolis.8e48da.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'hunter.69cfcc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ikarus_portrait.de7424.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'jacknife.71912f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'july-revolution.0158a0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'key.f5d73b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'leon.84c177.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'lion.e1e7a0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'me-logo.a1a4c9.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'mercury-god-helmet.40d2c2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'mountain-peak.6a614c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'open-hand-with-droplet.1082d2.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pickpocketing-hand.d18328.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pigeon.3f32db.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pith-helmet.8d3168.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'queen.64bc27.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ram.096499.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'rat.bb60af.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'rising-sun.b1ec35.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-enforcer-helmet.846e8b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-glass-panel.56344f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-light-bulb.41880b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-oldschool-footprint.597ebc.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-protector-helmet.59e855.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-shock-protector-helmet.055468.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered-turret.63b27c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered_senteniel_armor.7c1247.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shattered_senteniel_helmet.ac1ec1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shatteret-padlock.5de42b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'shatteret-shard-building.7582e5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'singe-bird-wing.76d702.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'small-book.0e9d9d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'spider.17fc5e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'stallion.13801d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'target.dc5c4e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thumbs-crossed.f22a99.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'thumbs-up.bb475f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'tiger.bc22b6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'two-pigeons.b7cd3b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Arrow.d9b942.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Circle.46dad6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Diamond.6fbd86.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Hexagon.813de3.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Octagon.d0c97f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Pentagon.cc21f4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Shield.764035.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Square.5eefe4.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Star.2ed74e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Basic_Triangle.d3922e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Arrow.435e4a.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Blades.910235.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Buzzsaw.ede51f.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Circle.8a85ac.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Hexagon.88e1e0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Nova_Prime.bf1935.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Pentagon.558f86.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Prism.0f912b.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Razor_Claw.e88fb1.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Shield.86b4f8.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Shift.33243e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Shinobi.e751bd.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_Shuriken.a1e899.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Elite_The_Hood.233a56.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Arrow.5d32f6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Celtic.ef5ea6.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Circle.49c706.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Cross.219156.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Crusher.0dfa8d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Frame.00d461.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Hexagon.9509d5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Hexangle.f7e925.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Invincible.a4620e.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Nova.4497f0.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Shield.15719d.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Square.4307bb.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Triburst.e994e5.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'Evolved_Triforce.9ead50.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'acb_pg.4f74bf.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'cero.d5ee90.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'dejus_16.a20656.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'esrb_rp.fb4a40.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'logo-dice.6c7b08.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'logo-ea.06a1fa.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'logo-frostbite.46ae98.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'pegi_16.c4b206.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'ru_18.517af7.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'usk_rp.82ccff.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'info.d5510c.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'legend.bc1043.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'logo-red-small.37f3ae.png'
        },
        function (e, t, n) {
          e.exports = n.p + 'misc_fragiledelivery.369011.jpg'
        },
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        function (e, t) {
          'use strict';
          function n(e) {
            if (null == e) throw new TypeError('Object.assign cannot be called with null or undefined');
            return Object(e)
          }
          e.exports = Object.assign ||
          function (e, t) {
            for (var r, a, i = n(e), o = 1; o < arguments.length; o++) {
              r = arguments[o],
              a = Object.keys(Object(r));
              for (var s = 0; s < a.length; s++) i[a[s]] = r[a[s]]
            }
            return i
          }
        },
        5,
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
          }
          t.__esModule = !0;
          var a = n(1452),
          i = 'ID_',
          o = function () {
            function e() {
              r(this, e),
              this._callbacks = {},
              this._isDispatching = !1,
              this._isHandled = {},
              this._isPending = {},
              this._lastID = 1
            }
            return e.prototype.register = function (e) {
              var t = i + this._lastID++;
              return this._callbacks[t] = e,
              t
            },
            e.prototype.unregister = function (e) {
              this._callbacks[e] ? void 0 : a(!1),
              delete this._callbacks[e]
            },
            e.prototype.waitFor = function (e) {
              this._isDispatching ? void 0 : a(!1);
              for (var t = 0; t < e.length; t++) {
                var n = e[t];
                this._isPending[n] ? this._isHandled[n] ? void 0 : a(!1) : (this._callbacks[n] ? void 0 : a(!1), this._invokeCallback(n))
              }
            },
            e.prototype.dispatch = function (e) {
              this._isDispatching ? a(!1) : void 0,
              this._startDispatching(e);
              try {
                for (var t in this._callbacks) this._isPending[t] ||
                this._invokeCallback(t)
              } finally {
                this._stopDispatching()
              }
            },
            e.prototype.isDispatching = function () {
              return this._isDispatching
            },
            e.prototype._invokeCallback = function (e) {
              this._isPending[e] = !0,
              this._callbacks[e](this._pendingPayload),
              this._isHandled[e] = !0
            },
            e.prototype._startDispatching = function (e) {
              for (var t in this._callbacks) this._isPending[t] = !1,
              this._isHandled[t] = !1;
              this._pendingPayload = e,
              this._isDispatching = !0
            },
            e.prototype._stopDispatching = function () {
              delete this._pendingPayload,
              this._isDispatching = !1
            },
            e
          }();
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          var r = function (e, t, n, r, a, i, o, s) {
            if (!e) {
              var c;
              if (void 0 === t) c = new Error(
                'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.'
              );
               else {
                var l = [
                  n,
                  r,
                  a,
                  i,
                  o,
                  s
                ],
                u = 0;
                c = new Error(
                  'Invariant Violation: ' + t.replace(/%s/g, function () {
                    return l[u++]
                  })
                )
              }
              throw c.framesToPop = 1,
              c
            }
          };
          e.exports = r
        },
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        function (e, t) {
          e.exports = {
            gateway: {
              apiUrl: 'https://pamplona-gw-event.test.ops.dice.se/jsonrpc/test_event/stest_default'
            }
          }
        },
        function (e, t) {
          e.exports = {
            analytics: {
              gaId: 'UA-59360365-1',
              enabled: !0
            },
            telemetry: {
              enabled: !0
            }
          }
        },
        function (e, t) {
          e.exports = {
            requireLogin: !1,
            ignoreEmbeddedLoginErrors: !0,
            gateway: {
              apiUrl: 'https://pamplona-gw.test.ops.dice.se/jsonrpc/test_default/stest_default',
              logEnabled: !1,
              devQueryParams: !1
            },
            origin: {
              loginUrl: 'https://accounts.int.ea.com',
              redirectUrl: 'http://develop.pamplona.test.ops.dice.se'
            },
            analytics: {
              gaId: 'UA-59360365-1',
              enabled: !1,
              logEnabled: !1
            },
            telemetry: {
              enabled: !1
            },
            hockeyapp: {
              appId: {
                Android: '4bcee81da7ce0eeaf0d7d6ac84fccfaa',
                iOS: 'f58c50d7a4d0921d71d2d19a24687cbb'
              }
            },
            sharing: {
              enabled: !0,
              shareUrl: 'http://www.mirrorsedge.com/map'
            },
            map: {
              enable3dMap: !0
            },
            ugc: {
              maxRecommendations: 100
            },
            websiteUrl: 'http://www.mirrorsedge.com',
            map2dTilesUrl: 'http://eaassets-a.akamaihd.net/mecompanionprod/2dmap/3/{z}/{x}/{y}.jpg',
            map2dUndergroundTilesUrl: 'http://eaassets-a.akamaihd.net/mecompanionprod/2dmap/3_underground/{z}/{x}/{y}.jpg',
            devTools: !0,
            devCity: !1
          }
        },
        function (e, t) {
          e.exports = {
            gateway: {
              apiUrl: 'https://pamplona-gw-lt.test.ops.dice.se/jsonrpc/test_stress/stest_default'
            },
            origin: {
              loginUrl: 'https://accounts.ears.lt.ea.com'
            },
            analytics: {
              enabled: !1
            }
          }
        },
        function (e, t) {
          e.exports = {
            gateway: {
              apiUrl: 'https://mec-gw.ops.dice.se/jsonrpc/prod_default/prod_default'
            },
            origin: {
              loginUrl: 'https://accounts.ea.com',
              redirectUrl: 'http://mec.ops.dice.se'
            },
            analytics: {
              gaId: 'UA-59360365-1',
              enabled: !0
            },
            telemetry: {
              enabled: !0
            },
            sharing: {
              enabled: !0,
              shareUrl: 'http://www.mirrorsedge.com/map'
            }
          }
        },
        function (e, t) {
          e.exports = {
            gateway: {
              apiUrl: 'https://pamplona-gw-scert.test.ops.dice.se/jsonrpc/test_scert/scert_default'
            }
          }
        },
        function (e, t) {
          e.exports = [
            {
              id: '20',
              displayName: 'OWPh3Delivery01',
              availableStat: 'pf_OWPh3Delivery01_Available',
              timerStat: 'pf_OWPh3Delivery01_Timer',
              completedStat: 'pf_OWPh3Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh3Delivery01',
              transform: {
                x: '-314.138062',
                y: '63.99998',
                z: '390.630066'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '21',
              displayName: 'OWPh3Delivery02',
              availableStat: 'pf_OWPh3Delivery02_Available',
              timerStat: 'pf_OWPh3Delivery02_Timer',
              completedStat: 'pf_OWPh3Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh3Delivery02',
              transform: {
                x: '-240.395065',
                y: '60.0999832',
                z: '169.899124'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '22',
              displayName: 'OWPh2Delivery01',
              availableStat: 'pf_OWPh2Delivery01_Available',
              timerStat: 'pf_OWPh2Delivery01_Timer',
              completedStat: 'pf_OWPh2Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh2Delivery01',
              transform: {
                x: '-33.3164864',
                y: '53.76993',
                z: '35.30719'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '23',
              displayName: 'OWPh2Delivery02',
              availableStat: 'pf_OWPh2Delivery02_Available',
              timerStat: 'pf_OWPh2Delivery02_Timer',
              completedStat: 'pf_OWPh2Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh2Delivery02',
              transform: {
                x: '-5.968646',
                y: '67.80963',
                z: '144.030457'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '24',
              displayName: 'OWPh2Delivery03',
              availableStat: 'pf_OWPh2Delivery03_Available',
              timerStat: 'pf_OWPh2Delivery03_Timer',
              completedStat: 'pf_OWPh2Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh2Delivery03',
              transform: {
                x: '162.7776',
                y: '61.4400635',
                z: '16.1734028'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '25',
              displayName: 'OWPh4Delivery01',
              availableStat: 'pf_OWPh4Delivery01_Available',
              timerStat: 'pf_OWPh4Delivery01_Timer',
              completedStat: 'pf_OWPh4Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh4Delivery01',
              transform: {
                x: '205.555756',
                y: '79.38702',
                z: '236.5933'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '26',
              displayName: 'OWPh4Delivery02',
              availableStat: 'pf_OWPh4Delivery02_Available',
              timerStat: 'pf_OWPh4Delivery02_Timer',
              completedStat: 'pf_OWPh4Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh4Delivery02',
              transform: {
                x: '303.378937',
                y: '68.23325',
                z: '508.306519'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '27',
              displayName: 'OWPh4Delivery03',
              availableStat: 'pf_OWPh4Delivery03_Available',
              timerStat: 'pf_OWPh4Delivery03_Timer',
              completedStat: 'pf_OWPh4Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh4Delivery03',
              transform: {
                x: '322.852081',
                y: '72.4921341',
                z: '176.810059'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '34',
              displayName: 'OWPh3Delivery03',
              availableStat: 'pf_OWPh3Delivery03_Available',
              timerStat: 'pf_OWPh3Delivery03_Timer',
              completedStat: 'pf_OWPh3Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh3Delivery03',
              transform: {
                x: '-464.970917',
                y: '52.47999',
                z: '170.817551'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '98',
              displayName: 'OW Opp DtPh2 02',
              availableStat: 'pf_OW_Opp_DtPh2_02_Available',
              timerStat: 'pf_OW_Opp_DtPh2_02_Timer',
              completedStat: 'pf_OW_Opp_DtPh2_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh2_02',
              transform: {
                x: '-153.37645',
                y: '61.433876',
                z: '46.5128365'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '99',
              displayName: 'OW Opp DtPh2 03',
              availableStat: 'pf_OW_Opp_DtPh2_03_Available',
              timerStat: 'pf_OW_Opp_DtPh2_03_Timer',
              completedStat: 'pf_OW_Opp_DtPh2_03_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh2_03',
              transform: {
                x: '2.464325',
                y: '57.514576',
                z: '231.568283'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '100',
              displayName: 'OW Opp DtPh2 04',
              availableStat: 'pf_OW_Opp_DtPh2_04_Available',
              timerStat: 'pf_OW_Opp_DtPh2_04_Timer',
              completedStat: 'pf_OW_Opp_DtPh2_04_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh2_04',
              transform: {
                x: '135.80455',
                y: '55.0312538',
                z: '79.975174'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '102',
              displayName: 'OW Opp DtPh2 06',
              availableStat: 'pf_OW_Opp_DtPh2_06_Available',
              timerStat: 'pf_OW_Opp_DtPh2_06_Timer',
              completedStat: 'pf_OW_Opp_DtPh2_06_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh2_06',
              transform: {
                x: '-1.02477765',
                y: '53.7499924',
                z: '-15.1354637'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '104',
              displayName: 'OW Opp DtPh3 02',
              availableStat: 'pf_OW_Opp_DtPh3_02_Available',
              timerStat: 'pf_OW_Opp_DtPh3_02_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_02',
              transform: {
                x: '-377.361176',
                y: '39.6875038',
                z: '207.807083'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '106',
              displayName: 'OW Opp DtPh3 04',
              availableStat: 'pf_OW_Opp_DtPh3_04_Available',
              timerStat: 'pf_OW_Opp_DtPh3_04_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_04_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_04',
              transform: {
                x: '-236.932526',
                y: '63.97263',
                z: '407.5637'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '107',
              displayName: 'OW Opp DtPh3 05',
              availableStat: 'pf_OW_Opp_DtPh3_05_Available',
              timerStat: 'pf_OW_Opp_DtPh3_05_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_05_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_05',
              transform: {
                x: '-459.902954',
                y: '56.42183',
                z: '284.205475'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '109',
              displayName: 'OW Opp AncPh4 01',
              availableStat: 'pf_OW_Opp_AncPh4_01_Available',
              timerStat: 'pf_OW_Opp_AncPh4_01_Timer',
              completedStat: 'pf_OW_Opp_AncPh4_01_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh4_01',
              transform: {
                x: '296.654755',
                y: '69.12499',
                z: '366.905029'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '110',
              displayName: 'OW Opp AncPh4 02',
              availableStat: 'pf_OW_Opp_AncPh4_02_Available',
              timerStat: 'pf_OW_Opp_AncPh4_02_Timer',
              completedStat: 'pf_OW_Opp_AncPh4_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh4_02',
              transform: {
                x: '310.4036',
                y: '69.967514',
                z: '472.958069'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '113',
              displayName: 'OW Opp AncPh4 05',
              availableStat: 'pf_OW_Opp_AncPh4_05_Available',
              timerStat: 'pf_OW_Opp_AncPh4_05_Timer',
              completedStat: 'pf_OW_Opp_AncPh4_05_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh4_05',
              transform: {
                x: '292.289948',
                y: '79.0625',
                z: '145.447372'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '118',
              displayName: 'OW Opp AncPh5 03',
              availableStat: 'pf_OW_Opp_AncPh5_03_Available',
              timerStat: 'pf_OW_Opp_AncPh5_03_Timer',
              completedStat: 'pf_OW_Opp_AncPh5_03_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh5_03',
              transform: {
                x: '387.868652',
                y: '61.9693',
                z: '92.59244'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '119',
              displayName: 'OW Opp AncPh5 04',
              availableStat: 'pf_OW_Opp_AncPh5_04_Available',
              timerStat: 'pf_OW_Opp_AncPh5_04_Timer',
              completedStat: 'pf_OW_Opp_AncPh5_04_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh5_04',
              transform: {
                x: '572.421143',
                y: '72.882515',
                z: '20.5302162'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '122',
              displayName: 'OWPh5Delivery01',
              availableStat: 'pf_OWPh5Delivery01_Available',
              timerStat: 'pf_OWPh5Delivery01_Timer',
              completedStat: 'pf_OWPh5Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh5Delivery01',
              transform: {
                x: '528.395752',
                y: '57.2835236',
                z: '132.686188'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '123',
              displayName: 'OWPh5Delivery02',
              availableStat: 'pf_OWPh5Delivery02_Available',
              timerStat: 'pf_OWPh5Delivery02_Timer',
              completedStat: 'pf_OWPh5Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh5Delivery02',
              transform: {
                x: '501.603546',
                y: '61.4375076',
                z: '34.9880562'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '124',
              displayName: 'OWPh5Delivery03',
              availableStat: 'pf_OWPh5Delivery03_Available',
              timerStat: 'pf_OWPh5Delivery03_Timer',
              completedStat: 'pf_OWPh5Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh5Delivery03',
              transform: {
                x: '700.475342',
                y: '93.7939758',
                z: '-65.10303'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '125',
              displayName: 'OWPh6Delivery01',
              availableStat: 'pf_OWPh6Delivery01_Available',
              timerStat: 'pf_OWPh6Delivery01_Timer',
              completedStat: 'pf_OWPh6Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh6Delivery01',
              transform: {
                x: '-493.2621',
                y: '62.2399864',
                z: '436.811432'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '126',
              displayName: 'OWPh6Delivery02',
              availableStat: 'pf_OWPh6Delivery02_Available',
              timerStat: 'pf_OWPh6Delivery02_Timer',
              completedStat: 'pf_OWPh6Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh6Delivery02',
              transform: {
                x: '-348.1782',
                y: '21.2793427',
                z: '759.838135'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '127',
              displayName: 'OWPh6Delivery03',
              availableStat: 'pf_OWPh6Delivery03_Available',
              timerStat: 'pf_OWPh6Delivery03_Timer',
              completedStat: 'pf_OWPh6Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh6Delivery03',
              transform: {
                x: '-280.70105',
                y: '-38.37812',
                z: '694.4074'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '128',
              displayName: 'OWPh7Delivery01',
              availableStat: 'pf_OWPh7Delivery01_Available',
              timerStat: 'pf_OWPh7Delivery01_Timer',
              completedStat: 'pf_OWPh7Delivery01_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh7Delivery01',
              transform: {
                x: '765.786255',
                y: '73.3296',
                z: '-46.3565445'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '129',
              displayName: 'OWPh7Delivery02',
              availableStat: 'pf_OWPh7Delivery02_Available',
              timerStat: 'pf_OWPh7Delivery02_Timer',
              completedStat: 'pf_OWPh7Delivery02_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh7Delivery02',
              transform: {
                x: '1200.96753',
                y: '52.2173462',
                z: '-104.97113'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '130',
              displayName: 'OWPh7Delivery03',
              availableStat: 'pf_OWPh7Delivery03_Available',
              timerStat: 'pf_OWPh7Delivery03_Timer',
              completedStat: 'pf_OWPh7Delivery03_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_OWPh7Delivery03',
              transform: {
                x: '922.3193',
                y: '54.4333954',
                z: '-397.4486'
              },
              description: {
                activeName: 'ID_INT_DELIVERY_LABEL',
                activeDescription: 'ID_INT_DELIVERY_TEXT',
                availableName: 'ID_INT_DELIVERY_LABEL',
                availableDescription: 'ID_INT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '131',
              displayName: 'OW Opp CtPh6 01',
              availableStat: 'pf_OW_Opp_CtPh6_01_Available',
              timerStat: 'pf_OW_Opp_CtPh6_01_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_01_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_01',
              transform: {
                x: '-314.558746',
                y: '-45.9949036',
                z: '761.89325'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '132',
              displayName: 'OW Opp CtPh6 02',
              availableStat: 'pf_OW_Opp_CtPh6_02_Available',
              timerStat: 'pf_OW_Opp_CtPh6_02_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_02',
              transform: {
                x: '-406.4805',
                y: '54.54874',
                z: '493.508942'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '133',
              displayName: 'OW Opp CtPh6 03',
              availableStat: 'pf_OW_Opp_CtPh6_03_Available',
              timerStat: 'pf_OW_Opp_CtPh6_03_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_03_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_03',
              transform: {
                x: '-516.4493',
                y: '53.6000023',
                z: '332.750824'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '134',
              displayName: 'OW Opp CtPh6 04',
              availableStat: 'pf_OW_Opp_CtPh6_04_Available',
              timerStat: 'pf_OW_Opp_CtPh6_04_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_04_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_04',
              transform: {
                x: '-265.038269',
                y: '-0.114988312',
                z: '40.38738'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '137',
              displayName: 'OW Opp VwPh7 01',
              availableStat: 'pf_OW_Opp_VwPh7_01_Available',
              timerStat: 'pf_OW_Opp_VwPh7_01_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_01_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_01',
              transform: {
                x: '1162.7677',
                y: '58.8750267',
                z: '-277.223877'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '138',
              displayName: 'OW Opp VwPh7 02',
              availableStat: 'pf_OW_Opp_VwPh7_02_Available',
              timerStat: 'pf_OW_Opp_VwPh7_02_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_02',
              transform: {
                x: '722.719543',
                y: '87.73692',
                z: '-97.2235947'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '139',
              displayName: 'OW Opp VwPh7 03',
              availableStat: 'pf_OW_Opp_VwPh7_03_Available',
              timerStat: 'pf_OW_Opp_VwPh7_03_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_03_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_03',
              transform: {
                x: '901.1975',
                y: '77.4399948',
                z: '-65.1931458'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '140',
              displayName: 'OW Opp VwPh7 04',
              availableStat: 'pf_OW_Opp_VwPh7_04_Available',
              timerStat: 'pf_OW_Opp_VwPh7_04_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_04_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_04',
              transform: {
                x: '726.943054',
                y: '71.20843',
                z: '-155.4958'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '141',
              displayName: 'OW Opp VwPh7 05',
              availableStat: 'pf_OW_Opp_VwPh7_05_Available',
              timerStat: 'pf_OW_Opp_VwPh7_05_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_05_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_05',
              transform: {
                x: '1144.21887',
                y: '58.8798256',
                z: '-205.824051'
              },
              description: {
                activeName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                availableName: 'ID_OPP_COVERT_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_COVERT_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '144',
              displayName: 'OW Opp DtPh3 07',
              availableStat: 'pf_OW_Opp_DtPh3_07_Available',
              timerStat: 'pf_OW_Opp_DtPh3_07_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_07_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_07',
              transform: {
                x: '-73.13109',
                y: '52.23455',
                z: '306.594574'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '145',
              displayName: 'OW Opp DtPh3 08',
              availableStat: 'pf_OW_Opp_DtPh3_08_Available',
              timerStat: 'pf_OW_Opp_DtPh3_08_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_08_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_08',
              transform: {
                x: '-19.340786',
                y: '43.5237465',
                z: '588.9145'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            },
            {
              id: '146',
              displayName: 'OW Opp AncPh4 08',
              availableStat: 'pf_OW_Opp_AncPh4_08_Available',
              timerStat: 'pf_OW_Opp_AncPh4_08_Timer',
              completedStat: 'pf_OW_Opp_AncPh4_08_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh4_08',
              transform: {
                x: '402.7772',
                y: '67.2149',
                z: '471.440155'
              },
              description: {
                activeName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                availableName: 'ID_OPP_FRAGILE_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_FRAGILE_DELIVERY_TEXT',
                objectives: null
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            {
              meta: {
                name: 'ID_MAP_LABEL_CHARTER_HILL',
                transform: {
                  x: - 238,
                  y: 60,
                  z: 56
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_TRIUMVIRATE_DRIVE',
                transform: {
                  x: - 280,
                  y: 60,
                  z: 283
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_CONCORD_PLAZA',
                transform: {
                  x: 111,
                  y: 60,
                  z: 24
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_EDEN_VILLAGE',
                transform: {
                  x: 350,
                  y: 60,
                  z: 75
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_OCEAN_PIER',
                transform: {
                  x: 810,
                  y: 60,
                  z: 78
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_REGATTA_BAY',
                transform: {
                  x: 930,
                  y: 60,
                  z: - 325
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_CRYSTAL_VALLEY',
                transform: {
                  x: 250,
                  y: 30,
                  z: 250
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_SHIMMERING_HEIGHTS',
                transform: {
                  x: 200,
                  y: 30,
                  z: 400
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_RESIDENTIAL_DEVELOPMENT_ZONE_G',
                transform: {
                  x: - 387,
                  y: 10,
                  z: 691
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_TRAINSTATION',
                transform: {
                  x: - 25,
                  y: 60,
                  z: 370
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_CENTURIAN_YARDS',
                transform: {
                  x: - 84,
                  y: 60,
                  z: 52
                }
              }
            },
            {
              meta: {
                name: 'ID_MAP_LABEL_THESHARD',
                transform: {
                  x: 759,
                  y: 60,
                  z: - 2906
                }
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            [8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              8,
              8,
              8,
              8,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              5,
              5,
              5,
              5,
              5,
              5,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              1,
              0,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              1,
              1,
              1,
              1,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              2,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              7,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              2,
              2,
              2,
              2,
              2,
              2,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              8,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              7,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              8,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              7,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              6,
              6,
              8,
              8,
              8,
              7,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              7,
              0,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ],
            [
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8,
              8
            ]
          ];
        },
        function (e, t) {
          e.exports = [
            {
              id: '103',
              displayName: 'OW Opp DtPh3 01',
              availableStat: 'pf_OW_Opp_DtPh3_01_Available',
              timerStat: 'pf_OW_Opp_DtPh3_01_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_01_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_01',
              transform: {
                x: '-366.843964',
                y: '49.6000061',
                z: '336.2264'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '105',
              displayName: 'OW Opp DtPh3 03',
              availableStat: 'pf_OW_Opp_DtPh3_03_Available',
              timerStat: 'pf_OW_Opp_DtPh3_03_Timer',
              completedStat: 'pf_OW_Opp_DtPh3_03_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_DtPh3_03',
              transform: {
                x: '-202.05217',
                y: '54.46749',
                z: '270.447'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '114',
              displayName: 'OW Opp AncPh4 06',
              availableStat: 'pf_OW_Opp_AncPh4_06_Available',
              timerStat: 'pf_OW_Opp_AncPh4_06_Timer',
              completedStat: 'pf_OW_Opp_AncPh4_06_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh4_06',
              transform: {
                x: '215.003738',
                y: '79.68753',
                z: '251.598679'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '116',
              displayName: 'OW Opp AncPh5 01',
              availableStat: 'pf_OW_Opp_AncPh5_01_Available',
              timerStat: 'pf_OW_Opp_AncPh5_01_Timer',
              completedStat: 'pf_OW_Opp_AncPh5_01_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh5_01',
              transform: {
                x: '530.8441',
                y: '64.03029',
                z: '55.21906'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '117',
              displayName: 'OW Opp AncPh5 02',
              availableStat: 'pf_OW_Opp_AncPh5_02_Available',
              timerStat: 'pf_OW_Opp_AncPh5_02_Timer',
              completedStat: 'pf_OW_Opp_AncPh5_02_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_AncPh5_02',
              transform: {
                x: '382.882263',
                y: '74.37501',
                z: '209.628677'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '135',
              displayName: 'OW Opp CtPh6 05',
              availableStat: 'pf_OW_Opp_CtPh6_05_Available',
              timerStat: 'pf_OW_Opp_CtPh6_05_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_05_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_05',
              transform: {
                x: '-448.7332',
                y: '66.09876',
                z: '470.511658'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '136',
              displayName: 'OW Opp CtPh6 06',
              availableStat: 'pf_OW_Opp_CtPh6_06_Available',
              timerStat: 'pf_OW_Opp_CtPh6_06_Timer',
              completedStat: 'pf_OW_Opp_CtPh6_06_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_CtPh6_06',
              transform: {
                x: '-391.738983',
                y: '9.8',
                z: '730.007263'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '142',
              displayName: 'OW Opp VwPh7 06',
              availableStat: 'pf_OW_Opp_VwPh7_06_Available',
              timerStat: 'pf_OW_Opp_VwPh7_06_Timer',
              completedStat: 'pf_OW_Opp_VwPh7_06_CompletedTime',
              completedFlag: 'pf_MiscCompleted_OW_Opp_VwPh7_06',
              transform: {
                x: '1195.98376',
                y: '56.64003',
                z: '-353.438965'
              },
              description: {
                activeName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                activeDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                availableName: 'ID_OPP_DIVERSION_DELIVERY_LABEL',
                availableDescription: 'ID_OPP_DIVERSION_DELIVERY_TEXT',
                objectives: [
                  'ID_OPP_DIVERSION_DELIVERY_OBJECTIVE_0'
                ]
              }
            }
          ]
        },
        function (e, t) {
          e.exports = {
            detail: [
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_MAIN',
                tags: [
                  'bop-chaser',
                  'singe-bird-wing',
                  'pigeon',
                  'shattered-glass-panel',
                  'shattered-protector-helmet',
                  'c4',
                  'gift',
                  'fly',
                  'black-november',
                  'shattered-turret',
                  'july-revolution',
                  'claw-marks',
                  'cat-profile',
                  'che-noah',
                  'shatteret-shard-building',
                  'shatteret-padlock',
                  'double-dragon'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_MASTERY',
                tags: [
                  'angel-wings',
                  'rising-sun',
                  'butterfly',
                  'open-hand-with-droplet'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_COLLECTIBLE',
                tags: [
                  'key',
                  'spider',
                  'two-pigeons',
                  'delivery',
                  'geococcyx',
                  'shattered-light-bulb',
                  'closed-fist-revolutionary',
                  'jacknife',
                  'pickpocketing-hand',
                  'destoyed-security-camera',
                  'anchor',
                  'battlefield-dog-tag',
                  'big-thick-book',
                  'cowboyhat-and-bandana',
                  'leon',
                  'mercury-god-helmet',
                  'mountain-peak',
                  'rat',
                  'thumbs-up'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_SOCIAL',
                tags: [
                  'ghost'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_EXCLUSIVE',
                tags: [
                  'cheetah',
                  'fist',
                  'shattered-oldschool-footprint',
                  'stallion'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_TAG_MISC',
                tags: [
                  'feather',
                  'bee',
                  'ikarus_portrait'
                ]
              }
            ],
            frame: [
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_FRAME_BASIC',
                tags: [
                  'Basic_Arrow',
                  'Basic_Circle',
                  'Basic_Diamond',
                  'Basic_Hexagon',
                  'Basic_Octagon',
                  'Basic_Pentagon',
                  'Basic_Shield',
                  'Basic_Square',
                  'Basic_Star',
                  'Basic_Triangle'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_FRAME_ADVANCED',
                tags: [
                  'Evolved_Arrow',
                  'Evolved_Celtic',
                  'Evolved_Circle',
                  'Evolved_Cross',
                  'Evolved_Crusher',
                  'Evolved_Frame',
                  'Evolved_Hexagon',
                  'Evolved_Hexangle',
                  'Evolved_Invincible',
                  'Evolved_Nova',
                  'Evolved_Shield',
                  'Evolved_Square',
                  'Evolved_Triburst',
                  'Evolved_Triforce'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_FRAME_ELITE',
                tags: [
                  'Elite_Nova_Prime',
                  'Elite_The_Hood',
                  'Elite_Blades',
                  'Elite_Shinobi',
                  'Elite_Circle',
                  'Elite_Hexagon',
                  'Elite_Shift',
                  'Elite_Arrow',
                  'Elite_Razor_Claw',
                  'Elite_Shield'
                ]
              }
            ],
            bg: [
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_BG_START',
                tags: [
                  'blocks_02',
                  'crystaline_02',
                  'organic_01',
                  'spheres_04'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_BG_BASIC',
                tags: [
                  'crystaline_07',
                  'grid_05',
                  'hex_03',
                  'grid_04',
                  'organic_04',
                  'spheres_01'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_BG_ADVANCED',
                tags: [
                  'crystaline_08',
                  'grid_03',
                  'organic_05',
                  'spheres_02',
                  'spheres_03',
                  'blocks_03',
                  'grid_02',
                  'crystaline_01',
                  'crystaline_03',
                  'crystaline_04',
                  'crystaline_05',
                  'hex_02',
                  'organic_02'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_BG_ELITE',
                tags: [
                  'blocks_01',
                  'crystaline_06',
                  'grid_01',
                  'hex_01',
                  'organic_03'
                ]
              },
              {
                name: 'ID_WEB_EMBLEM_CATEGORIES_BG_EXCLUSIVE',
                tags: [
                  'preorder_speedrunner_bg',
                  'preorder_combat_bg'
                ]
              }
            ]
          }
        },
        function (e, t) {
          e.exports = [
            {
              id: '56',
              displayName: 'Grid Node Anchor',
              availableStat: 'pf_Grid_Node_Anchor_Available',
              timerStat: 'pf_Grid_Node_Anchor_Timer',
              completedStat: 'pf_Grid_Node_Anchor_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Grid_Node_Anchor',
              transform: {
                x: '215.025665',
                y: '76.96',
                z: '219.76'
              },
              description: {
                activeName: 'ID_GN_ANCHOR_ACTIVE_NAME',
                activeDescription: 'ID_GN_ANCHOR_ACTIVE_DESCRIPTION',
                availableName: 'ID_GN_ANCHOR_AVAILABLE_NAME',
                availableDescription: 'ID_GN_ANCHOR_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_GN_ANCHOR_ACTIVE_DESCRIPTION',
                  'ID_MIS_MQ04_OBJECTIVE_7',
                  'ID_MIS_MQ04_OBJECTIVE_8'
                ]
              }
            },
            {
              id: '61',
              displayName: 'Grid Node Downtown',
              availableStat: 'pf_Grid_Node_Downtown_Available',
              timerStat: 'pf_Grid_Node_Downtown_Timer',
              completedStat: 'pf_Grid_Node_Downtown_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Grid_Node_Downtown',
              transform: {
                x: '-396.098633',
                y: '71.67999',
                z: '187.999161'
              },
              description: {
                activeName: 'ID_GN_DOWNTOWN_ACTIVE_NAME',
                activeDescription: 'ID_GN_DOWNTOWN_ACTIVE_DESCRIPTION',
                availableName: 'ID_GN_DOWNTOWN_AVAILABLE_NAME',
                availableDescription: 'ID_GN_DOWNTOWN_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_GN_DOWNTOWN_ACTIVE_DESCRIPTION',
                  'ID_GN_DOWNTOWN_OBJECTIVE1',
                  'ID_GN_DOWNTOWN_EXIT'
                ]
              }
            },
            {
              id: '74',
              displayName: 'Grid Node Construction',
              availableStat: 'pf_Grid_Node_Construction_Available',
              timerStat: 'pf_Grid_Node_Construction_Timer',
              completedStat: 'pf_Grid_Node_Construction_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Grid_Node_Construction',
              transform: {
                x: '-449.580017',
                y: '30.7480755',
                z: '870.4479'
              },
              description: {
                activeName: 'ID_GN_CONSTRUCTION_ACTIVE_NAME',
                activeDescription: 'ID_GN_CONSTRUCTION_ACTIVE_DESCRIPTION',
                availableName: 'ID_GN_CONSTRUCTION_AVAILABLE_NAME',
                availableDescription: 'ID_GN_CONSTRUCTION_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_GN_CONSTRUCTION_ACTIVE_DESCRIPTION',
                  'ID_GN_CONSTRUCTION_EXIT'
                ]
              }
            },
            {
              id: '79',
              displayName: 'Grid Node The View',
              availableStat: 'pf_Grid_Node_The_View_Available',
              timerStat: 'pf_Grid_Node_The_View_Timer',
              completedStat: 'pf_Grid_Node_The_View_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Grid_Node_The_View',
              transform: {
                x: '948.898743',
                y: '105.690536',
                z: '149.652252'
              },
              description: {
                activeName: 'ID_GN_VIEW_ACTIVE_NAME',
                activeDescription: 'ID_GN_VIEW_ACTIVE_DESCRIPTION',
                availableName: 'ID_GN_VIEW_AVAILABLE_NAME',
                availableDescription: 'ID_GN_VIEW_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_GN_VIEW_ACTIVE_DESCRIPTION',
                  'ID_GN_VIEW_EXIT'
                ]
              }
            }
          ]
        },
        function (e, t) {
          e.exports = {
            Release: 'ID_MIS_MQ02_ACTIVE_NAME',
            'Old Friends': 'ID_MIS_MQ02C_ACTIVE_NAME',
            'Be Like Water': 'ID_MIS_MQ02D_ACTIVE_NAME',
            'Back in the Game': 'ID_MIS_MQ03_ACTIVE_NAME',
            'Savant Extraordinaire': 'ID_MIS_M04_ACTIVE_NAME',
            Benefactor: 'ID_MIS_MQ05_ACTIVE_NAME',
            'Fly Trap': 'ID_MIS_MQ05B_ACTIVE_NAME',
            Sanctuary: 'ID_MIS_MQ05C_ACTIVE_NAME',
            Encroachment: 'ID_MIS_SQ08_ACTIVE_NAME',
            'Vive La Resistance': 'ID_MIS_MQ06_ACTIVE_NAME',
            'Prisoner X': 'ID_MIS_MQ07_ACTIVE_NAME',
            Kingdom: 'ID_MIS_MQ08_ACTIVE_NAME',
            'Family Matters': 'ID_MIS_MQ09_ACTIVE_NAME',
            'Tickets, Please': 'ID_MIS_MQ12_ACTIVE_NAME',
            'The Shard': 'ID_MIS_MQ10_ACTIVE_NAME'
          }
        },
        function (e, t) {
          e.exports = [
            {
              id: '35',
              displayName: 'Release',
              availableStat: 'pf_Release_Available',
              timerStat: 'pf_Release_Timer',
              completedStat: 'pf_Release_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Release',
              transform: {
                x: '-0.156170785',
                y: '69.3329239',
                z: '293.950348'
              },
              description: {
                activeName: 'ID_MIS_MQ02_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ02_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02_OBJ0',
                  'ID_MIS_MQ02_OBJ1',
                  'ID_MIS_MQ02_OBJ2',
                  'ID_MIS_MQ02_OBJ3',
                  'ID_MIS_MQ02_OBJ4',
                  'ID_MIS_MQ02_OBJ5',
                  'ID_MIS_MQ02_OBJ6',
                  'ID_MIS_MQ02_OBJ7',
                  'ID_MIS_MQ02_OBJ8',
                  'ID_MIS_MQ02_OBJ9',
                  'ID_MIS_MQ02_OBJ10'
                ]
              }
            },
            {
              id: '36',
              displayName: 'Reunion',
              availableStat: 'pf_Reunion_Available',
              timerStat: 'pf_Reunion_Timer',
              completedStat: 'pf_Reunion_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Reunion',
              transform: {
                x: '-0.156170785',
                y: '69.3329239',
                z: '293.950348'
              },
              description: {
                activeName: 'ID_MIS_MQ02_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ02_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02_OBJ0',
                  'ID_MIS_MQ02_OBJ1',
                  'ID_MIS_MQ02_OBJ2',
                  'ID_MIS_MQ02_OBJ3',
                  'ID_MIS_MQ02_OBJ4',
                  'ID_MIS_MQ02_OBJ5',
                  'ID_MIS_MQ02_OBJ6',
                  'ID_MIS_MQ02_OBJ7',
                  'ID_MIS_MQ02_OBJ8',
                  'ID_MIS_MQ02_OBJ9',
                  'ID_MIS_MQ02_OBJ10'
                ]
              }
            },
            {
              id: '37',
              displayName: 'Old Friends Briefing',
              availableStat: 'pf_Old_Friends_Briefing_Available',
              timerStat: 'pf_Old_Friends_Briefing_Timer',
              completedStat: 'pf_Old_Friends_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Old_Friends_Briefing',
              transform: {
                x: '-76.75509',
                y: '59.87397',
                z: '56.4488678'
              },
              description: {
                activeName: 'ID_MIS_MQ02C_INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02C_INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02C_INTRO_ACTIVE_NAME',
                availableDescription: 'ID_MIS_MQ02C_INTRO_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02_OBJ0',
                  'ID_MIS_MQ02_OBJ1',
                  'ID_MIS_MQ02_OBJ2',
                  'ID_MIS_MQ02_OBJ3',
                  'ID_MIS_MQ02_OBJ4',
                  'ID_MIS_MQ02_OBJ5',
                  'ID_MIS_MQ02_OBJ6',
                  'ID_MIS_MQ02_OBJ7',
                  'ID_MIS_MQ02_OBJ8',
                  'ID_MIS_MQ02_OBJ9',
                  'ID_MIS_MQ02_OBJ10'
                ]
              }
            },
            {
              id: '38',
              displayName: 'Old Friends',
              availableStat: 'pf_Old_Friends_Available',
              timerStat: 'pf_Old_Friends_Timer',
              completedStat: 'pf_Old_Friends_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Old_Friends',
              transform: {
                x: '-47.0562172',
                y: '65.6300049',
                z: '61.428524'
              },
              description: {
                activeName: 'ID_MIS_MQ02C_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02C_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02C_ACTIVE_NAME',
                availableDescription: 'ID_MIS_MQ02C_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02_OBJ0',
                  'ID_MIS_MQ02_OBJ1',
                  'ID_MIS_MQ02_OBJ2',
                  'ID_MIS_MQ02_OBJ3',
                  'ID_MIS_MQ02_OBJ4',
                  'ID_MIS_MQ02_OBJ5',
                  'ID_MIS_MQ02_OBJ6',
                  'ID_MIS_MQ02_OBJ7',
                  'ID_MIS_MQ02_OBJ8',
                  'ID_MIS_MQ02_OBJ9',
                  'ID_MIS_MQ02_OBJ10'
                ]
              }
            },
            {
              id: '39',
              displayName: 'Be Like Water',
              availableStat: 'pf_Be_Like_Water_Available',
              timerStat: 'pf_Be_Like_Water_Timer',
              completedStat: 'pf_Be_Like_Water_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Be_Like_Water',
              transform: {
                x: '31.5098572',
                y: '65.9375',
                z: '187.930832'
              },
              description: {
                activeName: 'ID_MIS_MQ02D_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02D_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02D_ACTIVE_NAME',
                availableDescription: 'ID_MIS_MQ02D_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02_OBJ0',
                  'ID_MIS_MQ02_OBJ1',
                  'ID_MIS_MQ02_OBJ2',
                  'ID_MIS_MQ02_OBJ3',
                  'ID_MIS_MQ02_OBJ4',
                  'ID_MIS_MQ02_OBJ5',
                  'ID_MIS_MQ02_OBJ6',
                  'ID_MIS_MQ02_OBJ7',
                  'ID_MIS_MQ02_OBJ8',
                  'ID_MIS_MQ02_OBJ9',
                  'ID_MIS_MQ02_OBJ10'
                ]
              }
            },
            {
              id: '40',
              displayName: 'Birdman\'s Route',
              availableStat: 'pf_Birdman_s_Route_Available',
              timerStat: 'pf_Birdman_s_Route_Timer',
              completedStat: 'pf_Birdman_s_Route_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Birdman_s_Route',
              transform: {
                x: '47.11034',
                y: '82.25668',
                z: '-17.8937473'
              },
              description: {
                activeName: 'ID_MIS_MQ02B_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ02B_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ02B_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ02B_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02B_OBJ0',
                  'ID_MIS_MQ02B_OBJ1',
                  'ID_MIS_MQ02B_OBJ2'
                ]
              }
            },
            {
              id: '44',
              displayName: 'Back in the Game Briefing',
              availableStat: 'pf_Back_in_the_Game_Briefing_Available',
              timerStat: 'pf_Back_in_the_Game_Briefing_Timer',
              completedStat: 'pf_Back_in_the_Game_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Back_in_the_Game_Briefing',
              transform: {
                x: '-0.01553084',
                y: '69.3329239',
                z: '294.0781'
              },
              description: {
                activeName: 'ID_MIS_MQ03INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ03INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ03INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ03INTRO_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ03INTRO_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '45',
              displayName: 'Back in the Game',
              availableStat: 'pf_Back_in_the_Game_Available',
              timerStat: 'pf_Back_in_the_Game_Timer',
              completedStat: 'pf_Back_in_the_Game_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Back_in_the_Game',
              transform: {
                x: '-153.498627',
                y: '60.27769',
                z: '-19.7185669'
              },
              description: {
                activeName: 'ID_MIS_MQ03_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ03_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ03_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ03_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ03_OBJECTIVE_00',
                  'ID_MIS_MQ03_OBJECTIVE_0',
                  'ID_MIS_MQ03_OBJECTIVE_1',
                  'ID_MIS_MQ03_OBJECTIVE_2',
                  'ID_MIS_MQ03_OBJECTIVE_3',
                  'ID_MIS_MQ03_OBJECTIVE_4',
                  'ID_MIS_MQ03_OBJECTIVE_5',
                  'ID_MIS_MQ03_OBJECTIVE_6',
                  'ID_MIS_MQ03_OBJECTIVE_8',
                  'ID_MIS_MQ03_OBJECTIVE_9',
                  'ID_MIS_MQ03_OBJECTIVE_10'
                ]
              }
            },
            {
              id: '46',
              displayName: 'Back in the Game Debriefing',
              availableStat: 'pf_Back_in_the_Game_Debriefing_Available',
              timerStat: 'pf_Back_in_the_Game_Debriefing_Timer',
              completedStat: 'pf_Back_in_the_Game_Debriefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Back_in_the_Game_Debriefing',
              transform: {
                x: '-0.156170785',
                y: '69.3329239',
                z: '293.950348'
              },
              description: {
                activeName: 'ID_MIS_MQ03OUTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ03OUTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ03OUTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ03OUTRO_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ03INTRO_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '47',
              displayName: 'Mischief Maker',
              availableStat: 'pf_Mischief_Maker_Available',
              timerStat: 'pf_Mischief_Maker_Timer',
              completedStat: 'pf_Mischief_Maker_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Mischief_Maker',
              transform: {
                x: '-376.113525',
                y: '68.96958',
                z: '360.852783'
              },
              description: {
                activeName: 'ID_MIS_DT5_ACTIVE_NAME',
                activeDescription: 'ID_MIS_DT5_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_DT5_ACTIVE_NAME',
                availableDescription: 'ID_MIS_DT5_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '52',
              displayName: 'Savant Extraordinaire Briefing',
              availableStat: 'pf_Savant_Extraordinaire_Briefing_Available',
              timerStat: 'pf_Savant_Extraordinaire_Briefing_Timer',
              completedStat: 'pf_Savant_Extraordinaire_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Savant_Extraordinaire_Briefing',
              transform: {
                x: '0.102918059',
                y: '69.3329239',
                z: '294.185638'
              },
              description: {
                activeName: 'ID_MIS_M04INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_M04INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_M04INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_M04INTRO_ACTIVE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '53',
              displayName: 'Savant Extraordinaire Getting Magrope',
              availableStat: 'pf_Savant_Extraordinaire_Getting_Magrope_Available',
              timerStat: 'pf_Savant_Extraordinaire_Getting_Magrope_Timer',
              completedStat: 'pf_Savant_Extraordinaire_Getting_Magrope_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Savant_Extraordinaire_Getting_Magrope',
              transform: {
                x: '-47.082386',
                y: '48.49995',
                z: '316.247681'
              },
              description: {
                activeName: 'ID_MIS_M04GETROPE_ACTIVE_NAME',
                activeDescription: 'ID_MIS_M04GETROPE_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_M04GETROPE_AVAILABLE_DESCRIPTION',
                availableDescription: 'ID_MIS_M04GETROPE_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '54',
              displayName: 'Savant Extraordinaire Meeting Plastic',
              availableStat: 'pf_Savant_Extraordinaire_Meeting_Plastic_Available',
              timerStat: 'pf_Savant_Extraordinaire_Meeting_Plastic_Timer',
              completedStat: 'pf_Savant_Extraordinaire_Meeting_Plastic_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Savant_Extraordinaire_Meeting_Plastic',
              transform: {
                x: '414.20697',
                y: '85.4572449',
                z: '403.8571'
              },
              description: {
                activeName: 'ID_MIS_M04PLASTIC_ACTIVE_NAME',
                activeDescription: 'ID_MIS_M04PLASTIC_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_M04PLASTIC_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_M04PLASTIC_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '55',
              displayName: 'Savant Extraordinaire',
              availableStat: 'pf_Savant_Extraordinaire_Available',
              timerStat: 'pf_Savant_Extraordinaire_Timer',
              completedStat: 'pf_Savant_Extraordinaire_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Savant_Extraordinaire',
              transform: {
                x: '374.661621',
                y: '95.94225',
                z: '559.2633'
              },
              description: {
                activeName: 'ID_MIS_M04ALLCOM_ACTIVE_NAME',
                activeDescription: 'ID_MIS_M04ALLCOM_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_M04ALLCOM_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_M04ALLCOM_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ04_OBJECTIVE_0',
                  'ID_MIS_MQ04_OBJECTIVE_1',
                  'ID_MIS_MQ04_OBJECTIVE_2',
                  'ID_MIS_MQ04_OBJECTIVE_3',
                  'ID_MIS_MQ04_OBJECTIVE_4',
                  'ID_MIS_MQ04_OBJECTIVE_5',
                  'ID_MIS_MQ04_OBJECTIVE_6',
                  'ID_MIS_MQ04_OBJECTIVE_7',
                  'ID_MIS_MQ04_OBJECTIVE_8',
                  'ID_MIS_MQ04_OBJECTIVE_9',
                  'ID_MIS_MQ04_OBJECTIVE_10'
                ]
              }
            },
            {
              id: '62',
              displayName: 'Benefactor Lair Briefing',
              availableStat: 'pf_Benefactor_Lair_Briefing_Available',
              timerStat: 'pf_Benefactor_Lair_Briefing_Timer',
              completedStat: 'pf_Benefactor_Lair_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Benefactor_Lair_Briefing',
              transform: {
                x: '-0.01553084',
                y: '69.3329239',
                z: '294.0781'
              },
              description: {
                activeName: 'ID_MIS_MQ05INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ05INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ05INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ05INTRO_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '63',
              displayName: 'Benefactor Dogen Briefing',
              availableStat: 'pf_Benefactor_Dogen_Briefing_Available',
              timerStat: 'pf_Benefactor_Dogen_Briefing_Timer',
              completedStat: 'pf_Benefactor_Dogen_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Benefactor_Dogen_Briefing',
              transform: {
                x: '190.158173',
                y: '72.9375',
                z: '296.307281'
              },
              description: {
                activeName: 'ID_MIS_MQ05INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ05INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ05INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ05INTRO_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '64',
              displayName: 'Benefactor',
              availableStat: 'pf_Benefactor_Available',
              timerStat: 'pf_Benefactor_Timer',
              completedStat: 'pf_Benefactor_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Benefactor',
              transform: {
                x: '579.5086',
                y: '53.4435349',
                z: '207.254456'
              },
              description: {
                activeName: 'ID_MIS_MQ05_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ05_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ05_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ05_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ05_OBJ_01',
                  'ID_MIS_MQ05_OBJ_02',
                  'ID_MIS_MQ05_OBJ_03',
                  'ID_MIS_MQ05_OBJ_04',
                  'ID_MIS_MQ05_OBJ_05',
                  'ID_MIS_MQ05_OBJ_06',
                  'ID_MIS_MQ05_OBJ_07',
                  'ID_MIS_MQ05_OBJ_08',
                  'ID_MIS_MQ05_OBJ_09',
                  'ID_MIS_MQ05_OBJ_10',
                  'ID_MIS_MQ05_OBJ_11'
                ]
              }
            },
            {
              id: '65',
              displayName: 'Fly Trap',
              availableStat: 'pf_Fly_Trap_Available',
              timerStat: 'pf_Fly_Trap_Timer',
              completedStat: 'pf_Fly_Trap_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Fly_Trap',
              transform: {
                x: '-348.455139',
                y: '65.00713',
                z: '141.550049'
              },
              description: {
                activeName: 'ID_MIS_MQ05B_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ05B_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ05B_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ05B_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ06_OBJECTIVE_0',
                  'ID_MIS_MQ06_OBJECTIVE_0B',
                  'ID_MIS_MQ06_OBJECTIVE_1',
                  'ID_MIS_MQ06_OBJECTIVE_1B',
                  'ID_MIS_MQ06_OBJECTIVE_2',
                  'ID_MIS_MQ06_OBJECTIVE_3',
                  'ID_MIS_MQ06_OBJECTIVE_4',
                  'ID_MIS_MQ06_OBJECTIVE_5'
                ]
              }
            },
            {
              id: '66',
              displayName: 'Sanctuary',
              availableStat: 'pf_Sanctuary_Available',
              timerStat: 'pf_Sanctuary_Timer',
              completedStat: 'pf_Sanctuary_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Sanctuary',
              transform: {
                x: '-539.8244',
                y: '57.510006',
                z: '355.450653'
              },
              description: {
                activeName: 'ID_MIS_MQ05C_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ05C_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ05C_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ05C_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ06_OBJECTIVE_6',
                  'ID_MIS_MQ06_OBJECTIVE_7',
                  'ID_MIS_MQ06_OBJECTIVE_8'
                ]
              }
            },
            {
              id: '67',
              displayName: 'Encroachment',
              availableStat: 'pf_Encroachment_Available',
              timerStat: 'pf_Encroachment_Timer',
              completedStat: 'pf_Encroachment_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Encroachment',
              transform: {
                x: '-304.159973',
                y: '-45.6957664',
                z: '745.8976'
              },
              description: {
                activeName: 'ID_MIS_SQ08_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ08_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ08_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ08_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ08_OBJECTIVE_1',
                  'ID_MIS_SQ08_OBJECTIVE_2',
                  'ID_MIS_SQ08_OBJECTIVE_3',
                  'ID_MIS_SQ08_OBJECTIVE_4'
                ]
              }
            },
            {
              id: '68',
              displayName: 'Vive La Resistance Briefing',
              availableStat: 'pf_Vive_La_Resistance_Briefing_Available',
              timerStat: 'pf_Vive_La_Resistance_Briefing_Timer',
              completedStat: 'pf_Vive_La_Resistance_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Vive_La_Resistance_Briefing',
              transform: {
                x: '-284.4062',
                y: '-40.2706757',
                z: '729.001953'
              },
              description: {
                activeName: 'ID_MIS_MQ06INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ06INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ06INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ06INTRO_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ07INTRO_OBJECTIVE_0'
                ]
              }
            },
            {
              id: '69',
              displayName: 'Vive La Resistance',
              availableStat: 'pf_Vive_La_Resistance_Available',
              timerStat: 'pf_Vive_La_Resistance_Timer',
              completedStat: 'pf_Vive_La_Resistance_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Vive_La_Resistance',
              transform: {
                x: '-266.032623',
                y: '-27.4001884',
                z: '740.06134'
              },
              description: {
                activeName: 'ID_MIS_MQ06_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ06_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ06_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ06_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ07_OBJECTIVE_0',
                  'ID_MIS_MQ07_OBJECTIVE_1',
                  'ID_MIS_MQ07_OBJECTIVE_2',
                  'ID_MIS_MQ07_OBJECTIVE_3',
                  'ID_MIS_MQ07_OBJECTIVE_4',
                  'ID_MIS_MQ07_OBJECTIVE_5',
                  'ID_MIS_MQ07_OBJECTIVE_6',
                  'ID_MIS_MQ07_OBJECTIVE_7',
                  'ID_MIS_MQ07_OBJECTIVE_8',
                  'ID_MIS_MQ07_OBJECTIVE_9'
                ]
              }
            },
            {
              id: '70',
              displayName: 'Vive La Resistance Debriefing',
              availableStat: 'pf_Vive_La_Resistance_Debriefing_Available',
              timerStat: 'pf_Vive_La_Resistance_Debriefing_Timer',
              completedStat: 'pf_Vive_La_Resistance_Debriefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Vive_La_Resistance_Debriefing',
              transform: {
                x: '-284.4062',
                y: '-40.2706757',
                z: '729.001953'
              },
              description: {
                activeName: 'ID_MIS_MQ06_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ06_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ06_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ06_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ07_OBJECTIVE_0',
                  'ID_MIS_MQ07_OBJECTIVE_1',
                  'ID_MIS_MQ07_OBJECTIVE_2',
                  'ID_MIS_MQ07_OBJECTIVE_3',
                  'ID_MIS_MQ07_OBJECTIVE_4',
                  'ID_MIS_MQ07_OBJECTIVE_5',
                  'ID_MIS_MQ07_OBJECTIVE_6',
                  'ID_MIS_MQ07_OBJECTIVE_7',
                  'ID_MIS_MQ07_OBJECTIVE_8'
                ]
              }
            },
            {
              id: '75',
              displayName: 'Payback',
              availableStat: 'pf_Payback_Available',
              timerStat: 'pf_Payback_Timer',
              completedStat: 'pf_Payback_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Payback',
              transform: {
                x: '-16.49411',
                y: '69.11784',
                z: '312.818024'
              },
              description: {
                activeName: 'ID_MIS_CLEARLAIR_ACTIVE_NAME',
                activeDescription: 'ID_MIS_CLEARLAIR_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_CLEARLAIR_ACTIVE_NAME',
                availableDescription: 'ID_MIS_CLEARLAIR_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '76',
              displayName: 'Prisoner X Interrogation',
              availableStat: 'pf_Prisoner_X_Interrogation_Available',
              timerStat: 'pf_Prisoner_X_Interrogation_Timer',
              completedStat: 'pf_Prisoner_X_Interrogation_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Prisoner_X_Interrogation',
              transform: {
                x: '-329.6973',
                y: '-46.2346039',
                z: '773.6416'
              },
              description: {
                activeName: 'ID_MIS_MQ07INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ07INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ07INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ07INTRO_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '77',
              displayName: 'Prisoner X',
              availableStat: 'pf_Prisoner_X_Available',
              timerStat: 'pf_Prisoner_X_Timer',
              completedStat: 'pf_Prisoner_X_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Prisoner_X',
              transform: {
                x: '1027.07654',
                y: '91.1227',
                z: '129.875916'
              },
              description: {
                activeName: 'ID_MIS_MQ07_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ07_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ07_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ07_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ07_OBJ1',
                  'ID_MIS_MQ07_OBJ2',
                  'ID_MIS_MQ07_OBJ3',
                  'ID_MIS_MQ07_OBJ4',
                  'ID_MIS_MQ07_OBJ5',
                  'ID_MIS_MQ07_OBJ6',
                  'ID_MIS_MQ07_OBJ7',
                  'ID_MIS_MQ07_OBJ8'
                ]
              }
            },
            {
              id: '80',
              displayName: 'Kingdom Briefing',
              availableStat: 'pf_Kingdom_Briefing_Available',
              timerStat: 'pf_Kingdom_Briefing_Timer',
              completedStat: 'pf_Kingdom_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Kingdom_Briefing',
              transform: {
                x: '190.158173',
                y: '72.9375',
                z: '296.307281'
              },
              description: {
                activeName: 'ID_MIS_MQ08_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ08_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ08_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ08_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ08_OBJECTIVE_01',
                  'ID_MIS_MQ08_OBJECTIVE_02',
                  'ID_MIS_MQ08_OBJECTIVE_03',
                  'ID_MIS_MQ08_OBJECTIVE_04',
                  'ID_MIS_MQ08_OBJECTIVE_05',
                  'ID_MIS_MQ08_OBJECTIVE_06',
                  'ID_MIS_MQ08_OBJECTIVE_07',
                  'ID_MIS_MQ08_OBJECTIVE_08',
                  'ID_MIS_MQ08_OBJECTIVE_09',
                  'ID_MIS_MQ08_OBJECTIVE_10',
                  'ID_MIS_MQ08_OBJECTIVE_11',
                  'ID_MIS_MQ08_OBJECTIVE_12',
                  'ID_MIS_MQ08_OBJECTIVE_13',
                  'ID_MIS_MQ08_OBJECTIVE_14',
                  'ID_MIS_MQ08_OBJECTIVE_15',
                  'ID_MIS_MQ08_OBJECTIVE_16'
                ]
              }
            },
            {
              id: '81',
              displayName: 'Kingdom Execution Scene',
              availableStat: 'pf_Kingdom_Execution_Scene_Available',
              timerStat: 'pf_Kingdom_Execution_Scene_Timer',
              completedStat: 'pf_Kingdom_Execution_Scene_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Kingdom_Execution_Scene',
              transform: {
                x: '-284.4062',
                y: '-40.2706757',
                z: '729.001953'
              },
              description: {
                activeName: 'ID_MIS_MQ08_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ08_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ08_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ08_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ08_OBJECTIVE_01',
                  'ID_MIS_MQ08_OBJECTIVE_02',
                  'ID_MIS_MQ08_OBJECTIVE_03',
                  'ID_MIS_MQ08_OBJECTIVE_04',
                  'ID_MIS_MQ08_OBJECTIVE_05',
                  'ID_MIS_MQ08_OBJECTIVE_06',
                  'ID_MIS_MQ08_OBJECTIVE_07',
                  'ID_MIS_MQ08_OBJECTIVE_08',
                  'ID_MIS_MQ08_OBJECTIVE_09',
                  'ID_MIS_MQ08_OBJECTIVE_10',
                  'ID_MIS_MQ08_OBJECTIVE_11',
                  'ID_MIS_MQ08_OBJECTIVE_12',
                  'ID_MIS_MQ08_OBJECTIVE_13',
                  'ID_MIS_MQ08_OBJECTIVE_14',
                  'ID_MIS_MQ08_OBJECTIVE_15',
                  'ID_MIS_MQ08_OBJECTIVE_16'
                ]
              }
            },
            {
              id: '82',
              displayName: 'Kingdom',
              availableStat: 'pf_Kingdom_Available',
              timerStat: 'pf_Kingdom_Timer',
              completedStat: 'pf_Kingdom_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Kingdom',
              transform: {
                x: '-234.256119',
                y: '-33.8032761',
                z: '665.092468'
              },
              description: {
                activeName: 'ID_MIS_MQ08_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ08_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ08_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ08_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ08_OBJECTIVE_01',
                  'ID_MIS_MQ08_OBJECTIVE_02',
                  'ID_MIS_MQ08_OBJECTIVE_03',
                  'ID_MIS_MQ08_OBJECTIVE_04',
                  'ID_MIS_MQ08_OBJECTIVE_05',
                  'ID_MIS_MQ08_OBJECTIVE_06',
                  'ID_MIS_MQ08_OBJECTIVE_07',
                  'ID_MIS_MQ08_OBJECTIVE_08',
                  'ID_MIS_MQ08_OBJECTIVE_09',
                  'ID_MIS_MQ08_OBJECTIVE_10',
                  'ID_MIS_MQ08_OBJECTIVE_11',
                  'ID_MIS_MQ08_OBJECTIVE_12',
                  'ID_MIS_MQ08_OBJECTIVE_13',
                  'ID_MIS_MQ08_OBJECTIVE_14',
                  'ID_MIS_MQ08_OBJECTIVE_15',
                  'ID_MIS_MQ08_OBJECTIVE_16'
                ]
              }
            },
            {
              id: '83',
              displayName: 'Kingdom Debriefing',
              availableStat: 'pf_Kingdom_Debriefing_Available',
              timerStat: 'pf_Kingdom_Debriefing_Timer',
              completedStat: 'pf_Kingdom_Debriefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Kingdom_Debriefing',
              transform: {
                x: '-284.4062',
                y: '-40.2706757',
                z: '729.001953'
              },
              description: {
                activeName: 'ID_MIS_MQ08_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ08_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ08_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ08_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ08_OBJECTIVE_01',
                  'ID_MIS_MQ08_OBJECTIVE_02',
                  'ID_MIS_MQ08_OBJECTIVE_03',
                  'ID_MIS_MQ08_OBJECTIVE_04',
                  'ID_MIS_MQ08_OBJECTIVE_05',
                  'ID_MIS_MQ08_OBJECTIVE_06',
                  'ID_MIS_MQ08_OBJECTIVE_07',
                  'ID_MIS_MQ08_OBJECTIVE_08',
                  'ID_MIS_MQ08_OBJECTIVE_09',
                  'ID_MIS_MQ08_OBJECTIVE_10',
                  'ID_MIS_MQ08_OBJECTIVE_11',
                  'ID_MIS_MQ08_OBJECTIVE_12',
                  'ID_MIS_MQ08_OBJECTIVE_13',
                  'ID_MIS_MQ08_OBJECTIVE_14',
                  'ID_MIS_MQ08_OBJECTIVE_15',
                  'ID_MIS_MQ08_OBJECTIVE_16'
                ]
              }
            },
            {
              id: '84',
              displayName: 'Family Matters Briefing',
              availableStat: 'pf_Family_Matters_Briefing_Available',
              timerStat: 'pf_Family_Matters_Briefing_Timer',
              completedStat: 'pf_Family_Matters_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Family_Matters_Briefing',
              transform: {
                x: '190.158173',
                y: '72.9375',
                z: '296.307281'
              },
              description: {
                activeName: 'ID_MIS_MQ09_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ09_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ09_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ09_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ09_OBJECTIVE_01',
                  'ID_MIS_MQ09_OBJECTIVE_02',
                  'ID_MIS_MQ09_OBJECTIVE_03',
                  'ID_MIS_MQ09_OBJECTIVE_04',
                  'ID_MIS_MQ09_OBJECTIVE_05',
                  'ID_MIS_MQ09_OBJECTIVE_06',
                  'ID_MIS_MQ09_OBJECTIVE_07'
                ]
              }
            },
            {
              id: '85',
              displayName: 'Family Matters',
              availableStat: 'pf_Family_Matters_Available',
              timerStat: 'pf_Family_Matters_Timer',
              completedStat: 'pf_Family_Matters_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Family_Matters',
              transform: {
                x: '953.44',
                y: '54.55105',
                z: '-411.3519'
              },
              description: {
                activeName: 'ID_MIS_MQ09_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ09_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ09_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ09_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ09_OBJECTIVE_01',
                  'ID_MIS_MQ09_OBJECTIVE_02',
                  'ID_MIS_MQ09_OBJECTIVE_03',
                  'ID_MIS_MQ09_OBJECTIVE_04',
                  'ID_MIS_MQ09_OBJECTIVE_05',
                  'ID_MIS_MQ09_OBJECTIVE_06',
                  'ID_MIS_MQ09_OBJECTIVE_07'
                ]
              }
            },
            {
              id: '86',
              displayName: 'Family Matters Debriefing',
              availableStat: 'pf_Family_Matters_Debriefing_Available',
              timerStat: 'pf_Family_Matters_Debriefing_Timer',
              completedStat: 'pf_Family_Matters_Debriefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Family_Matters_Debriefing',
              transform: {
                x: '424.0456',
                y: '85.45718',
                z: '393.3224'
              },
              description: {
                activeName: 'ID_MIS_MQ09OUTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ09OUTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ09OUTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ09OUTRO_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '89',
              displayName: 'Tickets, Please',
              availableStat: 'pf_Tickets__Please_Available',
              timerStat: 'pf_Tickets__Please_Timer',
              completedStat: 'pf_Tickets__Please_CompletedTime',
              completedFlag: 'pf_GoldCompleted_Tickets__Please',
              transform: {
                x: '-181.568619',
                y: '60.2142067',
                z: '303.29007'
              },
              description: {
                activeName: 'ID_MIS_MQ12_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ12_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ12_ACTIVE_NAME',
                availableDescription: 'ID_MIS_MQ12_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ12_OBJ_00',
                  'ID_MIS_MQ12_OBJ_01',
                  'ID_MIS_MQ12_OBJ_02',
                  'ID_MIS_MQ12_OBJ_03',
                  'ID_MIS_MQ12_OBJ_04',
                  'ID_MIS_MQ12_OBJ_05'
                ]
              }
            },
            {
              id: '90',
              displayName: 'The Shard Briefing',
              availableStat: 'pf_The_Shard_Briefing_Available',
              timerStat: 'pf_The_Shard_Briefing_Timer',
              completedStat: 'pf_The_Shard_Briefing_CompletedTime',
              completedFlag: 'pf_GoldCompleted_The_Shard_Briefing',
              transform: {
                x: '424.0456',
                y: '85.45718',
                z: '393.3224'
              },
              description: {
                activeName: 'ID_MIS_MQ10_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ10_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ10_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ10_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ10_OBJECTIVE_1',
                  'ID_MIS_MQ10_OBJECTIVE_2',
                  'ID_MIS_MQ10_OBJECTIVE_3',
                  'ID_MIS_MQ10_OBJECTIVE_4',
                  'ID_MIS_MQ10_OBJECTIVE_5',
                  'ID_MIS_MQ10_OBJECTIVE_6',
                  'ID_MIS_MQ10_OBJECTIVE_7',
                  'ID_MIS_MQ10_OBJECTIVE_8',
                  'ID_MIS_MQ10_OBJECTIVE_9',
                  'ID_MIS_MQ10_OBJECTIVE_10'
                ]
              }
            },
            {
              id: '91',
              displayName: 'The Shard',
              availableStat: 'pf_The_Shard_Available',
              timerStat: 'pf_The_Shard_Timer',
              completedStat: 'pf_The_Shard_CompletedTime',
              completedFlag: 'pf_GoldCompleted_The_Shard',
              transform: {
                x: '156.41301',
                y: '50.0941124',
                z: '403.727966'
              },
              description: {
                activeName: 'ID_MIS_MQ10_ACTIVE_NAME',
                activeDescription: 'ID_MIS_MQ10_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_MQ10_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_MQ10_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ10_OBJECTIVE_1',
                  'ID_MIS_MQ10_OBJECTIVE_2',
                  'ID_MIS_MQ10_OBJECTIVE_3',
                  'ID_MIS_MQ10_OBJECTIVE_4',
                  'ID_MIS_MQ10_OBJECTIVE_5',
                  'ID_MIS_MQ10_OBJECTIVE_6',
                  'ID_MIS_MQ10_OBJECTIVE_7',
                  'ID_MIS_MQ10_OBJECTIVE_8',
                  'ID_MIS_MQ10_OBJECTIVE_9',
                  'ID_MIS_MQ10_OBJECTIVE_10'
                ]
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            {
              id: 'ID_SAH_THE_LAIR',
              displayName: 'ID_SAH_THE_LAIR',
              transform: {
                x: '-0.156170785',
                y: '69.3329239',
                z: '293.950348'
              }
            },
            {
              id: 'ID_SAH_ANCHOR_2',
              displayName: 'ID_SAH_ANCHOR_2',
              transform: {
                x: '431.4667',
                y: '85.4573',
                z: '384.800232'
              }
            },
            {
              id: 'ID_SAH_ANCHOR_4',
              displayName: 'ID_SAH_ANCHOR_4',
              transform: {
                x: '620.098755',
                y: '81.92052',
                z: '74.20836'
              }
            },
            {
              id: 'ID_SAH_DOWNTOWN_3',
              displayName: 'ID_SAH_DOWNTOWN_3',
              transform: {
                x: '-519.742554',
                y: '63.28977',
                z: '229.3014'
              }
            },
            {
              id: 'ID_SAH_REZONING',
              displayName: 'ID_SAH_REZONING',
              transform: {
                x: '-423.675659',
                y: '10.3166256',
                z: '798.3434'
              }
            },
            {
              id: 'ID_SAH_BLACK_NOVEMBER_HQ',
              displayName: 'ID_SAH_BLACK_NOVEMBER_HQ',
              transform: {
                x: '-284.4062',
                y: '-40.2706757',
                z: '729.001953'
              }
            },
            {
              id: 'ID_SAH_DOWNTOWN_8',
              displayName: 'ID_SAH_DOWNTOWN_8',
              transform: {
                x: '-170.985382',
                y: '68.2462',
                z: '-36.7923355'
              }
            },
            {
              id: 'ID_SAH_THE_VIEW_1',
              displayName: 'ID_SAH_THE_VIEW_1',
              transform: {
                x: '1150.1947',
                y: '89.9200058',
                z: '-377.103424'
              }
            },
            {
              id: 'ID_SAH_THE_VIEW_2',
              displayName: 'ID_SAH_THE_VIEW_2',
              transform: {
                x: '1109.34875',
                y: '89.625',
                z: '-2.983593'
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            {
              id: '147',
              displayName: 'Security Hub Anchor 2',
              availableStat: 'pf_Security_Hub_Anchor_2_Available',
              timerStat: 'pf_Security_Hub_Anchor_2_Timer',
              completedStat: 'pf_Security_Hub_Anchor_2_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_Anchor_2',
              transform: {
                x: '346.679749',
                y: '66.56248',
                z: '313.123474'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '148',
              displayName: 'Security Hub Anchor 3',
              availableStat: 'pf_Security_Hub_Anchor_3_Available',
              timerStat: 'pf_Security_Hub_Anchor_3_Timer',
              completedStat: 'pf_Security_Hub_Anchor_3_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_Anchor_3',
              transform: {
                x: '397.988434',
                y: '77.91972',
                z: '201.256271'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '149',
              displayName: 'Security Hub Downtown 1',
              availableStat: 'pf_Security_Hub_Downtown_1_Available',
              timerStat: 'pf_Security_Hub_Downtown_1_Timer',
              completedStat: 'pf_Security_Hub_Downtown_1_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_Downtown_1',
              transform: {
                x: '0.791317',
                y: '65.279',
                z: '106.392616'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '150',
              displayName: 'Security Hub Downtown 3',
              availableStat: 'pf_Security_Hub_Downtown_3_Available',
              timerStat: 'pf_Security_Hub_Downtown_3_Timer',
              completedStat: 'pf_Security_Hub_Downtown_3_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_Downtown_3',
              transform: {
                x: '-297.765533',
                y: '53.7787971',
                z: '189.1097'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '151',
              displayName: 'Security Hub Downtown 4',
              availableStat: 'pf_Security_Hub_Downtown_4_Available',
              timerStat: 'pf_Security_Hub_Downtown_4_Timer',
              completedStat: 'pf_Security_Hub_Downtown_4_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_Downtown_4',
              transform: {
                x: '-162.74762',
                y: '74.24531',
                z: '326.789642'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '152',
              displayName: 'Security Hub The View 1',
              availableStat: 'pf_Security_Hub_The_View_1_Available',
              timerStat: 'pf_Security_Hub_The_View_1_Timer',
              completedStat: 'pf_Security_Hub_The_View_1_CompletedTime',
              completedFlag: 'pf_BronzeCompleted_Security_Hub_The_View_1',
              transform: {
                x: '870.019043',
                y: '73.63009',
                z: '-2.37791562'
              },
              description: {
                activeName: 'ID_MAP_SECURITYHUB_LABEL',
                activeDescription: 'ID_SECHUB_DESCRIPTION',
                availableName: 'ID_MAP_SECURITYHUB_LABEL',
                availableDescription: 'ID_SECHUB_DESCRIPTION',
                objectives: [
                  'ID_MIS_CLEARLAIR_OBJECTIVE_1'
                ]
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            {
              id: '41',
              displayName: 'Birdman\'s Delivery',
              availableStat: 'pf_Birdman_s_Delivery_Available',
              timerStat: 'pf_Birdman_s_Delivery_Timer',
              completedStat: 'pf_Birdman_s_Delivery_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Birdman_s_Delivery',
              transform: {
                x: '41.2863235',
                y: '82.25195',
                z: '-20.0443726'
              },
              description: {
                activeName: 'ID_MIS_BIRDMAN2_ACTIVE_NAME',
                activeDescription: 'ID_MIS_BIRDMAN2_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_BIRDMAN2_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_BIRDMAN2_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_MQ02B_OBJ2'
                ]
              }
            },
            {
              id: '42',
              displayName: 'Two Pigeons With One Stone',
              availableStat: 'pf_Two_Pigeons_With_One_Stone_Available',
              timerStat: 'pf_Two_Pigeons_With_One_Stone_Timer',
              completedStat: 'pf_Two_Pigeons_With_One_Stone_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Two_Pigeons_With_One_Stone',
              transform: {
                x: '41.2863235',
                y: '82.25195',
                z: '-20.0443726'
              },
              description: {
                activeName: 'ID_MIS_SQ12_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ12_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ12_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ12_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ12_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '43',
              displayName: 'Two Pigeons With One Stone Chase',
              availableStat: 'pf_Two_Pigeons_With_One_Stone_Chase_Available',
              timerStat: 'pf_Two_Pigeons_With_One_Stone_Chase_Timer',
              completedStat: 'pf_Two_Pigeons_With_One_Stone_Chase_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Two_Pigeons_With_One_Stone_Chase',
              transform: {
                x: '-85.76',
                y: '69.76',
                z: '124.16'
              },
              description: {
                activeName: 'ID_MIS_SQ12B_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ12B_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ12B_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ12B_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ12_OBJECTIVE_3'
                ]
              }
            },
            {
              id: '48',
              displayName: 'Break And Entry Briefing',
              availableStat: 'pf_Break_And_Entry_Briefing_Available',
              timerStat: 'pf_Break_And_Entry_Briefing_Timer',
              completedStat: 'pf_Break_And_Entry_Briefing_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Break_And_Entry_Briefing',
              transform: {
                x: '-116.038345',
                y: '54.88',
                z: '238.8946'
              },
              description: {
                activeName: 'ID_MIS_SQ05_BRIEFING_NAME',
                activeDescription: 'ID_MIS_SQ05_BRIEFING_DESCRIPTION',
                availableName: 'ID_MIS_SQ05_BRIEFING_NAME',
                availableDescription: 'ID_MIS_SQ05_BRIEFING_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ05_OBJECTIVE_1',
                  'ID_MIS_SQ05_OBJECTIVE_2',
                  'ID_MIS_SQ05_OBJECTIVE_3'
                ]
              }
            },
            {
              id: '49',
              displayName: 'Break And Entry',
              availableStat: 'pf_Break_And_Entry_Available',
              timerStat: 'pf_Break_And_Entry_Timer',
              completedStat: 'pf_Break_And_Entry_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Break_And_Entry',
              transform: {
                x: '-194.6269',
                y: '54.88542',
                z: '184.411209'
              },
              description: {
                activeName: 'ID_MIS_SQ05_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ05_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ05_ACTIVE_NAME',
                availableDescription: 'ID_MIS_SQ05_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ05_OBJECTIVE_1',
                  'ID_MIS_SQ05_OBJECTIVE_2',
                  'ID_MIS_SQ05_OBJECTIVE_3',
                  'ID_MIS_SQ05_OBJECTIVE_4'
                ]
              }
            },
            {
              id: '50',
              displayName: 'Drone Works Briefing',
              availableStat: 'pf_Drone_Works_Briefing_Available',
              timerStat: 'pf_Drone_Works_Briefing_Timer',
              completedStat: 'pf_Drone_Works_Briefing_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Drone_Works_Briefing',
              transform: {
                x: '-261.097534',
                y: '51.31231',
                z: '373.522644'
              },
              description: {
                activeName: 'ID_MIS_SQ01_BRIEFING_NAME',
                activeDescription: 'ID_MIS_SQ01_BRIEFING_DESCRIPTION',
                availableName: 'ID_MIS_SQ01_BRIEFING_NAME',
                availableDescription: 'ID_MIS_SQ01_BRIEFING_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '51',
              displayName: 'Drone Works',
              availableStat: 'pf_Drone_Works_Available',
              timerStat: 'pf_Drone_Works_Timer',
              completedStat: 'pf_Drone_Works_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Drone_Works',
              transform: {
                x: '-565.4324',
                y: '49.9566',
                z: '316.2695'
              },
              description: {
                activeName: 'ID_MIS_SQ01_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ01_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ01_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ01_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ01_OBJECTIVE_0',
                  'ID_MIS_SQ01_OBJECTIVE_1',
                  'ID_MIS_SQ01_OBJECTIVE_2',
                  'ID_MIS_SQ01_OBJECTIVE_3'
                ]
              }
            },
            {
              id: '57',
              displayName: 'The Meta Grid Briefing',
              availableStat: 'pf_The_Meta_Grid_Briefing_Available',
              timerStat: 'pf_The_Meta_Grid_Briefing_Timer',
              completedStat: 'pf_The_Meta_Grid_Briefing_CompletedTime',
              completedFlag: 'pf_SilverCompleted_The_Meta_Grid_Briefing',
              transform: {
                x: '414.20697',
                y: '85.4572449',
                z: '403.8571'
              },
              description: {
                activeName: 'ID_MIS_SQ02_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ02_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ02_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ02_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '58',
              displayName: 'The Meta Grid',
              availableStat: 'pf_The_Meta_Grid_Available',
              timerStat: 'pf_The_Meta_Grid_Timer',
              completedStat: 'pf_The_Meta_Grid_CompletedTime',
              completedFlag: 'pf_SilverCompleted_The_Meta_Grid',
              transform: {
                x: '220.353653',
                y: '76.81253',
                z: '282.528473'
              },
              description: {
                activeName: 'ID_MIS_SQ02_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ02_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ02_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ02_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ02_OBJECTIVE_0',
                  'ID_MIS_SQ02_OBJECTIVE_1',
                  'ID_MIS_SQ02_OBJECTIVE_2'
                ]
              }
            },
            {
              id: '59',
              displayName: 'Caught in the Web Briefing',
              availableStat: 'pf_Caught_in_the_Web_Briefing_Available',
              timerStat: 'pf_Caught_in_the_Web_Briefing_Timer',
              completedStat: 'pf_Caught_in_the_Web_Briefing_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Caught_in_the_Web_Briefing',
              transform: {
                x: '414.20697',
                y: '85.4572449',
                z: '403.8571'
              },
              description: {
                activeName: 'ID_MIS_SQ03INTRO_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ03INTRO_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ03INTRO_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ03INTRO_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '60',
              displayName: 'Caught in the Web',
              availableStat: 'pf_Caught_in_the_Web_Available',
              timerStat: 'pf_Caught_in_the_Web_Timer',
              completedStat: 'pf_Caught_in_the_Web_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Caught_in_the_Web',
              transform: {
                x: '317.3921',
                y: '74.0625',
                z: '508.9126'
              },
              description: {
                activeName: 'ID_MIS_SQ03_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ03_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ03_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ03_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ03_OBJECTIVE_0',
                  'ID_MIS_SQ03_OBJECTIVE_1',
                  'ID_MIS_SQ03_OBJECTIVE_2'
                ]
              }
            },
            {
              id: '71',
              displayName: 'Top of the World Briefing',
              availableStat: 'pf_Top_of_the_World_Briefing_Available',
              timerStat: 'pf_Top_of_the_World_Briefing_Timer',
              completedStat: 'pf_Top_of_the_World_Briefing_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Top_of_the_World_Briefing',
              transform: {
                x: '-303.782867',
                y: '-45.69577',
                z: '742.4473'
              },
              description: {
                activeName: 'ID_MIS_SQ09_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ09_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ09_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ09_AVAILABLE_DESCRIPTION',
                objectives: null
              }
            },
            {
              id: '72',
              displayName: 'Top of the World',
              availableStat: 'pf_Top_of_the_World_Available',
              timerStat: 'pf_Top_of_the_World_Timer',
              completedStat: 'pf_Top_of_the_World_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Top_of_the_World',
              transform: {
                x: '-280.404816',
                y: '48.96012',
                z: '798.7794'
              },
              description: {
                activeName: 'ID_MIS_SQ09_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ09_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ09_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ09_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ09_OBJECTIVE_1',
                  'ID_MIS_SQ09_OBJECTIVE_2',
                  'ID_MIS_SQ09_OBJECTIVE_3'
                ]
              }
            },
            {
              id: '73',
              displayName: 'An Ear to the Ground',
              availableStat: 'pf_An_Ear_to_the_Ground_Available',
              timerStat: 'pf_An_Ear_to_the_Ground_Timer',
              completedStat: 'pf_An_Ear_to_the_Ground_CompletedTime',
              completedFlag: 'pf_SilverCompleted_An_Ear_to_the_Ground',
              transform: {
                x: '-328.587555',
                y: '9.863423',
                z: '708.0103'
              },
              description: {
                activeName: 'ID_MIS_SQ13_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ13_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ13_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ13_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ13_OBJECTIVE_1',
                  'ID_MIS_SQ13_OBJECTIVE_2',
                  'ID_MIS_SQ11_OBJECTIVE_3'
                ]
              }
            },
            {
              id: '78',
              displayName: 'Finger on the Pulse',
              availableStat: 'pf_Finger_on_the_Pulse_Available',
              timerStat: 'pf_Finger_on_the_Pulse_Timer',
              completedStat: 'pf_Finger_on_the_Pulse_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Finger_on_the_Pulse',
              transform: {
                x: '1204.5094',
                y: '68.84237',
                z: '-25.4370937'
              },
              description: {
                activeName: 'ID_MIS_SQ06_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ06_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ06_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ06_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ06_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '87',
              displayName: 'Complete Coverage',
              availableStat: 'pf_Complete_Coverage_Available',
              timerStat: 'pf_Complete_Coverage_Timer',
              completedStat: 'pf_Complete_Coverage_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Complete_Coverage',
              transform: {
                x: '-338.067474',
                y: '61.4399948',
                z: '375.766083'
              },
              description: {
                activeName: 'ID_MIS_SQ07_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ07_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ07_ACTIVE_NAME',
                availableDescription: 'ID_MIS_SQ07_ACTIVE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ07_OBJECTIVE_1'
                ]
              }
            },
            {
              id: '88',
              displayName: 'Exit Strategy',
              availableStat: 'pf_Exit_Strategy_Available',
              timerStat: 'pf_Exit_Strategy_Timer',
              completedStat: 'pf_Exit_Strategy_CompletedTime',
              completedFlag: 'pf_SilverCompleted_Exit_Strategy',
              transform: {
                x: '1095.544',
                y: '69.11996',
                z: '-28.7882767'
              },
              description: {
                activeName: 'ID_MIS_SQ11_ACTIVE_NAME',
                activeDescription: 'ID_MIS_SQ11_ACTIVE_DESCRIPTION',
                availableName: 'ID_MIS_SQ11_AVAILABLE_NAME',
                availableDescription: 'ID_MIS_SQ11_AVAILABLE_DESCRIPTION',
                objectives: [
                  'ID_MIS_SQ11_OBJECTIVE_1',
                  'ID_MIS_SQ11_OBJECTIVE_2',
                  'ID_MIS_SQ11_OBJECTIVE_3',
                  'ID_MIS_SQ11_OBJECTIVE_4'
                ]
              }
            }
          ]
        },
        function (e, t) {
          e.exports = [
            {
              id: 'pf_GreenCollectiblesMission_TheShard',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_FamilyMatters',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_Kingdom',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_PrisonerX',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_ViveLaResistance',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_Benefactor',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_SavantExtraordinaire',
              max: 2
            },
            {
              id: 'pf_GreenCollectiblesMission_BackInTheGame',
              max: 2
            },
            {
              id: 'pf_IntelCollectiblesMission_BackInTheGame',
              max: 2
            },
            {
              id: 'pf_IntelCollectiblesMission_SavantExtraordinaire',
              max: 1
            },
            {
              id: 'pf_IntelCollectiblesMission_Benefactor',
              max: 1
            },
            {
              id: 'pf_IntelCollectiblesMission_Kingdom',
              max: 1
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsBackInTheGame',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsSavantExtraordinaire',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsBenefactor',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsViveLaResistance',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsPrisonerX',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsKingdom',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsFamilyMatters',
              max: 2
            },
            {
              id: 'pf_RunnerBagsMission_RunnerBagsTheShard',
              max: 2
            }
          ]
        },
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        ,
        function (e, t, n) {
          var r = n(65),
          a = n(47),
          i = r(a, 'DataView');
          e.exports = i
        },
        function (e, t, n) {
          function r() {
          }
          var a = n(108),
          i = Object.prototype;
          r.prototype = a ? a(null) : i,
          e.exports = r
        },
        function (e, t, n) {
          var r = n(65),
          a = n(47),
          i = r(a, 'Promise');
          e.exports = i
        },
        function (e, t, n) {
          var r = n(47),
          a = r.Reflect;
          e.exports = a
        },
        function (e, t, n) {
          var r = n(65),
          a = n(47),
          i = r(a, 'Set');
          e.exports = i
        },
        function (e, t, n) {
          function r(e) {
            var t = - 1,
            n = e ? e.length : 0;
            for (this.__data__ = new a; ++t < n; ) this.push(e[t])
          }
          var a = n(273),
          i = n(1544);
          r.prototype.push = i,
          e.exports = r
        },
        function (e, t, n) {
          var r = n(65),
          a = n(47),
          i = r(a, 'WeakMap');
          e.exports = i
        },
        function (e, t) {
          function n(e, t) {
            return e.set(t[0], t[1]),
            e
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            return e.add(t),
            e
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t, n) {
            var r = n.length;
            switch (r) {
              case 0:
                return e.call(t);
              case 1:
                return e.call(t, n[0]);
              case 2:
                return e.call(t, n[0], n[1]);
              case 3:
                return e.call(t, n[0], n[1], n[2])
            }
            return e.apply(t, n)
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return !!e.length &&
            a(e, t, 0) > - 1
          }
          var a = n(1525);
          e.exports = r
        },
        function (e, t) {
          function n(e, t, n) {
            for (var r = - 1, a = e.length; ++r < a; ) if (n(t, e[r])) return !0;
            return !1
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return e &&
            a(t, i(t), e)
          }
          var a = n(281),
          i = n(57);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e) ? i(e) : {
            }
          }
          var a = n(41),
          i = Object.create;
          e.exports = r
        },
        function (e, t) {
          function n(e, t, n) {
            if ('function' != typeof e) throw new TypeError(r);
            return setTimeout(function () {
              e.apply(void 0, n)
            }, t)
          }
          var r = 'Expected a function';
          e.exports = n
        },
        function (e, t) {
          function n(e, t, n, r) {
            var a;
            return n(e, function (e, n, i) {
              return t(e, n, i) ? (a = r ? n : e, !1) : void 0
            }),
            a
          }
          e.exports = n
        },
        function (e, t, n) {
          var r = n(1556),
          a = r();
          e.exports = a
        },
        function (e, t, n) {
          function r(e, t) {
            return e &&
            a(e, t, i)
          }
          var a = n(1522),
          i = n(57);
          e.exports = r
        },
        function (e, t) {
          function n(e, t) {
            return t in Object(e)
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n) {
            if (t !== t) return a(e, n);
            for (var r = n - 1, i = e.length; ++r < i; ) if (e[r] === t) return r;
            return - 1
          }
          var a = n(1567);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r, _, v) {
            var E = l(e),
            I = l(t),
            b = m,
            y = m;
            E ||
            (b = c(e), b = b == f ? h : b),
            I ||
            (y = c(t), y = y == f ? h : y);
            var T = b == h &&
            !u(e),
            S = y == h &&
            !u(t),
            C = b == y;
            if (C && !T) return v ||
            (v = new a),
            E ||
            p(e) ? i(e, t, n, r, _, v) : o(e, t, b, n, r, _, v);
            if (!(_ & d)) {
              var D = T &&
              g.call(e, '__wrapped__'),
              A = S &&
              g.call(t, '__wrapped__');
              if (D || A) {
                var O = D ? e.value() : e,
                N = A ? t.value() : t;
                return v ||
                (v = new a),
                n(O, N, r, _, v)
              }
            }
            return C ? (v || (v = new a), s(e, t, n, r, _, v)) : !1
          }
          var a = n(101),
          i = n(476),
          o = n(1557),
          s = n(1558),
          c = n(478),
          l = n(25),
          u = n(105),
          p = n(285),
          d = 2,
          f = '[object Arguments]',
          m = '[object Array]',
          h = '[object Object]',
          _ = Object.prototype,
          g = _.hasOwnProperty;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r) {
            var c = n.length,
            l = c,
            u = !r;
            if (null == e) return !l;
            for (e = Object(e); c--; ) {
              var p = n[c];
              if (u && p[2] ? p[1] !== e[p[0]] : !(p[0] in e)) return !1
            }
            for (; ++c < l; ) {
              p = n[c];
              var d = p[0],
              f = e[d],
              m = p[1];
              if (u && p[2]) {
                if (void 0 === f && !(d in e)) return !1
              } else {
                var h = new a;
                if (r) var _ = r(f, m, d, e, t, h);
                if (!(void 0 === _ ? i(m, f, r, o | s, h) : _)) return !1
              }
            }
            return !0
          }
          var a = n(101),
          i = n(279),
          o = 1,
          s = 2;
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return r(Object(e))
          }
          var r = Object.keys;
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            e = null == e ? e : Object(e);
            var t = [];
            for (var n in e) t.push(n);
            return t
          }
          var a = n(1509),
          i = n(1572),
          o = Object.prototype,
          s = a ? a.enumerate : void 0,
          c = o.propertyIsEnumerable;
          s &&
          !c.call({
            valueOf: 1
          }, 'valueOf') &&
          (r = function (e) {
            return i(s(e))
          }),
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = i(e);
            return 1 == t.length &&
            t[0][2] ? o(t[0][0], t[0][1]) : function (n) {
              return n === e ||
              a(n, e, t)
            }
          }
          var a = n(1527),
          i = n(1561),
          o = n(484);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return s(e) &&
            c(t) ? l(u(e), t) : function (n) {
              var r = i(n, e);
              return void 0 === r &&
              r === t ? o(n, e) : a(t, r, void 0, p | d)
            }
          }
          var a = n(279),
          i = n(1589),
          o = n(1590),
          s = n(107),
          c = n(482),
          l = n(484),
          u = n(84),
          p = 1,
          d = 2;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, d, f) {
            if (e !== t) {
              if (!c(t) && !u(t)) var m = p(t);
              i(
                m ||
                t,
                function (i, c) {
                  if (m && (c = i, i = t[c]), l(i)) f ||
                  (f = new a),
                  s(e, t, c, n, r, d, f);
                   else {
                    var u = d ? d(e[c], i, c + '', e, t, f) : void 0;
                    void 0 === u &&
                    (u = i),
                    o(e, c, u)
                  }
                }
              )
            }
          }
          var a = n(101),
          i = n(275),
          o = n(460),
          s = n(1533),
          c = n(25),
          l = n(41),
          u = n(285),
          p = n(286);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r, h, _, g) {
            var v = e[n],
            E = t[n],
            I = g.get(E);
            if (I) return void a(e, n, I);
            var b = _ ? _(v, E, n + '', e, t, g) : void 0,
            y = void 0 === b;
            y &&
            (
              b = E,
              c(E) ||
              f(E) ? c(v) ? b = v : l(v) ? b = o(v) : (y = !1, b = i(E, !0)) : d(E) ||
              s(E) ? s(v) ? b = m(v) : !p(v) ||
              r &&
              u(v) ? (y = !1, b = i(E, !0)) : b = v : y = !1
            ),
            g.set(E, b),
            y &&
            h(b, E, r, _, g),
            g['delete'](E),
            a(e, n, b)
          }
          var a = n(460),
          i = n(466),
          o = n(475),
          s = n(111),
          c = n(25),
          l = n(113),
          u = n(114),
          p = n(41),
          d = n(1595),
          f = n(285),
          m = n(1603);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return e = Object(e),
            a(t, function (t, n) {
              return n in e &&
              (t[n] = e[n]),
              t
            }, {
            })
          }
          var a = n(277);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            for (var n = - 1, r = a(e), i = r.length, o = {}; ++n < i; ) {
              var s = r[n],
              c = e[s];
              t(c, s) &&
              (o[s] = c)
            }
            return o
          }
          var a = n(477);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return function (t) {
              return a(t, e)
            }
          }
          var a = n(470);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n;
            return a(e, function (e, r, a) {
              return n = t(e, r, a),
              !n
            }),
            !!n
          }
          var a = n(278);
          e.exports = r
        },
        function (e, t) {
          function n(e, t) {
            for (var n = - 1, r = Array(e); ++n < e; ) r[n] = t(n);
            return r
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return a(t, function (t) {
              return [t,
              e[t]]
            })
          }
          var a = n(102);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            if ('string' == typeof e) return e;
            if (i(e)) return c ? c.call(e) : '';
            var t = e + '';
            return '0' == t &&
            1 / e == - o ? '-0' : t
          }
          var a = n(274),
          i = n(116),
          o = 1 / 0,
          s = a ? a.prototype : void 0,
          c = s ? s.toString : void 0;
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return function (t) {
              return e(t)
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            return a(t, function (t) {
              return e[t]
            })
          }
          var a = n(102);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = e.__data__;
            if (a(t)) {
              var r = n.__data__,
              o = 'string' == typeof t ? r.string : r.hash;
              return o[t] === i
            }
            return n.has(t)
          }
          var a = n(66),
          i = '__lodash_hash_undefined__';
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__;
            if (a(e)) {
              var n = t.__data__,
              r = 'string' == typeof e ? n.string : n.hash;
              r[e] = i
            } else t.set(e, i)
          }
          var a = n(66),
          i = '__lodash_hash_undefined__';
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return e &&
            e.Object === Object ? e : null
          }
          e.exports = n
        },
        function (e, t) {
          function n(e, t) {
            if (t) return e.slice();
            var n = new e.constructor(e.length);
            return e.copy(n),
            n
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t) {
            var n = t ? a(e.buffer) : e.buffer;
            return new e.constructor(n, e.byteOffset, e.byteLength)
          }
          var a = n(280);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = t ? n(o(e), !0) : o(e);
            return i(r, a, new e.constructor)
          }
          var a = n(1513),
          i = n(277),
          o = n(483);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            var t = new e.constructor(e.source, r.exec(e));
            return t.lastIndex = e.lastIndex,
            t
          }
          var r = /\w*$/;
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = t ? n(o(e), !0) : o(e);
            return i(r, a, new e.constructor)
          }
          var a = n(1514),
          i = n(277),
          o = n(485);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return o ? Object(o.call(e)) : {
            }
          }
          var a = n(274),
          i = a ? a.prototype : void 0,
          o = i ? i.valueOf : void 0;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = t ? a(e.buffer) : e.buffer;
            return new e.constructor(n, e.byteOffset, e.length)
          }
          var a = n(280);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return a(e, i(e), t)
          }
          var a = n(281),
          i = n(282);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return i(
              function (t, n) {
                var r = - 1,
                i = n.length,
                o = i > 1 ? n[i - 1] : void 0,
                s = i > 2 ? n[2] : void 0;
                for (
                  o = 'function' == typeof o ? (i--, o) : void 0,
                  s &&
                  a(n[0], n[1], s) &&
                  (o = 3 > i ? void 0 : o, i = 1),
                  t = Object(t);
                  ++r < i;
                ) {
                  var c = n[r];
                  c &&
                  e(t, c, r, o)
                }
                return t
              }
            )
          }
          var a = n(481),
          i = n(117);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return function (n, r) {
              if (null == n) return n;
              if (!a(n)) return e(n, r);
              for (
                var i = n.length,
                o = t ? i : - 1,
                s = Object(n);
                (t ? o-- : ++o < i) &&
                r(s[o], o, s) !== !1;
              );
              return n
            }
          }
          var a = n(112);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return function (t, n, r) {
              for (var a = - 1, i = Object(t), o = r(t), s = o.length; s--; ) {
                var c = o[e ? s : ++a];
                if (n(i[c], c, i) === !1) break
              }
              return t
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n, r, a, y, S) {
            switch (n) {
              case b:
                if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                e = e.buffer,
                t = t.buffer;
              case I:
                return !(e.byteLength != t.byteLength || !r(new i(e), new i(t)));
              case p:
              case d:
                return + e == + t;
              case f:
                return e.name == t.name &&
                e.message == t.message;
              case h:
                return e != + e ? t != + t : e == + t;
              case _:
              case v:
                return e == t + '';
              case m:
                var C = s;
              case g:
                var D = y & u;
                if (C || (C = c), e.size != t.size && !D) return !1;
                var A = S.get(e);
                return A ? A == t : (y |= l, S.set(e, t), o(C(e), C(t), r, a, y, S));
              case E:
                if (T) return T.call(e) == T.call(t)
            }
            return !1
          }
          var a = n(274),
          i = n(458),
          o = n(476),
          s = n(483),
          c = n(485),
          l = 1,
          u = 2,
          p = '[object Boolean]',
          d = '[object Date]',
          f = '[object Error]',
          m = '[object Map]',
          h = '[object Number]',
          _ = '[object RegExp]',
          g = '[object Set]',
          v = '[object String]',
          E = '[object Symbol]',
          I = '[object ArrayBuffer]',
          b = '[object DataView]',
          y = a ? a.prototype : void 0,
          T = y ? y.valueOf : void 0;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n, r, s, c) {
            var l = s & o,
            u = i(e),
            p = u.length,
            d = i(t),
            f = d.length;
            if (p != f && !l) return !1;
            for (var m = p; m--; ) {
              var h = u[m];
              if (!(l ? h in t : a(t, h))) return !1
            }
            var _ = c.get(e);
            if (_) return _ == t;
            var g = !0;
            c.set(e, t);
            for (var v = l; ++m < p; ) {
              h = u[m];
              var E = e[h],
              I = t[h];
              if (r) var b = l ? r(I, E, h, t, e, c) : r(E, I, h, e, t, c);
              if (!(void 0 === b ? E === I ||
              n(E, I, r, s, c) : b)) {
                g = !1;
                break
              }
              v ||
              (v = 'constructor' == h)
            }
            if (g && !v) {
              var y = e.constructor,
              T = t.constructor;
              y != T &&
              'constructor' in e &&
              'constructor' in t &&
              !(
                'function' == typeof y &&
                y instanceof y &&
                'function' == typeof T &&
                T instanceof T
              ) &&
              (g = !1)
            }
            return c['delete'](e),
            g
          }
          var a = n(472),
          i = n(57),
          o = 2;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e, o, i)
          }
          var a = n(471),
          i = n(282),
          o = n(57);
          e.exports = r
        },
        function (e, t, n) {
          var r = n(473),
          a = r('length');
          e.exports = a
        },
        function (e, t, n) {
          function r(e) {
            for (var t = i(e), n = t.length; n--; ) t[n][2] = a(t[n][1]);
            return t
          }
          var a = n(482),
          i = n(1602);
          e.exports = r
        },
        function (e, t, n) {
          var r = n(276),
          a = n(104),
          i = n(282),
          o = Object.getOwnPropertySymbols,
          s = o ? function (e) {
            for (var t = []; e; ) r(t, i(e)),
            e = a(e);
            return t
          }
           : i;
          e.exports = s
        },
        function (e, t, n) {
          function r(e, t, n) {
            t = c(t, e) ? [
              t
            ] : a(t);
            for (var r, d = - 1, f = t.length; ++d < f; ) {
              var m = p(t[d]);
              if (!(r = null != e && n(e, m))) break;
              e = e[m]
            }
            if (r) return r;
            var f = e ? e.length : 0;
            return !!f &&
            l(f) &&
            s(m, f) &&
            (o(e) || u(e) || i(e))
          }
          var a = n(474),
          i = n(111),
          o = n(25),
          s = n(106),
          c = n(107),
          l = n(115),
          u = n(487),
          p = n(84);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return a(e, t) &&
            delete e[t]
          }
          var a = n(479);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            if (a) {
              var n = e[t];
              return n === i ? void 0 : n
            }
            return s.call(e, t) ? e[t] : void 0
          }
          var a = n(108),
          i = '__lodash_hash_undefined__',
          o = Object.prototype,
          s = o.hasOwnProperty;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            e[t] = a &&
            void 0 === n ? i : n
          }
          var a = n(108),
          i = '__lodash_hash_undefined__';
          e.exports = r
        },
        function (e, t) {
          function n(e, t, n) {
            for (var r = e.length, a = t + (n ? 0 : - 1); n ? a-- : ++a < r; ) {
              var i = e[a];
              if (i !== i) return a
            }
            return - 1
          }
          e.exports = n
        },
        function (e, t) {
          function n(e) {
            var t = e.length,
            n = e.constructor(t);
            return t &&
            'string' == typeof e[0] &&
            a.call(e, 'index') &&
            (n.index = e.index, n.input = e.input),
            n
          }
          var r = Object.prototype,
          a = r.hasOwnProperty;
          e.exports = n
        },
        function (e, t, n) {
          function r(e, t, n, r) {
            var w = e.constructor;
            switch (t) {
              case E:
                return a(e);
              case p:
              case d:
                return new w( + e);
              case I:
                return i(e, r);
              case b:
              case y:
              case T:
              case S:
              case C:
              case D:
              case A:
              case O:
              case N:
                return u(e, r);
              case f:
                return o(e, r, n);
              case m:
              case g:
                return new w(e);
              case h:
                return s(e);
              case _:
                return c(e, r, n);
              case v:
                return l(e)
            }
          }
          var a = n(280),
          i = n(1547),
          o = n(1548),
          s = n(1549),
          c = n(1550),
          l = n(1551),
          u = n(1552),
          p = '[object Boolean]',
          d = '[object Date]',
          f = '[object Map]',
          m = '[object Number]',
          h = '[object RegExp]',
          _ = '[object Set]',
          g = '[object String]',
          v = '[object Symbol]',
          E = '[object ArrayBuffer]',
          I = '[object DataView]',
          b = '[object Float32Array]',
          y = '[object Float64Array]',
          T = '[object Int8Array]',
          S = '[object Int16Array]',
          C = '[object Int32Array]',
          D = '[object Uint8Array]',
          A = '[object Uint8ClampedArray]',
          O = '[object Uint16Array]',
          N = '[object Uint32Array]';
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return 'function' != typeof e.constructor ||
            o(e) ? {
            }
             : a(i(e))
          }
          var a = n(1519),
          i = n(104),
          o = n(283);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return o(e) &&
            (i(e) || a(e))
          }
          var a = n(111),
          i = n(25),
          o = n(113);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            for (var t, n = []; !(t = e.next()).done; ) n.push(t.value);
            return n
          }
          e.exports = n
        },
        function (e, t, n) {
          function r() {
            this.__data__ = {
              hash: new a,
              map: i ? new i : [],
              string: new a
            }
          }
          var a = n(1507),
          i = n(64);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__;
            return s(e) ? o('string' == typeof e ? t.string : t.hash, e) : a ? t.map['delete'](e) : i(t.map, e)
          }
          var a = n(64),
          i = n(462),
          o = n(1564),
          s = n(66);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__;
            return s(e) ? o('string' == typeof e ? t.string : t.hash, e) : a ? t.map.get(e) : i(t.map, e)
          }
          var a = n(64),
          i = n(463),
          o = n(1565),
          s = n(66);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__;
            return s(e) ? o('string' == typeof e ? t.string : t.hash, e) : a ? t.map.has(e) : i(t.map, e)
          }
          var a = n(64),
          i = n(464),
          o = n(479),
          s = n(66);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = this.__data__;
            return s(e) ? o('string' == typeof e ? n.string : n.hash, e, t) : a ? n.map.set(e, t) : i(n.map, e, t),
            this
          }
          var a = n(64),
          i = n(465),
          o = n(1566),
          s = n(66);
          e.exports = r
        },
        function (e, t) {
          function n() {
            this.__data__ = {
              array: [],
              map: null
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__,
            n = t.array;
            return n ? a(n, e) : t.map['delete'](e)
          }
          var a = n(462);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__,
            n = t.array;
            return n ? a(n, e) : t.map.get(e)
          }
          var a = n(463);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            var t = this.__data__,
            n = t.array;
            return n ? a(n, e) : t.map.has(e)
          }
          var a = n(464);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            var n = this.__data__,
            r = n.array;
            r &&
            (r.length < o - 1 ? i(r, e, t) : (n.array = null, n.map = new a(r)));
            var s = n.map;
            return s &&
            s.set(e, t),
            this
          }
          var a = n(273),
          i = n(465),
          o = 200;
          e.exports = r
        },
        function (e, t, n) {
          var r = n(1596),
          a = n(1604),
          i = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g,
          o = /\\(\\)?/g,
          s = r(
            function (e) {
              var t = [];
              return a(e).replace(i, function (e, n, r, a) {
                t.push(r ? a.replace(o, '$1') : n || e)
              }),
              t
            }
          );
          e.exports = s
        },
        function (e, t, n) {
          function r(e) {
            return a(e, !0, !0)
          }
          var a = n(466);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return function () {
              return e
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          var r = n(467),
          a = n(469),
          i = n(113),
          o = n(117),
          s = o(function (e, t) {
            return i(e) ? r(e, a(t, 1, i, !0)) : []
          });
          e.exports = s
        },
        function (e, t, n) {
          function r(e, t) {
            return e &&
            e.length ? a(e, i(t, 3)) : - 1
          }
          var a = n(468),
          i = n(83);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return 'function' == typeof t &&
            s(e) ? a(e, t) : i(e, o(t))
          }
          var a = n(275),
          i = n(278),
          o = n(83),
          s = n(25);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = null == e ? void 0 : a(e, t);
            return void 0 === r ? n : r
          }
          var a = n(470);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            return null != e &&
            i(e, t, a)
          }
          var a = n(1524),
          i = n(1563);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return e
          }
          e.exports = n
        },
        function (e, t, n) {
          (
            function (e) {
              var r = n(1585),
              a = n(47),
              i = {
                'function': !0,
                object: !0
              },
              o = i[typeof t] &&
              t &&
              !t.nodeType ? t : void 0,
              s = i[typeof e] &&
              e &&
              !e.nodeType ? e : void 0,
              c = s &&
              s.exports === o ? o : void 0,
              l = c ? a.Buffer : void 0,
              u = l ? function (e) {
                return e instanceof l
              }
               : r(!1);
              e.exports = u
            }
          ).call(t, n(42) (e))
        },
        function (e, t, n) {
          function r(e) {
            if (!o(e)) return !1;
            var t = a(e) ||
            i(e) ? f : l;
            return t.test(s(e))
          }
          var a = n(114),
          i = n(105),
          o = n(41),
          s = n(486),
          c = /[\\^$.*+?()[\]{}|]/g,
          l = /^\[object .+?Constructor\]$/,
          u = Object.prototype,
          p = Function.prototype.toString,
          d = u.hasOwnProperty,
          f = RegExp(
            '^' + p.call(d).replace(c, '\\$&').replace(
              /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
              '$1.*?'
            ) + '$'
          );
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return 'number' == typeof e ||
            a(e) &&
            s.call(e) == i
          }
          var a = n(56),
          i = '[object Number]',
          o = Object.prototype,
          s = o.toString;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            if (!o(e) || d.call(e) != s || i(e)) return !1;
            var t = a(e);
            if (null === t) return !0;
            var n = u.call(t, 'constructor') &&
            t.constructor;
            return 'function' == typeof n &&
            n instanceof n &&
            l.call(n) == p
          }
          var a = n(104),
          i = n(105),
          o = n(56),
          s = '[object Object]',
          c = Object.prototype,
          l = Function.prototype.toString,
          u = c.hasOwnProperty,
          p = l.call(Object),
          d = c.toString;
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t) {
            if ('function' != typeof e || t && 'function' != typeof t) throw new TypeError(i);
            var n = function () {
              var r = arguments,
              a = t ? t.apply(this, r) : r[0],
              i = n.cache;
              if (i.has(a)) return i.get(a);
              var o = e.apply(this, r);
              return n.cache = i.set(a, o),
              o
            };
            return n.cache = new (r.Cache || a),
            n
          }
          var a = n(273),
          i = 'Expected a function';
          r.Cache = a,
          e.exports = r
        },
        function (e, t, n) {
          var r = n(1532),
          a = n(1554),
          i = a(function (e, t, n) {
            r(e, t, n)
          });
          e.exports = i
        },
        function (e, t, n) {
          function r(e) {
            return o(e) ? a(s(e)) : i(e)
          }
          var a = n(473),
          i = n(1536),
          o = n(107),
          s = n(84);
          e.exports = r
        },
        function (e, t, n) {
          function r(e, t, n) {
            var r = s(e) ? a : o;
            return n &&
            c(e, t, n) &&
            (t = void 0),
            r(e, i(t, 3))
          }
          var a = n(459),
          i = n(83),
          o = n(1537),
          s = n(25),
          c = n(481);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            if (!e) return 0 === e ? e : 0;
            if (e = a(e), e === i || e === - i) {
              var t = 0 > e ? - 1 : 1;
              return t * o
            }
            var n = e % 1;
            return e === e ? n ? e - n : e : 0
          }
          var a = n(1601),
          i = 1 / 0,
          o = 1.7976931348623157e+308;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            if ('number' == typeof e) return e;
            if (o(e)) return s;
            if (i(e)) {
              var t = a(e.valueOf) ? e.valueOf() : e;
              e = i(t) ? t + '' : t
            }
            if ('string' != typeof e) return 0 === e ? e : + e;
            e = e.replace(c, '');
            var n = u.test(e);
            return n ||
            p.test(e) ? d(e.slice(2), n ? 2 : 8) : l.test(e) ? s : + e
          }
          var a = n(114),
          i = n(41),
          o = n(116),
          s = NaN,
          c = /^\s+|\s+$/g,
          l = /^[-+]0x[0-9a-f]+$/i,
          u = /^0b[01]+$/i,
          p = /^0o[0-7]+$/i,
          d = parseInt;
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e, i(e))
          }
          var a = n(1539),
          i = n(57);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e, i(e))
          }
          var a = n(281),
          i = n(286);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return null == e ? '' : a(e)
          }
          var a = n(1540);
          e.exports = r
        },
        function (e, t, n) {
          e.exports = n(1678)
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            var n = {};
            for (var r in e) t.indexOf(r) >= 0 ||
            Object.prototype.hasOwnProperty.call(e, r) &&
            (n[r] = e[r]);
            return n
          }
          function i(e) {
            return d['default'].createElement('div', e)
          }
          function o(e) {
            var t = e.style,
            n = a(e, [
              'style'
            ]),
            r = u({
            }, t, {
              right: 2,
              bottom: 2,
              left: 2,
              borderRadius: 3,
              cursor: 'pointer'
            });
            return d['default'].createElement('div', u({
              style: r
            }, n))
          }
          function s(e) {
            var t = e.style,
            n = a(e, [
              'style'
            ]),
            r = u({
            }, t, {
              right: 2,
              bottom: 2,
              top: 2,
              borderRadius: 3,
              cursor: 'pointer'
            });
            return d['default'].createElement('div', u({
              style: r
            }, n))
          }
          function c(e) {
            var t = e.style,
            n = a(e, [
              'style'
            ]),
            r = u({
            }, t, {
              cursor: 'pointer',
              borderRadius: 'inherit',
              backgroundColor: 'rgba(0,0,0,.2)'
            });
            return d['default'].createElement('div', u({
              style: r
            }, n))
          }
          function l(e) {
            var t = e.style,
            n = a(e, [
              'style'
            ]),
            r = u({
            }, t, {
              cursor: 'pointer',
              borderRadius: 'inherit',
              backgroundColor: 'rgba(0,0,0,.2)'
            });
            return d['default'].createElement('div', u({
              style: r
            }, n))
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          });
          var u = Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n) Object.prototype.hasOwnProperty.call(n, r) &&
              (e[r] = n[r])
            }
            return e
          };
          t.renderViewDefault = i,
          t.renderTrackHorizontalDefault = o,
          t.renderTrackVerticalDefault = s,
          t.renderThumbHorizontalDefault = c,
          t.renderThumbVerticalDefault = l;
          var p = n(2),
          d = r(p)
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a(e, t) {
            var n = {};
            for (var r in e) t.indexOf(r) >= 0 ||
            Object.prototype.hasOwnProperty.call(e, r) &&
            (n[r] = e[r]);
            return n
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          });
          var i = Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n) Object.prototype.hasOwnProperty.call(n, r) &&
              (e[r] = n[r])
            }
            return e
          },
          o = n(1619),
          s = r(o),
          c = n(492),
          l = r(c),
          u = n(2),
          p = r(u),
          d = n(1612),
          f = r(d),
          m = n(1613),
          h = r(m),
          _ = n(1611),
          g = r(_),
          v = n(1610),
          E = r(v),
          I = n(1608),
          b = n(1606);
          t['default'] = (0, u.createClass) ({
            displayName: 'Scrollbars',
            propTypes: {
              onScroll: u.PropTypes.func,
              onScrollFrame: u.PropTypes.func,
              onScrollStart: u.PropTypes.func,
              onScrollStop: u.PropTypes.func,
              renderView: u.PropTypes.func,
              renderTrackHorizontal: u.PropTypes.func,
              renderTrackVertical: u.PropTypes.func,
              renderThumbHorizontal: u.PropTypes.func,
              renderThumbVertical: u.PropTypes.func,
              autoHide: u.PropTypes.bool,
              autoHideTimeout: u.PropTypes.number,
              autoHideDuration: u.PropTypes.number,
              thumbSize: u.PropTypes.number,
              thumbMinSize: u.PropTypes.number,
              universal: u.PropTypes.bool,
              style: u.PropTypes.object,
              children: u.PropTypes.node
            },
            getDefaultProps: function () {
              return {
                renderView: b.renderViewDefault,
                renderTrackHorizontal: b.renderTrackHorizontalDefault,
                renderTrackVertical: b.renderTrackVerticalDefault,
                renderThumbHorizontal: b.renderThumbHorizontalDefault,
                renderThumbVertical: b.renderThumbVerticalDefault,
                autoHide: !1,
                autoHideTimeout: 1000,
                autoHideDuration: 200,
                thumbMinSize: 30,
                universal: !1
              }
            },
            getInitialState: function () {
              return {
                didMountUniversal: !1
              }
            },
            componentDidMount: function () {
              this.addListeners(),
              this.update(),
              this.componentDidMountUniversal()
            },
            componentDidMountUniversal: function () {
              var e = this.props.universal;
              e &&
              this.setState({
                didMountUniversal: !0
              })
            },
            componentDidUpdate: function () {
              this.update()
            },
            componentWillUnmount: function () {
              this.removeListeners(),
              (0, o.cancel) (this.requestFrame),
              clearTimeout(this.hideTracksTimeout),
              clearInterval(this.detectScrollingInterval)
            },
            getScrollLeft: function () {
              var e = this.refs.view;
              return e.scrollLeft
            },
            getScrollTop: function () {
              var e = this.refs.view;
              return e.scrollTop
            },
            getScrollWidth: function () {
              var e = this.refs.view;
              return e.scrollWidth
            },
            getScrollHeight: function () {
              var e = this.refs.view;
              return e.scrollHeight
            },
            getClientWidth: function () {
              var e = this.refs.view;
              return e.clientWidth
            },
            getClientHeight: function () {
              var e = this.refs.view;
              return e.clientHeight
            },
            getValues: function () {
              var e = this.refs.view,
              t = e.scrollLeft,
              n = e.scrollTop,
              r = e.scrollWidth,
              a = e.scrollHeight,
              i = e.clientWidth,
              o = e.clientHeight;
              return {
                left: t / (r - i) ||
                0,
                top: n / (a - o) ||
                0,
                scrollLeft: t,
                scrollTop: n,
                scrollWidth: r,
                scrollHeight: a,
                clientWidth: i,
                clientHeight: o
              }
            },
            getThumbHorizontalWidth: function () {
              var e = this.props,
              t = e.thumbSize,
              n = e.thumbMinSize,
              r = this.refs,
              a = r.view,
              i = r.trackHorizontal,
              o = a.scrollWidth,
              s = a.clientWidth,
              c = (0, g['default']) (i),
              l = s / o * c;
              return c === l ? 0 : t ? t : Math.max(l, n)
            },
            getThumbVerticalHeight: function () {
              var e = this.props,
              t = e.thumbSize,
              n = e.thumbMinSize,
              r = this.refs,
              a = r.view,
              i = r.trackVertical,
              o = a.scrollHeight,
              s = a.clientHeight,
              c = (0, E['default']) (i),
              l = s / o * c;
              return c === l ? 0 : t ? t : Math.max(l, n)
            },
            getScrollLeftForOffset: function (e) {
              var t = this.refs,
              n = t.view,
              r = t.trackHorizontal,
              a = n.scrollWidth,
              i = n.clientWidth,
              o = (0, g['default']) (r),
              s = this.getThumbHorizontalWidth();
              return e / (o - s) * (a - i)
            },
            getScrollTopForOffset: function (e) {
              var t = this.refs,
              n = t.view,
              r = t.trackVertical,
              a = n.scrollHeight,
              i = n.clientHeight,
              o = (0, E['default']) (r),
              s = this.getThumbVerticalHeight();
              return e / (o - s) * (a - i)
            },
            scrollLeft: function () {
              var e = arguments.length <= 0 ||
              void 0 === arguments[0] ? 0 : arguments[0],
              t = this.refs.view;
              t.scrollLeft = e
            },
            scrollTop: function () {
              var e = arguments.length <= 0 ||
              void 0 === arguments[0] ? 0 : arguments[0],
              t = this.refs.view;
              t.scrollTop = e
            },
            scrollToLeft: function () {
              var e = this.refs.view;
              e.scrollLeft = 0
            },
            scrollToTop: function () {
              var e = this.refs.view;
              e.scrollTop = 0
            },
            scrollToRight: function () {
              var e = this.refs.view;
              e.scrollLeft = e.scrollWidth
            },
            scrollToBottom: function () {
              var e = this.refs.view;
              e.scrollTop = e.scrollHeight
            },
            addListeners: function () {
              if ('undefined' != typeof document) {
                var e = this.refs,
                t = e.view,
                n = e.trackHorizontal,
                r = e.trackVertical,
                a = e.thumbHorizontal,
                i = e.thumbVertical;
                t.addEventListener('scroll', this.handleScroll),
                (0, f['default']) () &&
                (
                  n.addEventListener('mouseenter', this.handleTrackMouseEnter),
                  n.addEventListener('mouseleave', this.handleTrackMouseLeave),
                  n.addEventListener('mousedown', this.handleHorizontalTrackMouseDown),
                  r.addEventListener('mouseenter', this.handleTrackMouseEnter),
                  r.addEventListener('mouseleave', this.handleTrackMouseLeave),
                  r.addEventListener('mousedown', this.handleVerticalTrackMouseDown),
                  a.addEventListener('mousedown', this.handleHorizontalThumbMouseDown),
                  i.addEventListener('mousedown', this.handleVerticalThumbMouseDown),
                  window.addEventListener('resize', this.handleWindowResize)
                )
              }
            },
            removeListeners: function () {
              if ('undefined' != typeof document) {
                var e = this.refs,
                t = e.view,
                n = e.trackHorizontal,
                r = e.trackVertical,
                a = e.thumbHorizontal,
                i = e.thumbVertical;
                t.removeEventListener('scroll', this.handleScroll),
                (0, f['default']) () &&
                (
                  n.removeEventListener('mouseenter', this.handleTrackMouseEnter),
                  n.removeEventListener('mouseleave', this.handleTrackMouseLeave),
                  n.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown),
                  r.removeEventListener('mouseenter', this.handleTrackMouseEnter),
                  r.removeEventListener('mouseleave', this.handleTrackMouseLeave),
                  r.removeEventListener('mousedown', this.handleVerticalTrackMouseDown),
                  a.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown),
                  i.removeEventListener('mousedown', this.handleVerticalThumbMouseDown),
                  window.removeEventListener('resize', this.handleWindowResize),
                  this.teardownDragging()
                )
              }
            },
            handleScroll: function (e) {
              var t = this,
              n = this.props,
              r = n.onScroll,
              a = n.onScrollFrame;
              r &&
              r(e),
              this.update(
                function (e) {
                  var n = e.scrollLeft,
                  r = e.scrollTop;
                  t.viewScrollLeft = n,
                  t.viewScrollTop = r,
                  a &&
                  a(e)
                }
              ),
              this.detectScrolling()
            },
            handleScrollStart: function () {
              var e = this.props.onScrollStart;
              e &&
              e(),
              this.handleScrollStartAutoHide()
            },
            handleScrollStartAutoHide: function () {
              var e = this.props.autoHide;
              e &&
              this.showTracks()
            },
            handleScrollStop: function () {
              var e = this.props.onScrollStop;
              e &&
              e(),
              this.handleScrollStopAutoHide()
            },
            handleScrollStopAutoHide: function () {
              var e = this.props.autoHide;
              e &&
              this.hideTracks()
            },
            handleWindowResize: function () {
              this.update()
            },
            handleHorizontalTrackMouseDown: function () {
              var e = this.refs.view,
              t = event,
              n = t.target,
              r = t.clientX,
              a = n.getBoundingClientRect(),
              i = a.left,
              o = this.getThumbHorizontalWidth(),
              s = Math.abs(i - r) - o / 2;
              e.scrollLeft = this.getScrollLeftForOffset(s)
            },
            handleVerticalTrackMouseDown: function (e) {
              var t = this.refs.view,
              n = e.target,
              r = e.clientY,
              a = n.getBoundingClientRect(),
              i = a.top,
              o = this.getThumbVerticalHeight(),
              s = Math.abs(i - r) - o / 2;
              t.scrollTop = this.getScrollTopForOffset(s)
            },
            handleHorizontalThumbMouseDown: function (e) {
              this.handleDragStart(e);
              var t = e.target,
              n = e.clientX,
              r = t.offsetWidth,
              a = t.getBoundingClientRect(),
              i = a.left;
              this.prevPageX = r - (n - i)
            },
            handleVerticalThumbMouseDown: function (e) {
              this.handleDragStart(e);
              var t = e.target,
              n = e.clientY,
              r = t.offsetHeight,
              a = t.getBoundingClientRect(),
              i = a.top;
              this.prevPageY = r - (n - i)
            },
            setupDragging: function () {
              (0, l['default']) (document.body, I.disableSelectStyle),
              document.addEventListener('mousemove', this.handleDrag),
              document.addEventListener('mouseup', this.handleDragEnd),
              document.onselectstart = h['default']
            },
            teardownDragging: function () {
              (0, l['default']) (document.body, I.disableSelectStyleReset),
              document.removeEventListener('mousemove', this.handleDrag),
              document.removeEventListener('mouseup', this.handleDragEnd),
              document.onselectstart = void 0
            },
            handleDragStart: function (e) {
              this.dragging = !0,
              e.stopImmediatePropagation(),
              this.setupDragging()
            },
            handleDrag: function (e) {
              if (this.prevPageX) {
                var t = e.clientX,
                n = this.refs,
                r = n.view,
                a = n.trackHorizontal,
                i = a.getBoundingClientRect(),
                o = i.left,
                s = this.getThumbHorizontalWidth(),
                c = s - this.prevPageX,
                l = - o + t - c;
                r.scrollLeft = this.getScrollLeftForOffset(l)
              }
              if (this.prevPageY) {
                var u = e.clientY,
                p = this.refs,
                r = p.view,
                d = p.trackVertical,
                f = d.getBoundingClientRect(),
                m = f.top,
                h = this.getThumbVerticalHeight(),
                c = h - this.prevPageY,
                l = - m + u - c;
                r.scrollTop = this.getScrollTopForOffset(l)
              }
              return !1
            },
            handleDragEnd: function () {
              this.dragging = !1,
              this.prevPageX = this.prevPageY = 0,
              this.teardownDragging(),
              this.handleDragEndAutoHide()
            },
            handleDragEndAutoHide: function () {
              var e = this.props.autoHide;
              e &&
              this.hideTracks()
            },
            handleTrackMouseEnter: function () {
              this.trackMouseOver = !0,
              this.handleTrackMouseEnterAutoHide()
            },
            handleTrackMouseEnterAutoHide: function () {
              var e = this.props.autoHide;
              e &&
              this.showTracks()
            },
            handleTrackMouseLeave: function () {
              this.trackMouseOver = !1,
              this.handleTrackMouseLeaveAutoHide()
            },
            handleTrackMouseLeaveAutoHide: function () {
              var e = this.props.autoHide;
              e &&
              this.hideTracks()
            },
            showTracks: function () {
              var e = this.refs,
              t = e.trackHorizontal,
              n = e.trackVertical;
              clearTimeout(this.hideTracksTimeout),
              (0, l['default']) (t, {
                opacity: 1
              }),
              (0, l['default']) (n, {
                opacity: 1
              })
            },
            hideTracks: function () {
              if (!this.dragging && !this.scrolling && !this.trackMouseOver) {
                var e = this.props.autoHideTimeout,
                t = this.refs,
                n = t.trackHorizontal,
                r = t.trackVertical;
                clearTimeout(this.hideTracksTimeout),
                this.hideTracksTimeout = setTimeout(
                  function () {
                    (0, l['default']) (n, {
                      opacity: 0
                    }),
                    (0, l['default']) (r, {
                      opacity: 0
                    })
                  },
                  e
                )
              }
            },
            detectScrolling: function () {
              var e = this;
              this.scrolling ||
              (
                this.scrolling = !0,
                this.handleScrollStart(),
                this.detectScrollingInterval = setInterval(
                  function () {
                    e.lastViewScrollLeft === e.viewScrollLeft &&
                    e.lastViewScrollTop === e.viewScrollTop &&
                    (
                      clearInterval(e.detectScrollingInterval),
                      e.scrolling = !1,
                      e.handleScrollStop()
                    ),
                    e.lastViewScrollLeft = e.viewScrollLeft,
                    e.lastViewScrollTop = e.viewScrollTop
                  },
                  100
                )
              )
            },
            raf: function (e) {
              var t = this;
              this.requestFrame &&
              s['default'].cancel(this.requestFrame),
              this.requestFrame = (0, s['default']) (function () {
                t.requestFrame = void 0,
                e()
              })
            },
            update: function (e) {
              var t = this;
              this.raf(
                function () {
                  var n = t.getValues();
                  if ((0, f['default']) ()) {
                    var r = t.refs,
                    a = r.thumbHorizontal,
                    i = r.thumbVertical,
                    o = r.trackHorizontal,
                    s = r.trackVertical,
                    c = n.scrollLeft,
                    u = n.clientWidth,
                    p = n.scrollWidth,
                    d = (0, g['default']) (o),
                    m = t.getThumbHorizontalWidth(),
                    h = c / (p - u) * (d - m),
                    _ = {
                      width: m,
                      transform: 'translateX(' + h + 'px)'
                    },
                    v = n.scrollTop,
                    I = n.clientHeight,
                    b = n.scrollHeight,
                    y = (0, E['default']) (s),
                    T = t.getThumbVerticalHeight(),
                    S = v / (b - I) * (y - T),
                    C = {
                      height: T,
                      transform: 'translateY(' + S + 'px)'
                    };
                    (0, l['default']) (a, _),
                    (0, l['default']) (i, C)
                  }
                  'function' == typeof e &&
                  e(n)
                }
              )
            },
            render: function () {
              var e = (0, f['default']) (),
              t = this.props,
              n = (
                t.onScroll,
                t.onScrollFrame,
                t.onScrollStart,
                t.onScrollStop,
                t.renderView
              ),
              r = t.renderTrackHorizontal,
              o = t.renderTrackVertical,
              s = t.renderThumbHorizontal,
              c = t.renderThumbVertical,
              l = t.autoHide,
              d = (t.autoHideTimeout, t.autoHideDuration),
              m = (t.thumbSize, t.thumbMinSize, t.universal),
              h = t.style,
              _ = t.children,
              g = a(
                t,
                [
                  'onScroll',
                  'onScrollFrame',
                  'onScrollStart',
                  'onScrollStop',
                  'renderView',
                  'renderTrackHorizontal',
                  'renderTrackVertical',
                  'renderThumbHorizontal',
                  'renderThumbVertical',
                  'autoHide',
                  'autoHideTimeout',
                  'autoHideDuration',
                  'thumbSize',
                  'thumbMinSize',
                  'universal',
                  'style',
                  'children'
                ]
              ),
              v = this.state.didMountUniversal,
              E = i({
              }, I.containerStyleDefault, h),
              b = i({
              }, I.viewStyleDefault, e ? {
                right: - e,
                bottom: - e
              }
               : {
                right: 0,
                bottom: 0
              }, m && !v ? I.viewStyleUniversalInitial : void 0),
              y = i({
              }, I.trackHorizontalStyleDefault, l ? {
                transition: 'opacity ' + d + 'ms',
                opacity: 0
              }
               : void 0, !e || m && !v ? {
                display: 'none'
              }
               : void 0),
              T = i({
              }, I.trackVerticalStyleDefault, l ? {
                transition: 'opacity ' + d + 'ms',
                opacity: 0
              }
               : void 0, !e || m && !v ? {
                display: 'none'
              }
               : void 0);
              return p['default'].createElement(
                'div',
                i({
                }, g, {
                  style: E,
                  ref: 'container'
                }),
                (0, u.cloneElement) (n({
                  style: b
                }), {
                  ref: 'view'
                }, _),
                (0, u.cloneElement) (
                  r({
                    style: y
                  }),
                  {
                    ref: 'trackHorizontal'
                  },
                  (0, u.cloneElement) (
                    s({
                      style: I.thumbHorizontalStyleDefault
                    }),
                    {
                      ref: 'thumbHorizontal'
                    }
                  )
                ),
                (0, u.cloneElement) (
                  o({
                    style: T
                  }),
                  {
                    ref: 'trackVertical'
                  },
                  (0, u.cloneElement) (c({
                    style: I.thumbVerticalStyleDefault
                  }), {
                    ref: 'thumbVertical'
                  })
                )
              )
            }
          })
        },
        function (e, t) {
          'use strict';
          Object.defineProperty(t, '__esModule', {
            value: !0
          });
          t.containerStyleDefault = {
            position: 'relative',
            overflow: 'hidden',
            width: '100%',
            height: '100%'
          },
          t.viewStyleDefault = {
            position: 'absolute',
            top: 0,
            left: 0,
            overflow: 'scroll',
            WebkitOverflowScrolling: 'touch'
          },
          t.viewStyleUniversalInitial = {
            right: 0,
            bottom: 0,
            overflow: 'hidden'
          },
          t.trackHorizontalStyleDefault = {
            position: 'absolute',
            height: 6
          },
          t.trackVerticalStyleDefault = {
            position: 'absolute',
            width: 6
          },
          t.thumbHorizontalStyleDefault = {
            position: 'relative',
            display: 'block',
            height: '100%'
          },
          t.thumbVerticalStyleDefault = {
            position: 'relative',
            display: 'block',
            width: '100%'
          },
          t.disableSelectStyle = {
            userSelect: 'none'
          },
          t.disableSelectStyleReset = {
            userSelect: ''
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          }),
          t.Scrollbars = void 0;
          var a = n(1607),
          i = r(a);
          t['default'] = i['default'],
          t.Scrollbars = i['default']
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = e.clientHeight,
            n = getComputedStyle(e),
            r = n.paddingTop,
            a = n.paddingBottom;
            return t - parseFloat(r) - parseFloat(a)
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          }),
          t['default'] = n
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = e.clientWidth,
            n = getComputedStyle(e),
            r = n.paddingLeft,
            a = n.paddingRight;
            return t - parseFloat(r) - parseFloat(a)
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          }),
          t['default'] = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e &&
            e.__esModule ? e : {
              'default': e
            }
          }
          function a() {
            if (s !== !1) return s;
            if ('undefined' != typeof document) {
              var e = document.createElement('div');
              (0, o['default']) (
                e,
                {
                  width: 100,
                  height: 100,
                  position: 'absolute',
                  top: - 9999,
                  overflow: 'scroll',
                  MsOverflowStyle: 'scrollbar'
                }
              ),
              document.body.appendChild(e),
              s = e.offsetWidth - e.clientWidth,
              document.body.removeChild(e)
            } else s = 0;
            return s
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          }),
          t['default'] = a;
          var i = n(492),
          o = r(i),
          s = !1
        },
        function (e, t) {
          'use strict';
          function n() {
            return !1
          }
          Object.defineProperty(t, '__esModule', {
            value: !0
          }),
          t['default'] = n
        },
        function (e, t) {
          var n = {
            animationIterationCount: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridRow: !0,
            gridColumn: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            stopOpacity: !0,
            strokeDashoffset: !0,
            strokeOpacity: !0,
            strokeWidth: !0
          };
          e.exports = function (e, t) {
            return 'number' != typeof t ||
            n[e] ? t : t + 'px'
          }
        },
        function (e, t) {
          var n = null,
          r = [
            'Webkit',
            'Moz',
            'O',
            'ms'
          ];
          e.exports = function (e) {
            n ||
            (n = document.createElement('div'));
            var t = n.style;
            if (e in t) return e;
            for (
              var a = e.charAt(0).toUpperCase() + e.slice(1),
              i = r.length;
              i >= 0;
              i--
            ) {
              var o = r[i] + a;
              if (o in t) return o
            }
            return !1
          }
        },
        function (e, t, n) {
          function r(e) {
            return a(e).replace(/\s(\w)/g, function (e, t) {
              return t.toUpperCase()
            })
          }
          var a = n(1617);
          e.exports = r
        },
        function (e, t, n) {
          function r(e) {
            return a(e).replace(/[\W_]+(.|$)/g, function (e, t) {
              return t ? ' ' + t : ''
            })
          }
          var a = n(1618);
          e.exports = r
        },
        function (e, t) {
          function n(e) {
            return i.test(e) ? e.toLowerCase() : (s.test(e) && (e = r(e)), o.test(e) && (e = a(e)), e.toLowerCase())
          }
          function r(e) {
            return e.replace(c, function (e, t) {
              return t ? ' ' + t : ''
            })
          }
          function a(e) {
            return e.replace(
              l,
              function (e, t, n) {
                return t + ' ' + n.toLowerCase().split('').join(' ')
              }
            )
          }
          e.exports = n;
          var i = /\s/,
          o = /[a-z][A-Z]/,
          s = /[\W_]/,
          c = /[\W_]+(.|$)/g,
          l = /(.)([A-Z]+)/g
        },
        function (e, t, n) {
          (
            function (t) {
              for (
                var r = n(1620),
                a = 'undefined' == typeof window ? t : window,
                i = [
                  'moz',
                  'webkit'
                ],
                o = 'AnimationFrame',
                s = a['request' + o],
                c = a['cancel' + o] ||
                a['cancelRequest' + o],
                l = 0;
                !s &&
                l < i.length;
                l++
              ) s = a[i[l] + 'Request' + o],
              c = a[i[l] + 'Cancel' + o] ||
              a[i[l] + 'CancelRequest' + o];
              if (!s || !c) {
                var u = 0,
                p = 0,
                d = [],
                f = 1000 / 60;
                s = function (e) {
                  if (0 === d.length) {
                    var t = r(),
                    n = Math.max(0, f - (t - u));
                    u = n + t,
                    setTimeout(
                      function () {
                        var e = d.slice(0);
                        d.length = 0;
                        for (var t = 0; t < e.length; t++) if (!e[t].cancelled) try {
                          e[t].callback(u)
                        } catch (n) {
                          setTimeout(function () {
                            throw n
                          }, 0)
                        }
                      },
                      Math.round(n)
                    )
                  }
                  return d.push({
                    handle: ++p,
                    callback: e,
                    cancelled: !1
                  }),
                  p
                },
                c = function (e) {
                  for (var t = 0; t < d.length; t++) d[t].handle === e &&
                  (d[t].cancelled = !0)
                }
              }
              e.exports = function (e) {
                return s.call(a, e)
              },
              e.exports.cancel = function () {
                c.apply(a, arguments)
              },
              e.exports.polyfill = function () {
                a.requestAnimationFrame = s,
                a.cancelAnimationFrame = c
              }
            }
          ).call(t, function () {
            return this
          }())
        },
        function (e, t, n) {
          (
            function (t) {
              (
                function () {
                  var n,
                  r,
                  a;
                  'undefined' != typeof performance &&
                  null !== performance &&
                  performance.now ? e.exports = function () {
                    return performance.now()
                  }
                   : 'undefined' != typeof t &&
                  null !== t &&
                  t.hrtime ? (
                    e.exports = function () {
                      return (n() - a) / 1000000
                    },
                    r = t.hrtime,
                    n = function () {
                      var e;
                      return e = r(),
                      1000000000 * e[0] + e[1]
                    },
                    a = n()
                  ) : Date.now ? (e.exports = function () {
                    return Date.now() - a
                  }, a = Date.now()) : (
                    e.exports = function () {
                      return (new Date).getTime() - a
                    },
                    a = (new Date).getTime()
                  )
                }
              ).call(this)
            }
          ).call(t, n(529))
        },
        function (e, t, n) {
          'use strict';
          var r = n(28),
          a = n(296),
          i = n(524),
          o = {
            componentDidMount: function () {
              this.props.autoFocus &&
              i(a(this))
            }
          },
          s = {
            Mixin: o,
            focusDOMComponent: function () {
              i(r.getNode(this._rootNodeID))
            }
          };
          e.exports = s
        },
        function (e, t, n) {
          'use strict';
          function r() {
            var e = window.opera;
            return 'object' == typeof e &&
            'function' == typeof e.version &&
            parseInt(e.version(), 10) <= 12
          }
          function a(e) {
            return (e.ctrlKey || e.altKey || e.metaKey) &&
            !(e.ctrlKey && e.altKey)
          }
          function i(e) {
            switch (e) {
              case O.topCompositionStart:
                return N.compositionStart;
              case O.topCompositionEnd:
                return N.compositionEnd;
              case O.topCompositionUpdate:
                return N.compositionUpdate
            }
          }
          function o(e, t) {
            return e === O.topKeyDown &&
            t.keyCode === b
          }
          function s(e, t) {
            switch (e) {
              case O.topKeyUp:
                return - 1 !== I.indexOf(t.keyCode);
              case O.topKeyDown:
                return t.keyCode !== b;
              case O.topKeyPress:
              case O.topMouseDown:
              case O.topBlur:
                return !0;
              default:
                return !1
            }
          }
          function c(e) {
            var t = e.detail;
            return 'object' == typeof t &&
            'data' in t ? t.data : null
          }
          function l(e, t, n, r, a) {
            var l,
            u;
            if (
              y ? l = i(e) : x ? s(e, r) &&
              (l = N.compositionEnd) : o(e, r) &&
              (l = N.compositionStart),
              !l
            ) return null;
            C &&
            (
              x ||
              l !== N.compositionStart ? l === N.compositionEnd &&
              x &&
              (u = x.getData()) : x = _.getPooled(t)
            );
            var p = g.getPooled(l, n, r, a);
            if (u) p.data = u;
             else {
              var d = c(r);
              null !== d &&
              (p.data = d)
            }
            return m.accumulateTwoPhaseDispatches(p),
            p
          }
          function u(e, t) {
            switch (e) {
              case O.topCompositionEnd:
                return c(t);
              case O.topKeyPress:
                var n = t.which;
                return n !== D ? null : (w = !0, A);
              case O.topTextInput:
                var r = t.data;
                return r === A &&
                w ? null : r;
              default:
                return null
            }
          }
          function p(e, t) {
            if (x) {
              if (e === O.topCompositionEnd || s(e, t)) {
                var n = x.getData();
                return _.release(x),
                x = null,
                n
              }
              return null
            }
            switch (e) {
              case O.topPaste:
                return null;
              case O.topKeyPress:
                return t.which &&
                !a(t) ? String.fromCharCode(t.which) : null;
              case O.topCompositionEnd:
                return C ? null : t.data;
              default:
                return null
            }
          }
          function d(e, t, n, r, a) {
            var i;
            if (i = S ? u(e, r) : p(e, r), !i) return null;
            var o = v.getPooled(N.beforeInput, n, r, a);
            return o.data = i,
            m.accumulateTwoPhaseDispatches(o),
            o
          }
          var f = n(48),
          m = n(87),
          h = n(23),
          _ = n(1630),
          g = n(1664),
          v = n(1667),
          E = n(50),
          I = [
            9,
            13,
            27,
            32
          ],
          b = 229,
          y = h.canUseDOM &&
          'CompositionEvent' in window,
          T = null;
          h.canUseDOM &&
          'documentMode' in document &&
          (T = document.documentMode);
          var S = h.canUseDOM &&
          'TextEvent' in window &&
          !T &&
          !r(),
          C = h.canUseDOM &&
          (!y || T && T > 8 && 11 >= T),
          D = 32,
          A = String.fromCharCode(D),
          O = f.topLevelTypes,
          N = {
            beforeInput: {
              phasedRegistrationNames: {
                bubbled: E({
                  onBeforeInput: null
                }),
                captured: E({
                  onBeforeInputCapture: null
                })
              },
              dependencies: [
                O.topCompositionEnd,
                O.topKeyPress,
                O.topTextInput,
                O.topPaste
              ]
            },
            compositionEnd: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCompositionEnd: null
                }),
                captured: E({
                  onCompositionEndCapture: null
                })
              },
              dependencies: [
                O.topBlur,
                O.topCompositionEnd,
                O.topKeyDown,
                O.topKeyPress,
                O.topKeyUp,
                O.topMouseDown
              ]
            },
            compositionStart: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCompositionStart: null
                }),
                captured: E({
                  onCompositionStartCapture: null
                })
              },
              dependencies: [
                O.topBlur,
                O.topCompositionStart,
                O.topKeyDown,
                O.topKeyPress,
                O.topKeyUp,
                O.topMouseDown
              ]
            },
            compositionUpdate: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCompositionUpdate: null
                }),
                captured: E({
                  onCompositionUpdateCapture: null
                })
              },
              dependencies: [
                O.topBlur,
                O.topCompositionUpdate,
                O.topKeyDown,
                O.topKeyPress,
                O.topKeyUp,
                O.topMouseDown
              ]
            }
          },
          w = !1,
          x = null,
          R = {
            eventTypes: N,
            extractEvents: function (e, t, n, r, a) {
              return [l(e, t, n, r, a),
              d(e, t, n, r, a)]
            }
          };
          e.exports = R
        },
        function (e, t, n) {
          'use strict';
          var r = n(493),
          a = n(23),
          i = n(34),
          o = (n(1681), n(1672)),
          s = n(1686),
          c = n(1690),
          l = (n(9), c(function (e) {
            return s(e)
          })),
          u = !1,
          p = 'cssFloat';
          if (a.canUseDOM) {
            var d = document.createElement('div').style;
            try {
              d.font = ''
            } catch (f) {
              u = !0
            }
            void 0 === document.documentElement.style.cssFloat &&
            (p = 'styleFloat')
          }
          var m = {
            createMarkupForStyles: function (e) {
              var t = '';
              for (var n in e) if (e.hasOwnProperty(n)) {
                var r = e[n];
                null != r &&
                (t += l(n) + ':', t += o(n, r) + ';')
              }
              return t ||
              null
            },
            setValueForStyles: function (e, t) {
              var n = e.style;
              for (var a in t) if (t.hasOwnProperty(a)) {
                var i = o(a, t[a]);
                if ('float' === a && (a = p), i) n[a] = i;
                 else {
                  var s = u &&
                  r.shorthandPropertyExpansions[a];
                  if (s) for (var c in s) n[c] = '';
                   else n[a] = ''
                }
              }
            }
          };
          i.measureMethods(
            m,
            'CSSPropertyOperations',
            {
              setValueForStyles: 'setValueForStyles'
            }
          ),
          e.exports = m
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = e.nodeName &&
            e.nodeName.toLowerCase();
            return 'select' === t ||
            'input' === t &&
            'file' === e.type
          }
          function a(e) {
            var t = T.getPooled(N.change, x, e, S(e));
            I.accumulateTwoPhaseDispatches(t),
            y.batchedUpdates(i, t)
          }
          function i(e) {
            E.enqueueEvents(e),
            E.processEventQueue(!1)
          }
          function o(e, t) {
            w = e,
            x = t,
            w.attachEvent('onchange', a)
          }
          function s() {
            w &&
            (w.detachEvent('onchange', a), w = null, x = null)
          }
          function c(e, t, n) {
            return e === O.topChange ? n : void 0
          }
          function l(e, t, n) {
            e === O.topFocus ? (s(), o(t, n)) : e === O.topBlur &&
            s()
          }
          function u(e, t) {
            w = e,
            x = t,
            R = e.value,
            L = Object.getOwnPropertyDescriptor(e.constructor.prototype, 'value'),
            Object.defineProperty(w, 'value', k),
            w.attachEvent('onpropertychange', d)
          }
          function p() {
            w &&
            (
              delete w.value,
              w.detachEvent('onpropertychange', d),
              w = null,
              x = null,
              R = null,
              L = null
            )
          }
          function d(e) {
            if ('value' === e.propertyName) {
              var t = e.srcElement.value;
              t !== R &&
              (R = t, a(e))
            }
          }
          function f(e, t, n) {
            return e === O.topInput ? n : void 0
          }
          function m(e, t, n) {
            e === O.topFocus ? (p(), u(t, n)) : e === O.topBlur &&
            p()
          }
          function h(e, t, n) {
            return e !== O.topSelectionChange &&
            e !== O.topKeyUp &&
            e !== O.topKeyDown ||
            !w ||
            w.value === R ? void 0 : (R = w.value, x)
          }
          function _(e) {
            return e.nodeName &&
            'input' === e.nodeName.toLowerCase() &&
            ('checkbox' === e.type || 'radio' === e.type)
          }
          function g(e, t, n) {
            return e === O.topClick ? n : void 0
          }
          var v = n(48),
          E = n(86),
          I = n(87),
          b = n(23),
          y = n(35),
          T = n(59),
          S = n(299),
          C = n(302),
          D = n(520),
          A = n(50),
          O = v.topLevelTypes,
          N = {
            change: {
              phasedRegistrationNames: {
                bubbled: A({
                  onChange: null
                }),
                captured: A({
                  onChangeCapture: null
                })
              },
              dependencies: [
                O.topBlur,
                O.topChange,
                O.topClick,
                O.topFocus,
                O.topInput,
                O.topKeyDown,
                O.topKeyUp,
                O.topSelectionChange
              ]
            }
          },
          w = null,
          x = null,
          R = null,
          L = null,
          P = !1;
          b.canUseDOM &&
          (
            P = C('change') &&
            (!('documentMode' in document) || document.documentMode > 8)
          );
          var M = !1;
          b.canUseDOM &&
          (
            M = C('input') &&
            (!('documentMode' in document) || document.documentMode > 9)
          );
          var k = {
            get: function () {
              return L.get.call(this)
            },
            set: function (e) {
              R = '' + e,
              L.set.call(this, e)
            }
          },
          B = {
            eventTypes: N,
            extractEvents: function (e, t, n, a, i) {
              var o,
              s;
              if (r(t) ? P ? o = c : s = l : D(t) ? M ? o = f : (o = h, s = m) : _(t) && (o = g), o) {
                var u = o(e, t, n);
                if (u) {
                  var p = T.getPooled(N.change, u, a, i);
                  return p.type = 'change',
                  I.accumulateTwoPhaseDispatches(p),
                  p
                }
              }
              s &&
              s(e, t, n)
            }
          };
          e.exports = B
        },
        function (e, t) {
          'use strict';
          var n = 0,
          r = {
            createReactRootIndex: function () {
              return n++
            }
          };
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e.substring(1, e.indexOf(' '))
          }
          var a = n(23),
          i = n(1683),
          o = n(36),
          s = n(526),
          c = n(5),
          l = /^(<[^ \/>]+)/,
          u = 'data-danger-index',
          p = {
            dangerouslyRenderMarkup: function (e) {
              a.canUseDOM ? void 0 : c(!1);
              for (var t, n = {}, p = 0; p < e.length; p++) e[p] ? void 0 : c(!1),
              t = r(e[p]),
              t = s(t) ? t : '*',
              n[t] = n[t] ||
              [],
              n[t][p] = e[p];
              var d = [],
              f = 0;
              for (t in n) if (n.hasOwnProperty(t)) {
                var m,
                h = n[t];
                for (m in h) if (h.hasOwnProperty(m)) {
                  var _ = h[m];
                  h[m] = _.replace(l, '$1 ' + u + '="' + m + '" ')
                }
                for (var g = i(h.join(''), o), v = 0; v < g.length; ++v) {
                  var E = g[v];
                  E.hasAttribute &&
                  E.hasAttribute(u) &&
                  (
                    m = + E.getAttribute(u),
                    E.removeAttribute(u),
                    d.hasOwnProperty(m) ? c(!1) : void 0,
                    d[m] = E,
                    f += 1
                  )
                }
              }
              return f !== d.length ? c(!1) : void 0,
              d.length !== e.length ? c(!1) : void 0,
              d
            },
            dangerouslyReplaceNodeWithMarkup: function (e, t) {
              a.canUseDOM ? void 0 : c(!1),
              t ? void 0 : c(!1),
              'html' === e.tagName.toLowerCase() ? c(!1) : void 0;
              var n;
              n = 'string' == typeof t ? i(t, o) [0] : t,
              e.parentNode.replaceChild(n, e)
            }
          };
          e.exports = p
        },
        function (e, t, n) {
          'use strict';
          var r = n(50),
          a = [
            r({
              ResponderEventPlugin: null
            }),
            r({
              SimpleEventPlugin: null
            }),
            r({
              TapEventPlugin: null
            }),
            r({
              EnterLeaveEventPlugin: null
            }),
            r({
              ChangeEventPlugin: null
            }),
            r({
              SelectEventPlugin: null
            }),
            r({
              BeforeInputEventPlugin: null
            })
          ];
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          var r = n(48),
          a = n(87),
          i = n(122),
          o = n(28),
          s = n(50),
          c = r.topLevelTypes,
          l = o.getFirstReactDOM,
          u = {
            mouseEnter: {
              registrationName: s({
                onMouseEnter: null
              }),
              dependencies: [
                c.topMouseOut,
                c.topMouseOver
              ]
            },
            mouseLeave: {
              registrationName: s({
                onMouseLeave: null
              }),
              dependencies: [
                c.topMouseOut,
                c.topMouseOver
              ]
            }
          },
          p = [
            null,
            null
          ],
          d = {
            eventTypes: u,
            extractEvents: function (e, t, n, r, s) {
              if (e === c.topMouseOver && (r.relatedTarget || r.fromElement)) return null;
              if (e !== c.topMouseOut && e !== c.topMouseOver) return null;
              var d;
              if (t.window === t) d = t;
               else {
                var f = t.ownerDocument;
                d = f ? f.defaultView ||
                f.parentWindow : window
              }
              var m,
              h,
              _ = '',
              g = '';
              if (
                e === c.topMouseOut ? (
                  m = t,
                  _ = n,
                  h = l(r.relatedTarget || r.toElement),
                  h ? g = o.getID(h) : h = d,
                  h = h ||
                  d
                ) : (m = d, h = t, g = n),
                m === h
              ) return null;
              var v = i.getPooled(u.mouseLeave, _, r, s);
              v.type = 'mouseleave',
              v.target = m,
              v.relatedTarget = h;
              var E = i.getPooled(u.mouseEnter, g, r, s);
              return E.type = 'mouseenter',
              E.target = h,
              E.relatedTarget = m,
              a.accumulateEnterLeaveDispatches(v, E, _, g),
              p[0] = v,
              p[1] = E,
              p
            }
          };
          e.exports = d
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return e === _.topMouseUp ||
            e === _.topTouchEnd ||
            e === _.topTouchCancel
          }
          function a(e) {
            return e === _.topMouseMove ||
            e === _.topTouchMove
          }
          function i(e) {
            return e === _.topMouseDown ||
            e === _.topTouchStart
          }
          function o(e, t, n, r) {
            var a = e.type ||
            'unknown-event';
            e.currentTarget = h.Mount.getNode(r),
            t ? f.invokeGuardedCallbackWithCatch(a, n, e, r) : f.invokeGuardedCallback(a, n, e, r),
            e.currentTarget = null
          }
          function s(e, t) {
            var n = e._dispatchListeners,
            r = e._dispatchIDs;
            if (Array.isArray(n)) for (var a = 0; a < n.length && !e.isPropagationStopped(); a++) o(e, t, n[a], r[a]);
             else n &&
            o(e, t, n, r);
            e._dispatchListeners = null,
            e._dispatchIDs = null
          }
          function c(e) {
            var t = e._dispatchListeners,
            n = e._dispatchIDs;
            if (Array.isArray(t)) {
              for (var r = 0; r < t.length && !e.isPropagationStopped(); r++) if (t[r](e, n[r])) return n[r]
            } else if (t && t(e, n)) return n;
            return null
          }
          function l(e) {
            var t = c(e);
            return e._dispatchIDs = null,
            e._dispatchListeners = null,
            t
          }
          function u(e) {
            var t = e._dispatchListeners,
            n = e._dispatchIDs;
            Array.isArray(t) ? m(!1) : void 0;
            var r = t ? t(e, n) : null;
            return e._dispatchListeners = null,
            e._dispatchIDs = null,
            r
          }
          function p(e) {
            return !!e._dispatchListeners
          }
          var d = n(48),
          f = n(507),
          m = n(5),
          h = (n(9), {
            Mount: null,
            injectMount: function (e) {
              h.Mount = e
            }
          }),
          _ = d.topLevelTypes,
          g = {
            isEndish: r,
            isMoveish: a,
            isStartish: i,
            executeDirectDispatch: u,
            executeDispatchesInOrder: s,
            executeDispatchesInOrderStopAtTrue: l,
            hasDispatches: p,
            getNode: function (e) {
              return h.Mount.getNode(e)
            },
            getID: function (e) {
              return h.Mount.getID(e)
            },
            injection: h
          };
          e.exports = g
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            this._root = e,
            this._startText = this.getText(),
            this._fallbackText = null
          }
          var a = n(51),
          i = n(7),
          o = n(519);
          i(
            r.prototype,
            {
              destructor: function () {
                this._root = null,
                this._startText = null,
                this._fallbackText = null
              },
              getText: function () {
                return 'value' in this._root ? this._root.value : this._root[o()]
              },
              getData: function () {
                if (this._fallbackText) return this._fallbackText;
                var e,
                t,
                n = this._startText,
                r = n.length,
                a = this.getText(),
                i = a.length;
                for (e = 0; r > e && n[e] === a[e]; e++);
                var o = r - e;
                for (t = 1; o >= t && n[r - t] === a[i - t]; t++);
                var s = t > 1 ? 1 - t : void 0;
                return this._fallbackText = a.slice(e, s),
                this._fallbackText
              }
            }
          ),
          a.addPoolingTo(r),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r,
          a = n(69),
          i = n(23),
          o = a.injection.MUST_USE_ATTRIBUTE,
          s = a.injection.MUST_USE_PROPERTY,
          c = a.injection.HAS_BOOLEAN_VALUE,
          l = a.injection.HAS_SIDE_EFFECTS,
          u = a.injection.HAS_NUMERIC_VALUE,
          p = a.injection.HAS_POSITIVE_NUMERIC_VALUE,
          d = a.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
          if (i.canUseDOM) {
            var f = document.implementation;
            r = f &&
            f.hasFeature &&
            f.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')
          }
          var m = {
            isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
            Properties: {
              accept: null,
              acceptCharset: null,
              accessKey: null,
              action: null,
              allowFullScreen: o | c,
              allowTransparency: o,
              alt: null,
              async: c,
              autoComplete: null,
              autoPlay: c,
              capture: o | c,
              cellPadding: null,
              cellSpacing: null,
              charSet: o,
              challenge: o,
              checked: s | c,
              classID: o,
              className: r ? o : s,
              cols: o | p,
              colSpan: null,
              content: null,
              contentEditable: null,
              contextMenu: o,
              controls: s | c,
              coords: null,
              crossOrigin: null,
              data: null,
              dateTime: o,
              'default': c,
              defer: c,
              dir: null,
              disabled: o | c,
              download: d,
              draggable: null,
              encType: null,
              form: o,
              formAction: o,
              formEncType: o,
              formMethod: o,
              formNoValidate: c,
              formTarget: o,
              frameBorder: o,
              headers: null,
              height: o,
              hidden: o | c,
              high: null,
              href: null,
              hrefLang: null,
              htmlFor: null,
              httpEquiv: null,
              icon: null,
              id: s,
              inputMode: o,
              integrity: null,
              is: o,
              keyParams: o,
              keyType: o,
              kind: null,
              label: null,
              lang: null,
              list: o,
              loop: s | c,
              low: null,
              manifest: o,
              marginHeight: null,
              marginWidth: null,
              max: null,
              maxLength: o,
              media: o,
              mediaGroup: null,
              method: null,
              min: null,
              minLength: o,
              multiple: s | c,
              muted: s | c,
              name: null,
              nonce: o,
              noValidate: c,
              open: c,
              optimum: null,
              pattern: null,
              placeholder: null,
              poster: null,
              preload: null,
              radioGroup: null,
              readOnly: s | c,
              rel: null,
              required: c,
              reversed: c,
              role: o,
              rows: o | p,
              rowSpan: null,
              sandbox: null,
              scope: null,
              scoped: c,
              scrolling: null,
              seamless: o | c,
              selected: s | c,
              shape: null,
              size: o | p,
              sizes: o,
              span: p,
              spellCheck: null,
              src: null,
              srcDoc: s,
              srcLang: null,
              srcSet: o,
              start: u,
              step: null,
              style: null,
              summary: null,
              tabIndex: null,
              target: null,
              title: null,
              type: null,
              useMap: null,
              value: s | l,
              width: o,
              wmode: o,
              wrap: null,
              about: o,
              datatype: o,
              inlist: o,
              prefix: o,
              property: o,
              resource: o,
              'typeof': o,
              vocab: o,
              autoCapitalize: o,
              autoCorrect: o,
              autoSave: null,
              color: null,
              itemProp: o,
              itemScope: o | c,
              itemType: o,
              itemID: o,
              itemRef: o,
              results: null,
              security: o,
              unselectable: o
            },
            DOMAttributeNames: {
              acceptCharset: 'accept-charset',
              className: 'class',
              htmlFor: 'for',
              httpEquiv: 'http-equiv'
            },
            DOMPropertyNames: {
              autoComplete: 'autocomplete',
              autoFocus: 'autofocus',
              autoPlay: 'autoplay',
              autoSave: 'autosave',
              encType: 'encoding',
              hrefLang: 'hreflang',
              radioGroup: 'radiogroup',
              spellCheck: 'spellcheck',
              srcDoc: 'srcdoc',
              srcSet: 'srcset'
            }
          };
          e.exports = m
        },
        function (e, t, n) {
          'use strict';
          var r = (n(88), n(296)),
          a = (n(9), '_getDOMNodeDidWarn'),
          i = {
            getDOMNode: function () {
              return this.constructor[a] = !0,
              r(this)
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = 'transition' + e + 'Timeout',
            n = 'transition' + e;
            return function (e) {
              if (e[n]) {
                if (null == e[t]) return new Error(
                  t + ' wasn\'t supplied to ReactCSSTransitionGroup: this can cause unreliable animations and won\'t be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.'
                );
                if ('number' != typeof e[t]) return new Error(t + ' must be a number (in milliseconds)')
              }
            }
          }
          var a = n(118),
          i = n(7),
          o = n(1658),
          s = n(1634),
          c = a.createClass({
            displayName: 'ReactCSSTransitionGroup',
            propTypes: {
              transitionName: s.propTypes.name,
              transitionAppear: a.PropTypes.bool,
              transitionEnter: a.PropTypes.bool,
              transitionLeave: a.PropTypes.bool,
              transitionAppearTimeout: r('Appear'),
              transitionEnterTimeout: r('Enter'),
              transitionLeaveTimeout: r('Leave')
            },
            getDefaultProps: function () {
              return {
                transitionAppear: !1,
                transitionEnter: !0,
                transitionLeave: !0
              }
            },
            _wrapChild: function (e) {
              return a.createElement(
                s,
                {
                  name: this.props.transitionName,
                  appear: this.props.transitionAppear,
                  enter: this.props.transitionEnter,
                  leave: this.props.transitionLeave,
                  appearTimeout: this.props.transitionAppearTimeout,
                  enterTimeout: this.props.transitionEnterTimeout,
                  leaveTimeout: this.props.transitionLeaveTimeout
                },
                e
              )
            },
            render: function () {
              return a.createElement(o, i({
              }, this.props, {
                childFactory: this._wrapChild
              }))
            }
          });
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          var r = n(118),
          a = n(292),
          i = n(1679),
          o = n(1657),
          s = n(521),
          c = 17,
          l = r.createClass({
            displayName: 'ReactCSSTransitionGroupChild',
            propTypes: {
              name: r.PropTypes.oneOfType(
                [r.PropTypes.string,
                r.PropTypes.shape({
                  enter: r.PropTypes.string,
                  leave: r.PropTypes.string,
                  active: r.PropTypes.string
                }),
                r.PropTypes.shape({
                  enter: r.PropTypes.string,
                  enterActive: r.PropTypes.string,
                  leave: r.PropTypes.string,
                  leaveActive: r.PropTypes.string,
                  appear: r.PropTypes.string,
                  appearActive: r.PropTypes.string
                })]
              ).isRequired,
              appear: r.PropTypes.bool,
              enter: r.PropTypes.bool,
              leave: r.PropTypes.bool,
              appearTimeout: r.PropTypes.number,
              enterTimeout: r.PropTypes.number,
              leaveTimeout: r.PropTypes.number
            },
            transition: function (e, t, n) {
              var r = a.findDOMNode(this);
              if (!r) return void (t && t());
              var s = this.props.name[e] ||
              this.props.name + '-' + e,
              c = this.props.name[e + 'Active'] ||
              s + '-active',
              l = null,
              u = function (e) {
                e &&
                e.target !== r ||
                (
                  clearTimeout(l),
                  i.removeClass(r, s),
                  i.removeClass(r, c),
                  o.removeEndEventListener(r, u),
                  t &&
                  t()
                )
              };
              i.addClass(r, s),
              this.queueClass(c),
              n ? (l = setTimeout(u, n), this.transitionTimeouts.push(l)) : o.addEndEventListener(r, u)
            },
            queueClass: function (e) {
              this.classNameQueue.push(e),
              this.timeout ||
              (this.timeout = setTimeout(this.flushClassNameQueue, c))
            },
            flushClassNameQueue: function () {
              this.isMounted() &&
              this.classNameQueue.forEach(i.addClass.bind(i, a.findDOMNode(this))),
              this.classNameQueue.length = 0,
              this.timeout = null
            },
            componentWillMount: function () {
              this.classNameQueue = [],
              this.transitionTimeouts = []
            },
            componentWillUnmount: function () {
              this.timeout &&
              clearTimeout(this.timeout),
              this.transitionTimeouts.forEach(function (e) {
                clearTimeout(e)
              })
            },
            componentWillAppear: function (e) {
              this.props.appear ? this.transition('appear', e, this.props.appearTimeout) : e()
            },
            componentWillEnter: function (e) {
              this.props.enter ? this.transition('enter', e, this.props.enterTimeout) : e()
            },
            componentWillLeave: function (e) {
              this.props.leave ? this.transition('leave', e, this.props.leaveTimeout) : e()
            },
            render: function () {
              return s(this.props.children)
            }
          });
          e.exports = l
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            var r = void 0 === e[n];
            null != t &&
            r &&
            (e[n] = i(t, null))
          }
          var a = n(58),
          i = n(301),
          o = n(304),
          s = n(305),
          c = (
            n(9),
            {
              instantiateChildren: function (e, t, n) {
                if (null == e) return null;
                var a = {};
                return s(e, r, a),
                a
              },
              updateChildren: function (e, t, n, r) {
                if (!t && !e) return null;
                var s;
                for (s in t) if (t.hasOwnProperty(s)) {
                  var c = e &&
                  e[s],
                  l = c &&
                  c._currentElement,
                  u = t[s];
                  if (null != c && o(l, u)) a.receiveComponent(c, u, n, r),
                  t[s] = c;
                   else {
                    c &&
                    a.unmountComponent(c, s);
                    var p = i(u, null);
                    t[s] = p
                  }
                }
                for (s in e) !e.hasOwnProperty(s) ||
                t &&
                t.hasOwnProperty(s) ||
                a.unmountComponent(e[s]);
                return t
              },
              unmountChildren: function (e) {
                for (var t in e) if (e.hasOwnProperty(t)) {
                  var n = e[t];
                  a.unmountComponent(n)
                }
              }
            }
          );
          e.exports = c
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = e._currentElement._owner ||
            null;
            if (t) {
              var n = t.getName();
              if (n) return ' Check the render method of `' + n + '`.'
            }
            return ''
          }
          function a(e) {
          }
          var i = n(291),
          o = n(49),
          s = n(30),
          c = n(88),
          l = n(34),
          u = n(121),
          p = (n(120), n(58)),
          d = n(294),
          f = n(7),
          m = n(90),
          h = n(5),
          _ = n(304);
          n(9);
          a.prototype.render = function () {
            var e = c.get(this)._currentElement.type;
            return e(this.props, this.context, this.updater)
          };
          var g = 1,
          v = {
            construct: function (e) {
              this._currentElement = e,
              this._rootNodeID = null,
              this._instance = null,
              this._pendingElement = null,
              this._pendingStateQueue = null,
              this._pendingReplaceState = !1,
              this._pendingForceUpdate = !1,
              this._renderedComponent = null,
              this._context = null,
              this._mountOrder = 0,
              this._topLevelWrapper = null,
              this._pendingCallbacks = null
            },
            mountComponent: function (e, t, n) {
              this._context = n,
              this._mountOrder = g++,
              this._rootNodeID = e;
              var r,
              i,
              o = this._processProps(this._currentElement.props),
              l = this._processContext(n),
              u = this._currentElement.type,
              f = 'prototype' in u;
              f &&
              (r = new u(o, l, d)),
              f &&
              null !== r &&
              r !== !1 &&
              !s.isValidElement(r) ||
              (i = r, r = new a(u)),
              r.props = o,
              r.context = l,
              r.refs = m,
              r.updater = d,
              this._instance = r,
              c.set(r, this);
              var _ = r.state;
              void 0 === _ &&
              (r.state = _ = null),
              'object' != typeof _ ||
              Array.isArray(_) ? h(!1) : void 0,
              this._pendingStateQueue = null,
              this._pendingReplaceState = !1,
              this._pendingForceUpdate = !1,
              r.componentWillMount &&
              (
                r.componentWillMount(),
                this._pendingStateQueue &&
                (r.state = this._processPendingState(r.props, r.context))
              ),
              void 0 === i &&
              (i = this._renderValidatedComponent()),
              this._renderedComponent = this._instantiateReactComponent(i);
              var v = p.mountComponent(this._renderedComponent, e, t, this._processChildContext(n));
              return r.componentDidMount &&
              t.getReactMountReady().enqueue(r.componentDidMount, r),
              v
            },
            unmountComponent: function () {
              var e = this._instance;
              e.componentWillUnmount &&
              e.componentWillUnmount(),
              p.unmountComponent(this._renderedComponent),
              this._renderedComponent = null,
              this._instance = null,
              this._pendingStateQueue = null,
              this._pendingReplaceState = !1,
              this._pendingForceUpdate = !1,
              this._pendingCallbacks = null,
              this._pendingElement = null,
              this._context = null,
              this._rootNodeID = null,
              this._topLevelWrapper = null,
              c.remove(e)
            },
            _maskContext: function (e) {
              var t = null,
              n = this._currentElement.type,
              r = n.contextTypes;
              if (!r) return m;
              t = {};
              for (var a in r) t[a] = e[a];
              return t
            },
            _processContext: function (e) {
              var t = this._maskContext(e);
              return t
            },
            _processChildContext: function (e) {
              var t = this._currentElement.type,
              n = this._instance,
              r = n.getChildContext &&
              n.getChildContext();
              if (r) {
                'object' != typeof t.childContextTypes ? h(!1) : void 0;
                for (var a in r) a in t.childContextTypes ? void 0 : h(!1);
                return f({
                }, e, r)
              }
              return e
            },
            _processProps: function (e) {
              return e
            },
            _checkPropTypes: function (e, t, n) {
              var a = this.getName();
              for (var i in e) if (e.hasOwnProperty(i)) {
                var o;
                try {
                  'function' != typeof e[i] ? h(!1) : void 0,
                  o = e[i](t, i, a, n)
                } catch (s) {
                  o = s
                }
                if (o instanceof Error) {
                  r(this);
                  n === u.prop
                }
              }
            },
            receiveComponent: function (e, t, n) {
              var r = this._currentElement,
              a = this._context;
              this._pendingElement = null,
              this.updateComponent(t, r, e, a, n)
            },
            performUpdateIfNecessary: function (e) {
              null != this._pendingElement &&
              p.receiveComponent(
                this,
                this._pendingElement ||
                this._currentElement,
                e,
                this._context
              ),
              (null !== this._pendingStateQueue || this._pendingForceUpdate) &&
              this.updateComponent(
                e,
                this._currentElement,
                this._currentElement,
                this._context,
                this._context
              )
            },
            updateComponent: function (e, t, n, r, a) {
              var i,
              o = this._instance,
              s = this._context === a ? o.context : this._processContext(a);
              t === n ? i = n.props : (
                i = this._processProps(n.props),
                o.componentWillReceiveProps &&
                o.componentWillReceiveProps(i, s)
              );
              var c = this._processPendingState(i, s),
              l = this._pendingForceUpdate ||
              !o.shouldComponentUpdate ||
              o.shouldComponentUpdate(i, c, s);
              l ? (
                this._pendingForceUpdate = !1,
                this._performComponentUpdate(n, i, c, s, e, a)
              ) : (
                this._currentElement = n,
                this._context = a,
                o.props = i,
                o.state = c,
                o.context = s
              )
            },
            _processPendingState: function (e, t) {
              var n = this._instance,
              r = this._pendingStateQueue,
              a = this._pendingReplaceState;
              if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !r) return n.state;
              if (a && 1 === r.length) return r[0];
              for (var i = f({
              }, a ? r[0] : n.state), o = a ? 1 : 0; o < r.length; o++) {
                var s = r[o];
                f(i, 'function' == typeof s ? s.call(n, i, e, t) : s)
              }
              return i
            },
            _performComponentUpdate: function (e, t, n, r, a, i) {
              var o,
              s,
              c,
              l = this._instance,
              u = Boolean(l.componentDidUpdate);
              u &&
              (o = l.props, s = l.state, c = l.context),
              l.componentWillUpdate &&
              l.componentWillUpdate(t, n, r),
              this._currentElement = e,
              this._context = i,
              l.props = t,
              l.state = n,
              l.context = r,
              this._updateRenderedComponent(a, i),
              u &&
              a.getReactMountReady().enqueue(l.componentDidUpdate.bind(l, o, s, c), l)
            },
            _updateRenderedComponent: function (e, t) {
              var n = this._renderedComponent,
              r = n._currentElement,
              a = this._renderValidatedComponent();
              if (_(r, a)) p.receiveComponent(n, a, e, this._processChildContext(t));
               else {
                var i = this._rootNodeID,
                o = n._rootNodeID;
                p.unmountComponent(n),
                this._renderedComponent = this._instantiateReactComponent(a);
                var s = p.mountComponent(this._renderedComponent, i, e, this._processChildContext(t));
                this._replaceNodeWithMarkupByID(o, s)
              }
            },
            _replaceNodeWithMarkupByID: function (e, t) {
              i.replaceNodeWithMarkupByID(e, t)
            },
            _renderValidatedComponentWithoutOwnerOrContext: function () {
              var e = this._instance,
              t = e.render();
              return t
            },
            _renderValidatedComponent: function () {
              var e;
              o.current = this;
              try {
                e = this._renderValidatedComponentWithoutOwnerOrContext()
              } finally {
                o.current = null
              }
              return null === e ||
              e === !1 ||
              s.isValidElement(e) ? void 0 : h(!1),
              e
            },
            attachRef: function (e, t) {
              var n = this.getPublicInstance();
              null == n ? h(!1) : void 0;
              var r = t.getPublicInstance(),
              a = n.refs === m ? n.refs = {}
               : n.refs;
              a[e] = r
            },
            detachRef: function (e) {
              var t = this.getPublicInstance().refs;
              delete t[e]
            },
            getName: function () {
              var e = this._currentElement.type,
              t = this._instance &&
              this._instance.constructor;
              return e.displayName ||
              t &&
              t.displayName ||
              e.name ||
              t &&
              t.name ||
              null
            },
            getPublicInstance: function () {
              var e = this._instance;
              return e instanceof a ? null : e
            },
            _instantiateReactComponent: null
          };
          l.measureMethods(
            v,
            'ReactCompositeComponent',
            {
              mountComponent: 'mountComponent',
              updateComponent: 'updateComponent',
              _renderValidatedComponent: '_renderValidatedComponent'
            }
          );
          var E = {
            Mixin: v
          };
          e.exports = E
        },
        function (e, t) {
          'use strict';
          var n = {
            onClick: !0,
            onDoubleClick: !0,
            onMouseDown: !0,
            onMouseMove: !0,
            onMouseUp: !0,
            onClickCapture: !0,
            onDoubleClickCapture: !0,
            onMouseDownCapture: !0,
            onMouseMoveCapture: !0,
            onMouseUpCapture: !0
          },
          r = {
            getNativeProps: function (e, t, r) {
              if (!t.disabled) return t;
              var a = {};
              for (var i in t) t.hasOwnProperty(i) &&
              !n[i] &&
              (a[i] = t[i]);
              return a
            }
          };
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r() {
            return this
          }
          function a() {
            var e = this._reactInternalComponent;
            return !!e
          }
          function i() {
          }
          function o(e, t) {
            var n = this._reactInternalComponent;
            n &&
            (
              R.enqueueSetPropsInternal(n, e),
              t &&
              R.enqueueCallbackInternal(n, t)
            )
          }
          function s(e, t) {
            var n = this._reactInternalComponent;
            n &&
            (
              R.enqueueReplacePropsInternal(n, e),
              t &&
              R.enqueueCallbackInternal(n, t)
            )
          }
          function c(e, t) {
            t &&
            (
              null != t.dangerouslySetInnerHTML &&
              (
                null != t.children ? k(!1) : void 0,
                'object' == typeof t.dangerouslySetInnerHTML &&
                Q in t.dangerouslySetInnerHTML ? void 0 : k(!1)
              ),
              null != t.style &&
              'object' != typeof t.style ? k(!1) : void 0
            )
          }
          function l(e, t, n, r) {
            var a = N.findReactContainerForID(e);
            if (a) {
              var i = a.nodeType === Y ? a.ownerDocument : a;
              U(t, i)
            }
            r.getReactMountReady().enqueue(u, {
              id: e,
              registrationName: t,
              listener: n
            })
          }
          function u() {
            var e = this;
            y.putListener(e.id, e.registrationName, e.listener)
          }
          function p() {
            var e = this;
            e._rootNodeID ? void 0 : k(!1);
            var t = N.getNode(e._rootNodeID);
            switch (t ? void 0 : k(!1), e._tag) {
              case 'iframe':
                e._wrapperState.listeners = [
                  y.trapBubbledEvent(b.topLevelTypes.topLoad, 'load', t)
                ];
                break;
              case 'video':
              case 'audio':
                e._wrapperState.listeners = [];
                for (var n in q) q.hasOwnProperty(n) &&
                e._wrapperState.listeners.push(y.trapBubbledEvent(b.topLevelTypes[n], q[n], t));
                break;
              case 'img':
                e._wrapperState.listeners = [
                  y.trapBubbledEvent(b.topLevelTypes.topError, 'error', t),
                  y.trapBubbledEvent(b.topLevelTypes.topLoad, 'load', t)
                ];
                break;
              case 'form':
                e._wrapperState.listeners = [
                  y.trapBubbledEvent(b.topLevelTypes.topReset, 'reset', t),
                  y.trapBubbledEvent(b.topLevelTypes.topSubmit, 'submit', t)
                ]
            }
          }
          function d() {
            C.mountReadyWrapper(this)
          }
          function f() {
            A.postUpdateWrapper(this)
          }
          function m(e) {
            Z.call($, e) ||
            (X.test(e) ? void 0 : k(!1), $[e] = !0)
          }
          function h(e, t) {
            return e.indexOf('-') >= 0 ||
            null != t.is
          }
          function _(e) {
            m(e),
            this._tag = e.toLowerCase(),
            this._renderedChildren = null,
            this._previousStyle = null,
            this._previousStyleCopy = null,
            this._rootNodeID = null,
            this._wrapperState = null,
            this._topLevelWrapper = null,
            this._nodeWithLegacyProperties = null
          }
          var g = n(1621),
          v = n(1623),
          E = n(69),
          I = n(288),
          b = n(48),
          y = n(119),
          T = n(290),
          S = n(1637),
          C = n(1640),
          D = n(1641),
          A = n(500),
          O = n(1644),
          N = n(28),
          w = n(1649),
          x = n(34),
          R = n(294),
          L = n(7),
          P = n(124),
          M = n(125),
          k = n(5),
          B = (n(302), n(50)),
          V = n(126),
          F = n(303),
          W = (n(527), n(306), n(9), y.deleteListener),
          U = y.listenTo,
          j = y.registrationNameModules,
          G = {
            string: !0,
            number: !0
          },
          H = B({
            children: null
          }),
          z = B({
            style: null
          }),
          Q = B({
            __html: null
          }),
          Y = 1,
          q = {
            topAbort: 'abort',
            topCanPlay: 'canplay',
            topCanPlayThrough: 'canplaythrough',
            topDurationChange: 'durationchange',
            topEmptied: 'emptied',
            topEncrypted: 'encrypted',
            topEnded: 'ended',
            topError: 'error',
            topLoadedData: 'loadeddata',
            topLoadedMetadata: 'loadedmetadata',
            topLoadStart: 'loadstart',
            topPause: 'pause',
            topPlay: 'play',
            topPlaying: 'playing',
            topProgress: 'progress',
            topRateChange: 'ratechange',
            topSeeked: 'seeked',
            topSeeking: 'seeking',
            topStalled: 'stalled',
            topSuspend: 'suspend',
            topTimeUpdate: 'timeupdate',
            topVolumeChange: 'volumechange',
            topWaiting: 'waiting'
          },
          J = {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
          },
          K = {
            listing: !0,
            pre: !0,
            textarea: !0
          },
          X = (L({
            menuitem: !0
          }, J), /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/),
          $ = {},
          Z = {}.hasOwnProperty;
          _.displayName = 'ReactDOMComponent',
          _.Mixin = {
            construct: function (e) {
              this._currentElement = e
            },
            mountComponent: function (e, t, n) {
              this._rootNodeID = e;
              var r = this._currentElement.props;
              switch (this._tag) {
                case 'iframe':
                case 'img':
                case 'form':
                case 'video':
                case 'audio':
                  this._wrapperState = {
                    listeners: null
                  },
                  t.getReactMountReady().enqueue(p, this);
                  break;
                case 'button':
                  r = S.getNativeProps(this, r, n);
                  break;
                case 'input':
                  C.mountWrapper(this, r, n),
                  r = C.getNativeProps(this, r, n);
                  break;
                case 'option':
                  D.mountWrapper(this, r, n),
                  r = D.getNativeProps(this, r, n);
                  break;
                case 'select':
                  A.mountWrapper(this, r, n),
                  r = A.getNativeProps(this, r, n),
                  n = A.processChildContext(this, r, n);
                  break;
                case 'textarea':
                  O.mountWrapper(this, r, n),
                  r = O.getNativeProps(this, r, n)
              }
              c(this, r);
              var a;
              if (t.useCreateElement) {
                var i = n[N.ownerDocumentContextKey],
                o = i.createElement(this._currentElement.type);
                I.setAttributeForID(o, this._rootNodeID),
                N.getID(o),
                this._updateDOMProperties({
                }, r, t, o),
                this._createInitialChildren(t, r, n, o),
                a = o
              } else {
                var s = this._createOpenTagMarkupAndPutListeners(t, r),
                l = this._createContentMarkup(t, r, n);
                a = !l &&
                J[this._tag] ? s + '/>' : s + '>' + l + '</' + this._currentElement.type + '>'
              }
              switch (this._tag) {
                case 'input':
                  t.getReactMountReady().enqueue(d, this);
                case 'button':
                case 'select':
                case 'textarea':
                  r.autoFocus &&
                  t.getReactMountReady().enqueue(g.focusDOMComponent, this)
              }
              return a
            },
            _createOpenTagMarkupAndPutListeners: function (e, t) {
              var n = '<' + this._currentElement.type;
              for (var r in t) if (t.hasOwnProperty(r)) {
                var a = t[r];
                if (null != a) if (j.hasOwnProperty(r)) a &&
                l(this._rootNodeID, r, a, e);
                 else {
                  r === z &&
                  (
                    a &&
                    (a = this._previousStyleCopy = L({
                    }, t.style)),
                    a = v.createMarkupForStyles(a)
                  );
                  var i = null;
                  null != this._tag &&
                  h(this._tag, t) ? r !== H &&
                  (i = I.createMarkupForCustomAttribute(r, a)) : i = I.createMarkupForProperty(r, a),
                  i &&
                  (n += ' ' + i)
                }
              }
              if (e.renderToStaticMarkup) return n;
              var o = I.createMarkupForID(this._rootNodeID);
              return n + ' ' + o
            },
            _createContentMarkup: function (e, t, n) {
              var r = '',
              a = t.dangerouslySetInnerHTML;
              if (null != a) null != a.__html &&
              (r = a.__html);
               else {
                var i = G[typeof t.children] ? t.children : null,
                o = null != i ? null : t.children;
                if (null != i) r = M(i);
                 else if (null != o) {
                  var s = this.mountChildren(o, e, n);
                  r = s.join('')
                }
              }
              return K[this._tag] &&
              '\n' === r.charAt(0) ? '\n' + r : r
            },
            _createInitialChildren: function (e, t, n, r) {
              var a = t.dangerouslySetInnerHTML;
              if (null != a) null != a.__html &&
              V(r, a.__html);
               else {
                var i = G[typeof t.children] ? t.children : null,
                o = null != i ? null : t.children;
                if (null != i) F(r, i);
                 else if (null != o) for (var s = this.mountChildren(o, e, n), c = 0; c < s.length; c++) r.appendChild(s[c])
              }
            },
            receiveComponent: function (e, t, n) {
              var r = this._currentElement;
              this._currentElement = e,
              this.updateComponent(t, r, e, n)
            },
            updateComponent: function (e, t, n, r) {
              var a = t.props,
              i = this._currentElement.props;
              switch (this._tag) {
                case 'button':
                  a = S.getNativeProps(this, a),
                  i = S.getNativeProps(this, i);
                  break;
                case 'input':
                  C.updateWrapper(this),
                  a = C.getNativeProps(this, a),
                  i = C.getNativeProps(this, i);
                  break;
                case 'option':
                  a = D.getNativeProps(this, a),
                  i = D.getNativeProps(this, i);
                  break;
                case 'select':
                  a = A.getNativeProps(this, a),
                  i = A.getNativeProps(this, i);
                  break;
                case 'textarea':
                  O.updateWrapper(this),
                  a = O.getNativeProps(this, a),
                  i = O.getNativeProps(this, i)
              }
              c(this, i),
              this._updateDOMProperties(a, i, e, null),
              this._updateDOMChildren(a, i, e, r),
              !P &&
              this._nodeWithLegacyProperties &&
              (this._nodeWithLegacyProperties.props = i),
              'select' === this._tag &&
              e.getReactMountReady().enqueue(f, this)
            },
            _updateDOMProperties: function (e, t, n, r) {
              var a,
              i,
              o;
              for (a in e) if (!t.hasOwnProperty(a) && e.hasOwnProperty(a)) if (a === z) {
                var s = this._previousStyleCopy;
                for (i in s) s.hasOwnProperty(i) &&
                (o = o || {
                }, o[i] = '');
                this._previousStyleCopy = null
              } else j.hasOwnProperty(a) ? e[a] &&
              W(this._rootNodeID, a) : (E.properties[a] || E.isCustomAttribute(a)) &&
              (
                r ||
                (r = N.getNode(this._rootNodeID)),
                I.deleteValueForProperty(r, a)
              );
              for (a in t) {
                var c = t[a],
                u = a === z ? this._previousStyleCopy : e[a];
                if (t.hasOwnProperty(a) && c !== u) if (a === z) if (
                  c ? c = this._previousStyleCopy = L({
                  }, c) : this._previousStyleCopy = null,
                  u
                ) {
                  for (i in u) !u.hasOwnProperty(i) ||
                  c &&
                  c.hasOwnProperty(i) ||
                  (o = o || {
                  }, o[i] = '');
                  for (i in c) c.hasOwnProperty(i) &&
                  u[i] !== c[i] &&
                  (o = o || {
                  }, o[i] = c[i])
                } else o = c;
                 else j.hasOwnProperty(a) ? c ? l(this._rootNodeID, a, c, n) : u &&
                W(this._rootNodeID, a) : h(this._tag, t) ? (
                  r ||
                  (r = N.getNode(this._rootNodeID)),
                  a === H &&
                  (c = null),
                  I.setValueForAttribute(r, a, c)
                ) : (E.properties[a] || E.isCustomAttribute(a)) &&
                (
                  r ||
                  (r = N.getNode(this._rootNodeID)),
                  null != c ? I.setValueForProperty(r, a, c) : I.deleteValueForProperty(r, a)
                )
              }
              o &&
              (r || (r = N.getNode(this._rootNodeID)), v.setValueForStyles(r, o))
            },
            _updateDOMChildren: function (e, t, n, r) {
              var a = G[typeof e.children] ? e.children : null,
              i = G[typeof t.children] ? t.children : null,
              o = e.dangerouslySetInnerHTML &&
              e.dangerouslySetInnerHTML.__html,
              s = t.dangerouslySetInnerHTML &&
              t.dangerouslySetInnerHTML.__html,
              c = null != a ? null : e.children,
              l = null != i ? null : t.children,
              u = null != a ||
              null != o,
              p = null != i ||
              null != s;
              null != c &&
              null == l ? this.updateChildren(null, n, r) : u &&
              !p &&
              this.updateTextContent(''),
              null != i ? a !== i &&
              this.updateTextContent('' + i) : null != s ? o !== s &&
              this.updateMarkup('' + s) : null != l &&
              this.updateChildren(l, n, r)
            },
            unmountComponent: function () {
              switch (this._tag) {
                case 'iframe':
                case 'img':
                case 'form':
                case 'video':
                case 'audio':
                  var e = this._wrapperState.listeners;
                  if (e) for (var t = 0; t < e.length; t++) e[t].remove();
                  break;
                case 'input':
                  C.unmountWrapper(this);
                  break;
                case 'html':
                case 'head':
                case 'body':
                  k(!1)
              }
              if (
                this.unmountChildren(),
                y.deleteAllListeners(this._rootNodeID),
                T.unmountIDFromEnvironment(this._rootNodeID),
                this._rootNodeID = null,
                this._wrapperState = null,
                this._nodeWithLegacyProperties
              ) {
                var n = this._nodeWithLegacyProperties;
                n._reactInternalComponent = null,
                this._nodeWithLegacyProperties = null
              }
            },
            getPublicInstance: function () {
              if (!this._nodeWithLegacyProperties) {
                var e = N.getNode(this._rootNodeID);
                e._reactInternalComponent = this,
                e.getDOMNode = r,
                e.isMounted = a,
                e.setState = i,
                e.replaceState = i,
                e.forceUpdate = i,
                e.setProps = o,
                e.replaceProps = s,
                e.props = this._currentElement.props,
                this._nodeWithLegacyProperties = e
              }
              return this._nodeWithLegacyProperties
            }
          },
          x.measureMethods(
            _,
            'ReactDOMComponent',
            {
              mountComponent: 'mountComponent',
              updateComponent: 'updateComponent'
            }
          ),
          L(_.prototype, _.Mixin, w.Mixin),
          e.exports = _
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return a.createFactory(e)
          }
          var a = n(30),
          i = (n(504), n(1689)),
          o = i({
            a: 'a',
            abbr: 'abbr',
            address: 'address',
            area: 'area',
            article: 'article',
            aside: 'aside',
            audio: 'audio',
            b: 'b',
            base: 'base',
            bdi: 'bdi',
            bdo: 'bdo',
            big: 'big',
            blockquote: 'blockquote',
            body: 'body',
            br: 'br',
            button: 'button',
            canvas: 'canvas',
            caption: 'caption',
            cite: 'cite',
            code: 'code',
            col: 'col',
            colgroup: 'colgroup',
            data: 'data',
            datalist: 'datalist',
            dd: 'dd',
            del: 'del',
            details: 'details',
            dfn: 'dfn',
            dialog: 'dialog',
            div: 'div',
            dl: 'dl',
            dt: 'dt',
            em: 'em',
            embed: 'embed',
            fieldset: 'fieldset',
            figcaption: 'figcaption',
            figure: 'figure',
            footer: 'footer',
            form: 'form',
            h1: 'h1',
            h2: 'h2',
            h3: 'h3',
            h4: 'h4',
            h5: 'h5',
            h6: 'h6',
            head: 'head',
            header: 'header',
            hgroup: 'hgroup',
            hr: 'hr',
            html: 'html',
            i: 'i',
            iframe: 'iframe',
            img: 'img',
            input: 'input',
            ins: 'ins',
            kbd: 'kbd',
            keygen: 'keygen',
            label: 'label',
            legend: 'legend',
            li: 'li',
            link: 'link',
            main: 'main',
            map: 'map',
            mark: 'mark',
            menu: 'menu',
            menuitem: 'menuitem',
            meta: 'meta',
            meter: 'meter',
            nav: 'nav',
            noscript: 'noscript',
            object: 'object',
            ol: 'ol',
            optgroup: 'optgroup',
            option: 'option',
            output: 'output',
            p: 'p',
            param: 'param',
            picture: 'picture',
            pre: 'pre',
            progress: 'progress',
            q: 'q',
            rp: 'rp',
            rt: 'rt',
            ruby: 'ruby',
            s: 's',
            samp: 'samp',
            script: 'script',
            section: 'section',
            select: 'select',
            small: 'small',
            source: 'source',
            span: 'span',
            strong: 'strong',
            style: 'style',
            sub: 'sub',
            summary: 'summary',
            sup: 'sup',
            table: 'table',
            tbody: 'tbody',
            td: 'td',
            textarea: 'textarea',
            tfoot: 'tfoot',
            th: 'th',
            thead: 'thead',
            time: 'time',
            title: 'title',
            tr: 'tr',
            track: 'track',
            u: 'u',
            ul: 'ul',
            'var': 'var',
            video: 'video',
            wbr: 'wbr',
            circle: 'circle',
            clipPath: 'clipPath',
            defs: 'defs',
            ellipse: 'ellipse',
            g: 'g',
            image: 'image',
            line: 'line',
            linearGradient: 'linearGradient',
            mask: 'mask',
            path: 'path',
            pattern: 'pattern',
            polygon: 'polygon',
            polyline: 'polyline',
            radialGradient: 'radialGradient',
            rect: 'rect',
            stop: 'stop',
            svg: 'svg',
            text: 'text',
            tspan: 'tspan'
          }, r);
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          function r() {
            this._rootNodeID &&
            d.updateWrapper(this)
          }
          function a(e) {
            var t = this._currentElement.props,
            n = o.executeOnChange(t, e);
            c.asap(r, this);
            var a = t.name;
            if ('radio' === t.type && null != a) {
              for (var i = s.getNode(this._rootNodeID), l = i; l.parentNode; ) l = l.parentNode;
              for (
                var d = l.querySelectorAll('input[name=' + JSON.stringify('' + a) + '][type="radio"]'),
                f = 0;
                f < d.length;
                f++
              ) {
                var m = d[f];
                if (m !== i && m.form === i.form) {
                  var h = s.getID(m);
                  h ? void 0 : u(!1);
                  var _ = p[h];
                  _ ? void 0 : u(!1),
                  c.asap(r, _)
                }
              }
            }
            return n
          }
          var i = n(293),
          o = n(289),
          s = n(28),
          c = n(35),
          l = n(7),
          u = n(5),
          p = {},
          d = {
            getNativeProps: function (e, t, n) {
              var r = o.getValue(t),
              a = o.getChecked(t),
              i = l({
              }, t, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: null != r ? r : e._wrapperState.initialValue,
                checked: null != a ? a : e._wrapperState.initialChecked,
                onChange: e._wrapperState.onChange
              });
              return i
            },
            mountWrapper: function (e, t) {
              var n = t.defaultValue;
              e._wrapperState = {
                initialChecked: t.defaultChecked ||
                !1,
                initialValue: null != n ? n : null,
                onChange: a.bind(e)
              }
            },
            mountReadyWrapper: function (e) {
              p[e._rootNodeID] = e
            },
            unmountWrapper: function (e) {
              delete p[e._rootNodeID]
            },
            updateWrapper: function (e) {
              var t = e._currentElement.props,
              n = t.checked;
              null != n &&
              i.updatePropertyByID(e._rootNodeID, 'checked', n || !1);
              var r = o.getValue(t);
              null != r &&
              i.updatePropertyByID(e._rootNodeID, 'value', '' + r)
            }
          };
          e.exports = d
        },
        function (e, t, n) {
          'use strict';
          var r = n(496),
          a = n(500),
          i = n(7),
          o = (n(9), a.valueContextKey),
          s = {
            mountWrapper: function (e, t, n) {
              var r = n[o],
              a = null;
              if (null != r) if (a = !1, Array.isArray(r)) {
                for (var i = 0; i < r.length; i++) if ('' + r[i] == '' + t.value) {
                  a = !0;
                  break
                }
              } else a = '' + r == '' + t.value;
              e._wrapperState = {
                selected: a
              }
            },
            getNativeProps: function (e, t, n) {
              var a = i({
                selected: void 0,
                children: void 0
              }, t);
              null != e._wrapperState.selected &&
              (a.selected = e._wrapperState.selected);
              var o = '';
              return r.forEach(
                t.children,
                function (e) {
                  null != e &&
                  ('string' != typeof e && 'number' != typeof e || (o += e))
                }
              ),
              o &&
              (a.children = o),
              a
            }
          };
          e.exports = s
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            return e === n &&
            t === r
          }
          function a(e) {
            var t = document.selection,
            n = t.createRange(),
            r = n.text.length,
            a = n.duplicate();
            a.moveToElementText(e),
            a.setEndPoint('EndToStart', n);
            var i = a.text.length,
            o = i + r;
            return {
              start: i,
              end: o
            }
          }
          function i(e) {
            var t = window.getSelection &&
            window.getSelection();
            if (!t || 0 === t.rangeCount) return null;
            var n = t.anchorNode,
            a = t.anchorOffset,
            i = t.focusNode,
            o = t.focusOffset,
            s = t.getRangeAt(0);
            try {
              s.startContainer.nodeType,
              s.endContainer.nodeType
            } catch (c) {
              return null
            }
            var l = r(t.anchorNode, t.anchorOffset, t.focusNode, t.focusOffset),
            u = l ? 0 : s.toString().length,
            p = s.cloneRange();
            p.selectNodeContents(e),
            p.setEnd(s.startContainer, s.startOffset);
            var d = r(p.startContainer, p.startOffset, p.endContainer, p.endOffset),
            f = d ? 0 : p.toString().length,
            m = f + u,
            h = document.createRange();
            h.setStart(n, a),
            h.setEnd(i, o);
            var _ = h.collapsed;
            return {
              start: _ ? m : f,
              end: _ ? f : m
            }
          }
          function o(e, t) {
            var n,
            r,
            a = document.selection.createRange().duplicate();
            'undefined' == typeof t.end ? (n = t.start, r = n) : t.start > t.end ? (n = t.end, r = t.start) : (n = t.start, r = t.end),
            a.moveToElementText(e),
            a.moveStart('character', n),
            a.setEndPoint('EndToStart', a),
            a.moveEnd('character', r - n),
            a.select()
          }
          function s(e, t) {
            if (window.getSelection) {
              var n = window.getSelection(),
              r = e[u()].length,
              a = Math.min(t.start, r),
              i = 'undefined' == typeof t.end ? a : Math.min(t.end, r);
              if (!n.extend && a > i) {
                var o = i;
                i = a,
                a = o
              }
              var s = l(e, a),
              c = l(e, i);
              if (s && c) {
                var p = document.createRange();
                p.setStart(s.node, s.offset),
                n.removeAllRanges(),
                a > i ? (n.addRange(p), n.extend(c.node, c.offset)) : (p.setEnd(c.node, c.offset), n.addRange(p))
              }
            }
          }
          var c = n(23),
          l = n(1675),
          u = n(519),
          p = c.canUseDOM &&
          'selection' in document &&
          !('getSelection' in window),
          d = {
            getOffsets: p ? a : i,
            setOffsets: p ? o : s
          };
          e.exports = d
        },
        function (e, t, n) {
          'use strict';
          var r = n(503),
          a = n(1654),
          i = n(295);
          r.inject();
          var o = {
            renderToString: a.renderToString,
            renderToStaticMarkup: a.renderToStaticMarkup,
            version: i
          };
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          function r() {
            this._rootNodeID &&
            u.updateWrapper(this)
          }
          function a(e) {
            var t = this._currentElement.props,
            n = i.executeOnChange(t, e);
            return s.asap(r, this),
            n
          }
          var i = n(289),
          o = n(293),
          s = n(35),
          c = n(7),
          l = n(5),
          u = (
            n(9),
            {
              getNativeProps: function (e, t, n) {
                null != t.dangerouslySetInnerHTML ? l(!1) : void 0;
                var r = c({
                }, t, {
                  defaultValue: void 0,
                  value: void 0,
                  children: e._wrapperState.initialValue,
                  onChange: e._wrapperState.onChange
                });
                return r
              },
              mountWrapper: function (e, t) {
                var n = t.defaultValue,
                r = t.children;
                null != r &&
                (
                  null != n ? l(!1) : void 0,
                  Array.isArray(r) &&
                  (r.length <= 1 ? void 0 : l(!1), r = r[0]),
                  n = '' + r
                ),
                null == n &&
                (n = '');
                var o = i.getValue(t);
                e._wrapperState = {
                  initialValue: '' + (null != o ? o : n),
                  onChange: a.bind(e)
                }
              },
              updateWrapper: function (e) {
                var t = e._currentElement.props,
                n = i.getValue(t);
                null != n &&
                o.updatePropertyByID(e._rootNodeID, 'value', '' + n)
              }
            }
          );
          e.exports = u
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            a.enqueueEvents(e),
            a.processEventQueue(!1)
          }
          var a = n(86),
          i = {
            handleTopLevel: function (e, t, n, i, o) {
              var s = a.extractEvents(e, t, n, i, o);
              r(s)
            }
          };
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = d.getID(e),
            n = p.getReactRootIDFromNodeID(t),
            r = d.findReactContainerForID(n),
            a = d.getFirstReactDOM(r);
            return a
          }
          function a(e, t) {
            this.topLevelType = e,
            this.nativeEvent = t,
            this.ancestors = []
          }
          function i(e) {
            o(e)
          }
          function o(e) {
            for (var t = d.getFirstReactDOM(h(e.nativeEvent)) || window, n = t; n; ) e.ancestors.push(n),
            n = r(n);
            for (var a = 0; a < e.ancestors.length; a++) {
              t = e.ancestors[a];
              var i = d.getID(t) ||
              '';
              g._handleTopLevel(e.topLevelType, t, i, e.nativeEvent, h(e.nativeEvent))
            }
          }
          function s(e) {
            var t = _(window);
            e(t)
          }
          var c = n(522),
          l = n(23),
          u = n(51),
          p = n(70),
          d = n(28),
          f = n(35),
          m = n(7),
          h = n(299),
          _ = n(1684);
          m(
            a.prototype,
            {
              destructor: function () {
                this.topLevelType = null,
                this.nativeEvent = null,
                this.ancestors.length = 0
              }
            }
          ),
          u.addPoolingTo(a, u.twoArgumentPooler);
          var g = {
            _enabled: !0,
            _handleTopLevel: null,
            WINDOW_HANDLE: l.canUseDOM ? window : null,
            setHandleTopLevel: function (e) {
              g._handleTopLevel = e
            },
            setEnabled: function (e) {
              g._enabled = !!e
            },
            isEnabled: function () {
              return g._enabled
            },
            trapBubbledEvent: function (e, t, n) {
              var r = n;
              return r ? c.listen(r, t, g.dispatchEvent.bind(null, e)) : null
            },
            trapCapturedEvent: function (e, t, n) {
              var r = n;
              return r ? c.capture(r, t, g.dispatchEvent.bind(null, e)) : null
            },
            monitorScrollValue: function (e) {
              var t = s.bind(null, e);
              c.listen(window, 'scroll', t)
            },
            dispatchEvent: function (e, t) {
              if (g._enabled) {
                var n = a.getPooled(e, t);
                try {
                  f.batchedUpdates(i, n)
                } finally {
                  a.release(n)
                }
              }
            }
          };
          e.exports = g
        },
        function (e, t, n) {
          'use strict';
          var r = n(69),
          a = n(86),
          i = n(291),
          o = n(497),
          s = n(505),
          c = n(119),
          l = n(511),
          u = n(34),
          p = n(514),
          d = n(35),
          f = {
            Component: i.injection,
            Class: o.injection,
            DOMProperty: r.injection,
            EmptyComponent: s.injection,
            EventPluginHub: a.injection,
            EventEmitter: c.injection,
            NativeComponent: l.injection,
            Perf: u.injection,
            RootIndex: p.injection,
            Updates: d.injection
          };
          e.exports = f
        },
        function (e, t, n) {
          'use strict';
          var r = n(496),
          a = n(498),
          i = n(497),
          o = n(1639),
          s = n(30),
          c = (n(504), n(513)),
          l = n(295),
          u = n(7),
          p = n(521),
          d = s.createElement,
          f = s.createFactory,
          m = s.cloneElement,
          h = {
            Children: {
              map: r.map,
              forEach: r.forEach,
              count: r.count,
              toArray: r.toArray,
              only: p
            },
            Component: a,
            createElement: d,
            cloneElement: m,
            isValidElement: s.isValidElement,
            PropTypes: c,
            createClass: i.createClass,
            createFactory: f,
            createMixin: function (e) {
              return e
            },
            DOM: o,
            version: l,
            __spread: u
          };
          e.exports = h
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            _.push({
              parentID: e,
              parentNode: null,
              type: p.INSERT_MARKUP,
              markupIndex: g.push(t) - 1,
              content: null,
              fromIndex: null,
              toIndex: n
            })
          }
          function a(e, t, n) {
            _.push({
              parentID: e,
              parentNode: null,
              type: p.MOVE_EXISTING,
              markupIndex: null,
              content: null,
              fromIndex: t,
              toIndex: n
            })
          }
          function i(e, t) {
            _.push({
              parentID: e,
              parentNode: null,
              type: p.REMOVE_NODE,
              markupIndex: null,
              content: null,
              fromIndex: t,
              toIndex: null
            })
          }
          function o(e, t) {
            _.push({
              parentID: e,
              parentNode: null,
              type: p.SET_MARKUP,
              markupIndex: null,
              content: t,
              fromIndex: null,
              toIndex: null
            })
          }
          function s(e, t) {
            _.push({
              parentID: e,
              parentNode: null,
              type: p.TEXT_CONTENT,
              markupIndex: null,
              content: t,
              fromIndex: null,
              toIndex: null
            })
          }
          function c() {
            _.length &&
            (u.processChildrenUpdates(_, g), l())
          }
          function l() {
            _.length = 0,
            g.length = 0
          }
          var u = n(291),
          p = n(510),
          d = (n(49), n(58)),
          f = n(1635),
          m = n(517),
          h = 0,
          _ = [],
          g = [],
          v = {
            Mixin: {
              _reconcilerInstantiateChildren: function (e, t, n) {
                return f.instantiateChildren(e, t, n)
              },
              _reconcilerUpdateChildren: function (e, t, n, r) {
                var a;
                return a = m(t),
                f.updateChildren(e, a, n, r)
              },
              mountChildren: function (e, t, n) {
                var r = this._reconcilerInstantiateChildren(e, t, n);
                this._renderedChildren = r;
                var a = [],
                i = 0;
                for (var o in r) if (r.hasOwnProperty(o)) {
                  var s = r[o],
                  c = this._rootNodeID + o,
                  l = d.mountComponent(s, c, t, n);
                  s._mountIndex = i++,
                  a.push(l)
                }
                return a
              },
              updateTextContent: function (e) {
                h++;
                var t = !0;
                try {
                  var n = this._renderedChildren;
                  f.unmountChildren(n);
                  for (var r in n) n.hasOwnProperty(r) &&
                  this._unmountChild(n[r]);
                  this.setTextContent(e),
                  t = !1
                } finally {
                  h--,
                  h ||
                  (t ? l() : c())
                }
              },
              updateMarkup: function (e) {
                h++;
                var t = !0;
                try {
                  var n = this._renderedChildren;
                  f.unmountChildren(n);
                  for (var r in n) n.hasOwnProperty(r) &&
                  this._unmountChildByName(n[r], r);
                  this.setMarkup(e),
                  t = !1
                } finally {
                  h--,
                  h ||
                  (t ? l() : c())
                }
              },
              updateChildren: function (e, t, n) {
                h++;
                var r = !0;
                try {
                  this._updateChildren(e, t, n),
                  r = !1
                } finally {
                  h--,
                  h ||
                  (r ? l() : c())
                }
              },
              _updateChildren: function (e, t, n) {
                var r = this._renderedChildren,
                a = this._reconcilerUpdateChildren(r, e, t, n);
                if (this._renderedChildren = a, a || r) {
                  var i,
                  o = 0,
                  s = 0;
                  for (i in a) if (a.hasOwnProperty(i)) {
                    var c = r &&
                    r[i],
                    l = a[i];
                    c === l ? (
                      this.moveChild(c, s, o),
                      o = Math.max(c._mountIndex, o),
                      c._mountIndex = s
                    ) : (
                      c &&
                      (o = Math.max(c._mountIndex, o), this._unmountChild(c)),
                      this._mountChildByNameAtIndex(l, i, s, t, n)
                    ),
                    s++
                  }
                  for (i in r) !r.hasOwnProperty(i) ||
                  a &&
                  a.hasOwnProperty(i) ||
                  this._unmountChild(r[i])
                }
              },
              unmountChildren: function () {
                var e = this._renderedChildren;
                f.unmountChildren(e),
                this._renderedChildren = null
              },
              moveChild: function (e, t, n) {
                e._mountIndex < n &&
                a(this._rootNodeID, e._mountIndex, t)
              },
              createChild: function (e, t) {
                r(this._rootNodeID, t, e._mountIndex)
              },
              removeChild: function (e) {
                i(this._rootNodeID, e._mountIndex)
              },
              setTextContent: function (e) {
                s(this._rootNodeID, e);
              },
              setMarkup: function (e) {
                o(this._rootNodeID, e)
              },
              _mountChildByNameAtIndex: function (e, t, n, r, a) {
                var i = this._rootNodeID + t,
                o = d.mountComponent(e, i, r, a);
                e._mountIndex = n,
                this.createChild(e, o)
              },
              _unmountChild: function (e) {
                this.removeChild(e),
                e._mountIndex = null
              }
            }
          };
          e.exports = v
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = {
            isValidOwner: function (e) {
              return !(
                !e ||
                'function' != typeof e.attachRef ||
                'function' != typeof e.detachRef
              )
            },
            addComponentAsRefTo: function (e, t, n) {
              a.isValidOwner(n) ? void 0 : r(!1),
              n.attachRef(t, e)
            },
            removeComponentAsRefFrom: function (e, t, n) {
              a.isValidOwner(n) ? void 0 : r(!1),
              n.getPublicInstance().refs[t] === e.getPublicInstance() &&
              n.detachRef(t)
            }
          };
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            this.reinitializeTransaction(),
            this.renderToStaticMarkup = !1,
            this.reactMountReady = a.getPooled(null),
            this.useCreateElement = !e &&
            s.useCreateElement
          }
          var a = n(287),
          i = n(51),
          o = n(119),
          s = n(499),
          c = n(508),
          l = n(123),
          u = n(7),
          p = {
            initialize: c.getSelectionInformation,
            close: c.restoreSelection
          },
          d = {
            initialize: function () {
              var e = o.isEnabled();
              return o.setEnabled(!1),
              e
            },
            close: function (e) {
              o.setEnabled(e)
            }
          },
          f = {
            initialize: function () {
              this.reactMountReady.reset()
            },
            close: function () {
              this.reactMountReady.notifyAll()
            }
          },
          m = [
            p,
            d,
            f
          ],
          h = {
            getTransactionWrappers: function () {
              return m
            },
            getReactMountReady: function () {
              return this.reactMountReady
            },
            destructor: function () {
              a.release(this.reactMountReady),
              this.reactMountReady = null
            }
          };
          u(r.prototype, l.Mixin, h),
          i.addPoolingTo(r),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n) {
            'function' == typeof e ? e(t.getPublicInstance()) : i.addComponentAsRefTo(t, e, n)
          }
          function a(e, t, n) {
            'function' == typeof e ? e(null) : i.removeComponentAsRefFrom(t, e, n)
          }
          var i = n(1650),
          o = {};
          o.attachRefs = function (e, t) {
            if (null !== t && t !== !1) {
              var n = t.ref;
              null != n &&
              r(n, e, t._owner)
            }
          },
          o.shouldUpdateRefs = function (e, t) {
            var n = null === e ||
            e === !1,
            r = null === t ||
            t === !1;
            return n ||
            r ||
            t._owner !== e._owner ||
            t.ref !== e.ref
          },
          o.detachRefs = function (e, t) {
            if (null !== t && t !== !1) {
              var n = t.ref;
              null != n &&
              a(n, e, t._owner)
            }
          },
          e.exports = o
        },
        function (e, t) {
          'use strict';
          var n = {
            isBatchingUpdates: !1,
            batchedUpdates: function (e) {
            }
          };
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            o.isValidElement(e) ? void 0 : m(!1);
            var t;
            try {
              p.injection.injectBatchingStrategy(l);
              var n = s.createReactRootID();
              return t = u.getPooled(!1),
              t.perform(
                function () {
                  var r = f(e, null),
                  a = r.mountComponent(n, t, d);
                  return c.addChecksumToMarkup(a)
                },
                null
              )
            } finally {
              u.release(t),
              p.injection.injectBatchingStrategy(i)
            }
          }
          function a(e) {
            o.isValidElement(e) ? void 0 : m(!1);
            var t;
            try {
              p.injection.injectBatchingStrategy(l);
              var n = s.createReactRootID();
              return t = u.getPooled(!0),
              t.perform(
                function () {
                  var r = f(e, null);
                  return r.mountComponent(n, t, d)
                },
                null
              )
            } finally {
              u.release(t),
              p.injection.injectBatchingStrategy(i)
            }
          }
          var i = n(502),
          o = n(30),
          s = n(70),
          c = n(509),
          l = n(1653),
          u = n(1655),
          p = n(35),
          d = n(90),
          f = n(301),
          m = n(5);
          e.exports = {
            renderToString: r,
            renderToStaticMarkup: a
          }
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            this.reinitializeTransaction(),
            this.renderToStaticMarkup = e,
            this.reactMountReady = i.getPooled(null),
            this.useCreateElement = !1
          }
          var a = n(51),
          i = n(287),
          o = n(123),
          s = n(7),
          c = n(36),
          l = {
            initialize: function () {
              this.reactMountReady.reset()
            },
            close: c
          },
          u = [
            l
          ],
          p = {
            getTransactionWrappers: function () {
              return u
            },
            getReactMountReady: function () {
              return this.reactMountReady
            },
            destructor: function () {
              i.release(this.reactMountReady),
              this.reactMountReady = null
            }
          };
          s(r.prototype, o.Mixin, p),
          a.addPoolingTo(r),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(517),
          a = {
            getChildMapping: function (e) {
              return e ? r(e) : e
            },
            mergeChildMappings: function (e, t) {
              function n(n) {
                return t.hasOwnProperty(n) ? t[n] : e[n]
              }
              e = e ||
              {
              },
              t = t ||
              {
              };
              var r = {},
              a = [];
              for (var i in e) t.hasOwnProperty(i) ? a.length &&
              (r[i] = a, a = []) : a.push(i);
              var o,
              s = {};
              for (var c in t) {
                if (r.hasOwnProperty(c)) for (o = 0; o < r[c].length; o++) {
                  var l = r[c][o];
                  s[r[c][o]] = n(l)
                }
                s[c] = n(c)
              }
              for (o = 0; o < a.length; o++) s[a[o]] = n(a[o]);
              return s
            }
          };
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r() {
            var e = document.createElement('div'),
            t = e.style;
            'AnimationEvent' in window ||
            delete s.animationend.animation,
            'TransitionEvent' in window ||
            delete s.transitionend.transition;
            for (var n in s) {
              var r = s[n];
              for (var a in r) if (a in t) {
                c.push(r[a]);
                break
              }
            }
          }
          function a(e, t, n) {
            e.addEventListener(t, n, !1)
          }
          function i(e, t, n) {
            e.removeEventListener(t, n, !1)
          }
          var o = n(23),
          s = {
            transitionend: {
              transition: 'transitionend',
              WebkitTransition: 'webkitTransitionEnd',
              MozTransition: 'mozTransitionEnd',
              OTransition: 'oTransitionEnd',
              msTransition: 'MSTransitionEnd'
            },
            animationend: {
              animation: 'animationend',
              WebkitAnimation: 'webkitAnimationEnd',
              MozAnimation: 'mozAnimationEnd',
              OAnimation: 'oAnimationEnd',
              msAnimation: 'MSAnimationEnd'
            }
          },
          c = [];
          o.canUseDOM &&
          r();
          var l = {
            addEndEventListener: function (e, t) {
              return 0 === c.length ? void window.setTimeout(t, 0) : void c.forEach(function (n) {
                a(e, n, t)
              })
            },
            removeEndEventListener: function (e, t) {
              0 !== c.length &&
              c.forEach(function (n) {
                i(e, n, t)
              })
            }
          };
          e.exports = l
        },
        function (e, t, n) {
          'use strict';
          var r = n(118),
          a = n(1656),
          i = n(7),
          o = n(36),
          s = r.createClass({
            displayName: 'ReactTransitionGroup',
            propTypes: {
              component: r.PropTypes.any,
              childFactory: r.PropTypes.func
            },
            getDefaultProps: function () {
              return {
                component: 'span',
                childFactory: o.thatReturnsArgument
              }
            },
            getInitialState: function () {
              return {
                children: a.getChildMapping(this.props.children)
              }
            },
            componentWillMount: function () {
              this.currentlyTransitioningKeys = {},
              this.keysToEnter = [],
              this.keysToLeave = []
            },
            componentDidMount: function () {
              var e = this.state.children;
              for (var t in e) e[t] &&
              this.performAppear(t)
            },
            componentWillReceiveProps: function (e) {
              var t = a.getChildMapping(e.children),
              n = this.state.children;
              this.setState({
                children: a.mergeChildMappings(n, t)
              });
              var r;
              for (r in t) {
                var i = n &&
                n.hasOwnProperty(r);
                !t[r] ||
                i ||
                this.currentlyTransitioningKeys[r] ||
                this.keysToEnter.push(r)
              }
              for (r in n) {
                var o = t &&
                t.hasOwnProperty(r);
                !n[r] ||
                o ||
                this.currentlyTransitioningKeys[r] ||
                this.keysToLeave.push(r)
              }
            },
            componentDidUpdate: function () {
              var e = this.keysToEnter;
              this.keysToEnter = [],
              e.forEach(this.performEnter);
              var t = this.keysToLeave;
              this.keysToLeave = [],
              t.forEach(this.performLeave)
            },
            performAppear: function (e) {
              this.currentlyTransitioningKeys[e] = !0;
              var t = this.refs[e];
              t.componentWillAppear ? t.componentWillAppear(this._handleDoneAppearing.bind(this, e)) : this._handleDoneAppearing(e)
            },
            _handleDoneAppearing: function (e) {
              var t = this.refs[e];
              t.componentDidAppear &&
              t.componentDidAppear(),
              delete this.currentlyTransitioningKeys[e];
              var n = a.getChildMapping(this.props.children);
              n &&
              n.hasOwnProperty(e) ||
              this.performLeave(e)
            },
            performEnter: function (e) {
              this.currentlyTransitioningKeys[e] = !0;
              var t = this.refs[e];
              t.componentWillEnter ? t.componentWillEnter(this._handleDoneEntering.bind(this, e)) : this._handleDoneEntering(e)
            },
            _handleDoneEntering: function (e) {
              var t = this.refs[e];
              t.componentDidEnter &&
              t.componentDidEnter(),
              delete this.currentlyTransitioningKeys[e];
              var n = a.getChildMapping(this.props.children);
              n &&
              n.hasOwnProperty(e) ||
              this.performLeave(e)
            },
            performLeave: function (e) {
              this.currentlyTransitioningKeys[e] = !0;
              var t = this.refs[e];
              t.componentWillLeave ? t.componentWillLeave(this._handleDoneLeaving.bind(this, e)) : this._handleDoneLeaving(e)
            },
            _handleDoneLeaving: function (e) {
              var t = this.refs[e];
              t.componentDidLeave &&
              t.componentDidLeave(),
              delete this.currentlyTransitioningKeys[e];
              var n = a.getChildMapping(this.props.children);
              n &&
              n.hasOwnProperty(e) ? this.performEnter(e) : this.setState(
                function (t) {
                  var n = i({
                  }, t.children);
                  return delete n[e],
                  {
                    children: n
                  }
                }
              )
            },
            render: function () {
              var e = [];
              for (var t in this.state.children) {
                var n = this.state.children[t];
                n &&
                e.push(r.cloneElement(this.props.childFactory(n), {
                  ref: t,
                  key: t
                }))
              }
              return r.createElement(this.props.component, this.props, e)
            }
          });
          e.exports = s
        },
        function (e, t, n) {
          'use strict';
          var r = n(69),
          a = r.injection.MUST_USE_ATTRIBUTE,
          i = {
            xlink: 'http://www.w3.org/1999/xlink',
            xml: 'http://www.w3.org/XML/1998/namespace'
          },
          o = {
            Properties: {
              clipPath: a,
              cx: a,
              cy: a,
              d: a,
              dx: a,
              dy: a,
              fill: a,
              fillOpacity: a,
              fontFamily: a,
              fontSize: a,
              fx: a,
              fy: a,
              gradientTransform: a,
              gradientUnits: a,
              markerEnd: a,
              markerMid: a,
              markerStart: a,
              offset: a,
              opacity: a,
              patternContentUnits: a,
              patternUnits: a,
              points: a,
              preserveAspectRatio: a,
              r: a,
              rx: a,
              ry: a,
              spreadMethod: a,
              stopColor: a,
              stopOpacity: a,
              stroke: a,
              strokeDasharray: a,
              strokeLinecap: a,
              strokeOpacity: a,
              strokeWidth: a,
              textAnchor: a,
              transform: a,
              version: a,
              viewBox: a,
              x1: a,
              x2: a,
              x: a,
              xlinkActuate: a,
              xlinkArcrole: a,
              xlinkHref: a,
              xlinkRole: a,
              xlinkShow: a,
              xlinkTitle: a,
              xlinkType: a,
              xmlBase: a,
              xmlLang: a,
              xmlSpace: a,
              y1: a,
              y2: a,
              y: a
            },
            DOMAttributeNamespaces: {
              xlinkActuate: i.xlink,
              xlinkArcrole: i.xlink,
              xlinkHref: i.xlink,
              xlinkRole: i.xlink,
              xlinkShow: i.xlink,
              xlinkTitle: i.xlink,
              xlinkType: i.xlink,
              xmlBase: i.xml,
              xmlLang: i.xml,
              xmlSpace: i.xml
            },
            DOMAttributeNames: {
              clipPath: 'clip-path',
              fillOpacity: 'fill-opacity',
              fontFamily: 'font-family',
              fontSize: 'font-size',
              gradientTransform: 'gradientTransform',
              gradientUnits: 'gradientUnits',
              markerEnd: 'marker-end',
              markerMid: 'marker-mid',
              markerStart: 'marker-start',
              patternContentUnits: 'patternContentUnits',
              patternUnits: 'patternUnits',
              preserveAspectRatio: 'preserveAspectRatio',
              spreadMethod: 'spreadMethod',
              stopColor: 'stop-color',
              stopOpacity: 'stop-opacity',
              strokeDasharray: 'stroke-dasharray',
              strokeLinecap: 'stroke-linecap',
              strokeOpacity: 'stroke-opacity',
              strokeWidth: 'stroke-width',
              textAnchor: 'text-anchor',
              viewBox: 'viewBox',
              xlinkActuate: 'xlink:actuate',
              xlinkArcrole: 'xlink:arcrole',
              xlinkHref: 'xlink:href',
              xlinkRole: 'xlink:role',
              xlinkShow: 'xlink:show',
              xlinkTitle: 'xlink:title',
              xlinkType: 'xlink:type',
              xmlBase: 'xml:base',
              xmlLang: 'xml:lang',
              xmlSpace: 'xml:space'
            }
          };
          e.exports = o
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            if ('selectionStart' in e && c.hasSelectionCapabilities(e)) return {
              start: e.selectionStart,
              end: e.selectionEnd
            };
            if (window.getSelection) {
              var t = window.getSelection();
              return {
                anchorNode: t.anchorNode,
                anchorOffset: t.anchorOffset,
                focusNode: t.focusNode,
                focusOffset: t.focusOffset
              }
            }
            if (document.selection) {
              var n = document.selection.createRange();
              return {
                parentElement: n.parentElement(),
                text: n.text,
                top: n.boundingTop,
                left: n.boundingLeft
              }
            }
          }
          function a(e, t) {
            if (I || null == g || g !== u()) return null;
            var n = r(g);
            if (!E || !f(E, n)) {
              E = n;
              var a = l.getPooled(_.select, v, e, t);
              return a.type = 'select',
              a.target = g,
              o.accumulateTwoPhaseDispatches(a),
              a
            }
            return null
          }
          var i = n(48),
          o = n(87),
          s = n(23),
          c = n(508),
          l = n(59),
          u = n(525),
          p = n(520),
          d = n(50),
          f = n(527),
          m = i.topLevelTypes,
          h = s.canUseDOM &&
          'documentMode' in document &&
          document.documentMode <= 11,
          _ = {
            select: {
              phasedRegistrationNames: {
                bubbled: d({
                  onSelect: null
                }),
                captured: d({
                  onSelectCapture: null
                })
              },
              dependencies: [
                m.topBlur,
                m.topContextMenu,
                m.topFocus,
                m.topKeyDown,
                m.topMouseDown,
                m.topMouseUp,
                m.topSelectionChange
              ]
            }
          },
          g = null,
          v = null,
          E = null,
          I = !1,
          b = !1,
          y = d({
            onSelect: null
          }),
          T = {
            eventTypes: _,
            extractEvents: function (e, t, n, r, i) {
              if (!b) return null;
              switch (e) {
                case m.topFocus:
                  (p(t) || 'true' === t.contentEditable) &&
                  (g = t, v = n, E = null);
                  break;
                case m.topBlur:
                  g = null,
                  v = null,
                  E = null;
                  break;
                case m.topMouseDown:
                  I = !0;
                  break;
                case m.topContextMenu:
                case m.topMouseUp:
                  return I = !1,
                  a(r, i);
                case m.topSelectionChange:
                  if (h) break;
                case m.topKeyDown:
                case m.topKeyUp:
                  return a(r, i)
              }
              return null
            },
            didPutListener: function (e, t, n) {
              t === y &&
              (b = !0)
            }
          };
          e.exports = T
        },
        function (e, t) {
          'use strict';
          var n = Math.pow(2, 53),
          r = {
            createReactRootIndex: function () {
              return Math.ceil(Math.random() * n)
            }
          };
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(48),
          a = n(522),
          i = n(87),
          o = n(28),
          s = n(1663),
          c = n(59),
          l = n(1666),
          u = n(1668),
          p = n(122),
          d = n(1665),
          f = n(1669),
          m = n(89),
          h = n(1670),
          _ = n(36),
          g = n(297),
          v = n(5),
          E = n(50),
          I = r.topLevelTypes,
          b = {
            abort: {
              phasedRegistrationNames: {
                bubbled: E({
                  onAbort: !0
                }),
                captured: E({
                  onAbortCapture: !0
                })
              }
            },
            blur: {
              phasedRegistrationNames: {
                bubbled: E({
                  onBlur: !0
                }),
                captured: E({
                  onBlurCapture: !0
                })
              }
            },
            canPlay: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCanPlay: !0
                }),
                captured: E({
                  onCanPlayCapture: !0
                })
              }
            },
            canPlayThrough: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCanPlayThrough: !0
                }),
                captured: E({
                  onCanPlayThroughCapture: !0
                })
              }
            },
            click: {
              phasedRegistrationNames: {
                bubbled: E({
                  onClick: !0
                }),
                captured: E({
                  onClickCapture: !0
                })
              }
            },
            contextMenu: {
              phasedRegistrationNames: {
                bubbled: E({
                  onContextMenu: !0
                }),
                captured: E({
                  onContextMenuCapture: !0
                })
              }
            },
            copy: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCopy: !0
                }),
                captured: E({
                  onCopyCapture: !0
                })
              }
            },
            cut: {
              phasedRegistrationNames: {
                bubbled: E({
                  onCut: !0
                }),
                captured: E({
                  onCutCapture: !0
                })
              }
            },
            doubleClick: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDoubleClick: !0
                }),
                captured: E({
                  onDoubleClickCapture: !0
                })
              }
            },
            drag: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDrag: !0
                }),
                captured: E({
                  onDragCapture: !0
                })
              }
            },
            dragEnd: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragEnd: !0
                }),
                captured: E({
                  onDragEndCapture: !0
                })
              }
            },
            dragEnter: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragEnter: !0
                }),
                captured: E({
                  onDragEnterCapture: !0
                })
              }
            },
            dragExit: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragExit: !0
                }),
                captured: E({
                  onDragExitCapture: !0
                })
              }
            },
            dragLeave: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragLeave: !0
                }),
                captured: E({
                  onDragLeaveCapture: !0
                })
              }
            },
            dragOver: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragOver: !0
                }),
                captured: E({
                  onDragOverCapture: !0
                })
              }
            },
            dragStart: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDragStart: !0
                }),
                captured: E({
                  onDragStartCapture: !0
                })
              }
            },
            drop: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDrop: !0
                }),
                captured: E({
                  onDropCapture: !0
                })
              }
            },
            durationChange: {
              phasedRegistrationNames: {
                bubbled: E({
                  onDurationChange: !0
                }),
                captured: E({
                  onDurationChangeCapture: !0
                })
              }
            },
            emptied: {
              phasedRegistrationNames: {
                bubbled: E({
                  onEmptied: !0
                }),
                captured: E({
                  onEmptiedCapture: !0
                })
              }
            },
            encrypted: {
              phasedRegistrationNames: {
                bubbled: E({
                  onEncrypted: !0
                }),
                captured: E({
                  onEncryptedCapture: !0
                })
              }
            },
            ended: {
              phasedRegistrationNames: {
                bubbled: E({
                  onEnded: !0
                }),
                captured: E({
                  onEndedCapture: !0
                })
              }
            },
            error: {
              phasedRegistrationNames: {
                bubbled: E({
                  onError: !0
                }),
                captured: E({
                  onErrorCapture: !0
                })
              }
            },
            focus: {
              phasedRegistrationNames: {
                bubbled: E({
                  onFocus: !0
                }),
                captured: E({
                  onFocusCapture: !0
                })
              }
            },
            input: {
              phasedRegistrationNames: {
                bubbled: E({
                  onInput: !0
                }),
                captured: E({
                  onInputCapture: !0
                })
              }
            },
            keyDown: {
              phasedRegistrationNames: {
                bubbled: E({
                  onKeyDown: !0
                }),
                captured: E({
                  onKeyDownCapture: !0
                })
              }
            },
            keyPress: {
              phasedRegistrationNames: {
                bubbled: E({
                  onKeyPress: !0
                }),
                captured: E({
                  onKeyPressCapture: !0
                })
              }
            },
            keyUp: {
              phasedRegistrationNames: {
                bubbled: E({
                  onKeyUp: !0
                }),
                captured: E({
                  onKeyUpCapture: !0
                })
              }
            },
            load: {
              phasedRegistrationNames: {
                bubbled: E({
                  onLoad: !0
                }),
                captured: E({
                  onLoadCapture: !0
                })
              }
            },
            loadedData: {
              phasedRegistrationNames: {
                bubbled: E({
                  onLoadedData: !0
                }),
                captured: E({
                  onLoadedDataCapture: !0
                })
              }
            },
            loadedMetadata: {
              phasedRegistrationNames: {
                bubbled: E({
                  onLoadedMetadata: !0
                }),
                captured: E({
                  onLoadedMetadataCapture: !0
                })
              }
            },
            loadStart: {
              phasedRegistrationNames: {
                bubbled: E({
                  onLoadStart: !0
                }),
                captured: E({
                  onLoadStartCapture: !0
                })
              }
            },
            mouseDown: {
              phasedRegistrationNames: {
                bubbled: E({
                  onMouseDown: !0
                }),
                captured: E({
                  onMouseDownCapture: !0
                })
              }
            },
            mouseMove: {
              phasedRegistrationNames: {
                bubbled: E({
                  onMouseMove: !0
                }),
                captured: E({
                  onMouseMoveCapture: !0
                })
              }
            },
            mouseOut: {
              phasedRegistrationNames: {
                bubbled: E({
                  onMouseOut: !0
                }),
                captured: E({
                  onMouseOutCapture: !0
                })
              }
            },
            mouseOver: {
              phasedRegistrationNames: {
                bubbled: E({
                  onMouseOver: !0
                }),
                captured: E({
                  onMouseOverCapture: !0
                })
              }
            },
            mouseUp: {
              phasedRegistrationNames: {
                bubbled: E({
                  onMouseUp: !0
                }),
                captured: E({
                  onMouseUpCapture: !0
                })
              }
            },
            paste: {
              phasedRegistrationNames: {
                bubbled: E({
                  onPaste: !0
                }),
                captured: E({
                  onPasteCapture: !0
                })
              }
            },
            pause: {
              phasedRegistrationNames: {
                bubbled: E({
                  onPause: !0
                }),
                captured: E({
                  onPauseCapture: !0
                })
              }
            },
            play: {
              phasedRegistrationNames: {
                bubbled: E({
                  onPlay: !0
                }),
                captured: E({
                  onPlayCapture: !0
                })
              }
            },
            playing: {
              phasedRegistrationNames: {
                bubbled: E({
                  onPlaying: !0
                }),
                captured: E({
                  onPlayingCapture: !0
                })
              }
            },
            progress: {
              phasedRegistrationNames: {
                bubbled: E({
                  onProgress: !0
                }),
                captured: E({
                  onProgressCapture: !0
                })
              }
            },
            rateChange: {
              phasedRegistrationNames: {
                bubbled: E({
                  onRateChange: !0
                }),
                captured: E({
                  onRateChangeCapture: !0
                })
              }
            },
            reset: {
              phasedRegistrationNames: {
                bubbled: E({
                  onReset: !0
                }),
                captured: E({
                  onResetCapture: !0
                })
              }
            },
            scroll: {
              phasedRegistrationNames: {
                bubbled: E({
                  onScroll: !0
                }),
                captured: E({
                  onScrollCapture: !0
                })
              }
            },
            seeked: {
              phasedRegistrationNames: {
                bubbled: E({
                  onSeeked: !0
                }),
                captured: E({
                  onSeekedCapture: !0
                })
              }
            },
            seeking: {
              phasedRegistrationNames: {
                bubbled: E({
                  onSeeking: !0
                }),
                captured: E({
                  onSeekingCapture: !0
                })
              }
            },
            stalled: {
              phasedRegistrationNames: {
                bubbled: E({
                  onStalled: !0
                }),
                captured: E({
                  onStalledCapture: !0
                })
              }
            },
            submit: {
              phasedRegistrationNames: {
                bubbled: E({
                  onSubmit: !0
                }),
                captured: E({
                  onSubmitCapture: !0
                })
              }
            },
            suspend: {
              phasedRegistrationNames: {
                bubbled: E({
                  onSuspend: !0
                }),
                captured: E({
                  onSuspendCapture: !0
                })
              }
            },
            timeUpdate: {
              phasedRegistrationNames: {
                bubbled: E({
                  onTimeUpdate: !0
                }),
                captured: E({
                  onTimeUpdateCapture: !0
                })
              }
            },
            touchCancel: {
              phasedRegistrationNames: {
                bubbled: E({
                  onTouchCancel: !0
                }),
                captured: E({
                  onTouchCancelCapture: !0
                })
              }
            },
            touchEnd: {
              phasedRegistrationNames: {
                bubbled: E({
                  onTouchEnd: !0
                }),
                captured: E({
                  onTouchEndCapture: !0
                })
              }
            },
            touchMove: {
              phasedRegistrationNames: {
                bubbled: E({
                  onTouchMove: !0
                }),
                captured: E({
                  onTouchMoveCapture: !0
                })
              }
            },
            touchStart: {
              phasedRegistrationNames: {
                bubbled: E({
                  onTouchStart: !0
                }),
                captured: E({
                  onTouchStartCapture: !0
                })
              }
            },
            volumeChange: {
              phasedRegistrationNames: {
                bubbled: E({
                  onVolumeChange: !0
                }),
                captured: E({
                  onVolumeChangeCapture: !0
                })
              }
            },
            waiting: {
              phasedRegistrationNames: {
                bubbled: E({
                  onWaiting: !0
                }),
                captured: E({
                  onWaitingCapture: !0
                })
              }
            },
            wheel: {
              phasedRegistrationNames: {
                bubbled: E({
                  onWheel: !0
                }),
                captured: E({
                  onWheelCapture: !0
                })
              }
            }
          },
          y = {
            topAbort: b.abort,
            topBlur: b.blur,
            topCanPlay: b.canPlay,
            topCanPlayThrough: b.canPlayThrough,
            topClick: b.click,
            topContextMenu: b.contextMenu,
            topCopy: b.copy,
            topCut: b.cut,
            topDoubleClick: b.doubleClick,
            topDrag: b.drag,
            topDragEnd: b.dragEnd,
            topDragEnter: b.dragEnter,
            topDragExit: b.dragExit,
            topDragLeave: b.dragLeave,
            topDragOver: b.dragOver,
            topDragStart: b.dragStart,
            topDrop: b.drop,
            topDurationChange: b.durationChange,
            topEmptied: b.emptied,
            topEncrypted: b.encrypted,
            topEnded: b.ended,
            topError: b.error,
            topFocus: b.focus,
            topInput: b.input,
            topKeyDown: b.keyDown,
            topKeyPress: b.keyPress,
            topKeyUp: b.keyUp,
            topLoad: b.load,
            topLoadedData: b.loadedData,
            topLoadedMetadata: b.loadedMetadata,
            topLoadStart: b.loadStart,
            topMouseDown: b.mouseDown,
            topMouseMove: b.mouseMove,
            topMouseOut: b.mouseOut,
            topMouseOver: b.mouseOver,
            topMouseUp: b.mouseUp,
            topPaste: b.paste,
            topPause: b.pause,
            topPlay: b.play,
            topPlaying: b.playing,
            topProgress: b.progress,
            topRateChange: b.rateChange,
            topReset: b.reset,
            topScroll: b.scroll,
            topSeeked: b.seeked,
            topSeeking: b.seeking,
            topStalled: b.stalled,
            topSubmit: b.submit,
            topSuspend: b.suspend,
            topTimeUpdate: b.timeUpdate,
            topTouchCancel: b.touchCancel,
            topTouchEnd: b.touchEnd,
            topTouchMove: b.touchMove,
            topTouchStart: b.touchStart,
            topVolumeChange: b.volumeChange,
            topWaiting: b.waiting,
            topWheel: b.wheel
          };
          for (var T in y) y[T].dependencies = [
            T
          ];
          var S = E({
            onClick: null
          }),
          C = {},
          D = {
            eventTypes: b,
            extractEvents: function (e, t, n, r, a) {
              var o = y[e];
              if (!o) return null;
              var _;
              switch (e) {
                case I.topAbort:
                case I.topCanPlay:
                case I.topCanPlayThrough:
                case I.topDurationChange:
                case I.topEmptied:
                case I.topEncrypted:
                case I.topEnded:
                case I.topError:
                case I.topInput:
                case I.topLoad:
                case I.topLoadedData:
                case I.topLoadedMetadata:
                case I.topLoadStart:
                case I.topPause:
                case I.topPlay:
                case I.topPlaying:
                case I.topProgress:
                case I.topRateChange:
                case I.topReset:
                case I.topSeeked:
                case I.topSeeking:
                case I.topStalled:
                case I.topSubmit:
                case I.topSuspend:
                case I.topTimeUpdate:
                case I.topVolumeChange:
                case I.topWaiting:
                  _ = c;
                  break;
                case I.topKeyPress:
                  if (0 === g(r)) return null;
                case I.topKeyDown:
                case I.topKeyUp:
                  _ = u;
                  break;
                case I.topBlur:
                case I.topFocus:
                  _ = l;
                  break;
                case I.topClick:
                  if (2 === r.button) return null;
                case I.topContextMenu:
                case I.topDoubleClick:
                case I.topMouseDown:
                case I.topMouseMove:
                case I.topMouseOut:
                case I.topMouseOver:
                case I.topMouseUp:
                  _ = p;
                  break;
                case I.topDrag:
                case I.topDragEnd:
                case I.topDragEnter:
                case I.topDragExit:
                case I.topDragLeave:
                case I.topDragOver:
                case I.topDragStart:
                case I.topDrop:
                  _ = d;
                  break;
                case I.topTouchCancel:
                case I.topTouchEnd:
                case I.topTouchMove:
                case I.topTouchStart:
                  _ = f;
                  break;
                case I.topScroll:
                  _ = m;
                  break;
                case I.topWheel:
                  _ = h;
                  break;
                case I.topCopy:
                case I.topCut:
                case I.topPaste:
                  _ = s
              }
              _ ? void 0 : v(!1);
              var E = _.getPooled(o, n, r, a);
              return i.accumulateTwoPhaseDispatches(E),
              E
            },
            didPutListener: function (e, t, n) {
              if (t === S) {
                var r = o.getNode(e);
                C[e] ||
                (C[e] = a.listen(r, 'click', _))
              }
            },
            willDeleteListener: function (e, t) {
              t === S &&
              (C[e].remove(), delete C[e])
            }
          };
          e.exports = D
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(59),
          i = {
            clipboardData: function (e) {
              return 'clipboardData' in e ? e.clipboardData : window.clipboardData
            }
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(59),
          i = {
            data: null
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(122),
          i = {
            dataTransfer: null
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(89),
          i = {
            relatedTarget: null
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(59),
          i = {
            data: null
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(89),
          i = n(297),
          o = n(1674),
          s = n(298),
          c = {
            key: o,
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: s,
            charCode: function (e) {
              return 'keypress' === e.type ? i(e) : 0
            },
            keyCode: function (e) {
              return 'keydown' === e.type ||
              'keyup' === e.type ? e.keyCode : 0
            },
            which: function (e) {
              return 'keypress' === e.type ? i(e) : 'keydown' === e.type ||
              'keyup' === e.type ? e.keyCode : 0
            }
          };
          a.augmentClass(r, c),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(89),
          i = n(298),
          o = {
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: i
          };
          a.augmentClass(r, o),
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r) {
            a.call(this, e, t, n, r)
          }
          var a = n(122),
          i = {
            deltaX: function (e) {
              return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? - e.wheelDeltaX : 0
            },
            deltaY: function (e) {
              return 'deltaY' in e ? e.deltaY : 'wheelDeltaY' in e ? - e.wheelDeltaY : 'wheelDelta' in e ? - e.wheelDelta : 0
            },
            deltaZ: null,
            deltaMode: null
          };
          a.augmentClass(r, i),
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            for (var t = 1, n = 0, a = 0, i = e.length, o = - 4 & i; o > a; ) {
              for (; a < Math.min(a + 4096, o); a += 4) n += (t += e.charCodeAt(a)) + (t += e.charCodeAt(a + 1)) + (t += e.charCodeAt(a + 2)) + (t += e.charCodeAt(a + 3));
              t %= r,
              n %= r
            }
            for (; i > a; a++) n += t += e.charCodeAt(a);
            return t %= r,
            n %= r,
            t | n << 16
          }
          var r = 65521;
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e, t) {
            var n = null == t ||
            'boolean' == typeof t ||
            '' === t;
            if (n) return '';
            var r = isNaN(t);
            return r ||
            0 === t ||
            i.hasOwnProperty(e) &&
            i[e] ? '' + t : ('string' == typeof t && (t = t.trim()), t + 'px')
          }
          var a = n(493),
          i = a.isUnitlessNumber;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e, t, n, r, a) {
            return a
          }
          n(7),
          n(9);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            if (e.key) {
              var t = i[e.key] ||
              e.key;
              if ('Unidentified' !== t) return t
            }
            if ('keypress' === e.type) {
              var n = a(e);
              return 13 === n ? 'Enter' : String.fromCharCode(n)
            }
            return 'keydown' === e.type ||
            'keyup' === e.type ? o[e.keyCode] ||
            'Unidentified' : ''
          }
          var a = n(297),
          i = {
            Esc: 'Escape',
            Spacebar: ' ',
            Left: 'ArrowLeft',
            Up: 'ArrowUp',
            Right: 'ArrowRight',
            Down: 'ArrowDown',
            Del: 'Delete',
            Win: 'OS',
            Menu: 'ContextMenu',
            Apps: 'ContextMenu',
            Scroll: 'ScrollLock',
            MozPrintableKey: 'Unidentified'
          },
          o = {
            8: 'Backspace',
            9: 'Tab',
            12: 'Clear',
            13: 'Enter',
            16: 'Shift',
            17: 'Control',
            18: 'Alt',
            19: 'Pause',
            20: 'CapsLock',
            27: 'Escape',
            32: ' ',
            33: 'PageUp',
            34: 'PageDown',
            35: 'End',
            36: 'Home',
            37: 'ArrowLeft',
            38: 'ArrowUp',
            39: 'ArrowRight',
            40: 'ArrowDown',
            45: 'Insert',
            46: 'Delete',
            112: 'F1',
            113: 'F2',
            114: 'F3',
            115: 'F4',
            116: 'F5',
            117: 'F6',
            118: 'F7',
            119: 'F8',
            120: 'F9',
            121: 'F10',
            122: 'F11',
            123: 'F12',
            144: 'NumLock',
            145: 'ScrollLock',
            224: 'Meta'
          };
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            for (; e && e.firstChild; ) e = e.firstChild;
            return e
          }
          function r(e) {
            for (; e; ) {
              if (e.nextSibling) return e.nextSibling;
              e = e.parentNode
            }
          }
          function a(e, t) {
            for (var a = n(e), i = 0, o = 0; a; ) {
              if (3 === a.nodeType) {
                if (o = i + a.textContent.length, t >= i && o >= t) return {
                  node: a,
                  offset: t - i
                };
                i = o
              }
              a = n(r(a))
            }
          }
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return '"' + a(e) + '"'
          }
          var a = n(125);
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          var r = n(28);
          e.exports = r.renderSubtreeIntoContainer
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return Array.isArray(e) ? e.concat() : e &&
            'object' == typeof e ? o(new e.constructor, e) : e
          }
          function a(e, t, n) {
            Array.isArray(e) ? void 0 : c(!1);
            var r = t[n];
            Array.isArray(r) ? void 0 : c(!1)
          }
          function i(e, t) {
            if ('object' != typeof t ? c(!1) : void 0, l.call(t, f)) return 1 !== Object.keys(t).length ? c(!1) : void 0,
            t[f];
            var n = r(e);
            if (l.call(t, m)) {
              var s = t[m];
              s &&
              'object' == typeof s ? void 0 : c(!1),
              n &&
              'object' == typeof n ? void 0 : c(!1),
              o(n, t[m])
            }
            l.call(t, u) &&
            (a(e, t, u), t[u].forEach(function (e) {
              n.push(e)
            })),
            l.call(t, p) &&
            (a(e, t, p), t[p].forEach(function (e) {
              n.unshift(e)
            })),
            l.call(t, d) &&
            (
              Array.isArray(e) ? void 0 : c(!1),
              Array.isArray(t[d]) ? void 0 : c(!1),
              t[d].forEach(
                function (e) {
                  Array.isArray(e) ? void 0 : c(!1),
                  n.splice.apply(n, e)
                }
              )
            ),
            l.call(t, h) &&
            ('function' != typeof t[h] ? c(!1) : void 0, n = t[h](n));
            for (var _ in t) g.hasOwnProperty(_) &&
            g[_] ||
            (n[_] = i(e[_], t[_]));
            return n
          }
          var o = n(7),
          s = n(50),
          c = n(5),
          l = {}.hasOwnProperty,
          u = s({
            $push: null
          }),
          p = s({
            $unshift: null
          }),
          d = s({
            $splice: null
          }),
          f = s({
            $set: null
          }),
          m = s({
            $merge: null
          }),
          h = s({
            $apply: null
          }),
          _ = [
            u,
            p,
            d,
            f,
            m,
            h
          ],
          g = {};
          _.forEach(function (e) {
            g[e] = !0
          }),
          e.exports = i
        },
        function (e, t, n) {
          'use strict';
          var r = n(5),
          a = {
            addClass: function (e, t) {
              return /\s/.test(t) ? r(!1) : void 0,
              t &&
              (
                e.classList ? e.classList.add(t) : a.hasClass(e, t) ||
                (e.className = e.className + ' ' + t)
              ),
              e
            },
            removeClass: function (e, t) {
              return /\s/.test(t) ? r(!1) : void 0,
              t &&
              (
                e.classList ? e.classList.remove(t) : a.hasClass(e, t) &&
                (
                  e.className = e.className.replace(new RegExp('(^|\\s)' + t + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '')
                )
              ),
              e
            },
            conditionClass: function (e, t, n) {
              return (n ? a.addClass : a.removeClass) (e, t)
            },
            hasClass: function (e, t) {
              return /\s/.test(t) ? r(!1) : void 0,
              e.classList ? !!t &&
              e.classList.contains(t) : (' ' + e.className + ' ').indexOf(' ' + t + ' ') > - 1
            }
          };
          e.exports = a
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return e.replace(r, function (e, t) {
              return t.toUpperCase()
            })
          }
          var r = /-(.)/g;
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return a(e.replace(i, 'ms-'))
          }
          var a = n(1680),
          i = /^-ms-/;
          e.exports = r
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return !!e &&
            ('object' == typeof e || 'function' == typeof e) &&
            'length' in e &&
            !('setInterval' in e) &&
            'number' != typeof e.nodeType &&
            (Array.isArray(e) || 'callee' in e || 'item' in e)
          }
          function a(e) {
            return r(e) ? Array.isArray(e) ? e.slice() : i(e) : [
              e
            ]
          }
          var i = n(1691);
          e.exports = a
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = e.match(u);
            return t &&
            t[1].toLowerCase()
          }
          function a(e, t) {
            var n = l;
            l ? void 0 : c(!1);
            var a = r(e),
            i = a &&
            s(a);
            if (i) {
              n.innerHTML = i[1] + e + i[2];
              for (var u = i[0]; u--; ) n = n.lastChild
            } else n.innerHTML = e;
            var p = n.getElementsByTagName('script');
            p.length &&
            (t ? void 0 : c(!1), o(p).forEach(t));
            for (var d = o(n.childNodes); n.lastChild; ) n.removeChild(n.lastChild);
            return d
          }
          var i = n(23),
          o = n(1682),
          s = n(526),
          c = n(5),
          l = i.canUseDOM ? document.createElement('div') : null,
          u = /^\s*<(\w+)/;
          e.exports = a
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return e === window ? {
              x: window.pageXOffset ||
              document.documentElement.scrollLeft,
              y: window.pageYOffset ||
              document.documentElement.scrollTop
            }
             : {
              x: e.scrollLeft,
              y: e.scrollTop
            }
          }
          e.exports = n
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return e.replace(r, '-$1').toLowerCase()
          }
          var r = /([A-Z])/g;
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return a(e).replace(i, '-ms-')
          }
          var a = n(1685),
          i = /^ms-/;
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e) {
            return !(
              !e ||
              !(
                'function' == typeof Node ? e instanceof Node : 'object' == typeof e &&
                'number' == typeof e.nodeType &&
                'string' == typeof e.nodeName
              )
            )
          }
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            return a(e) &&
            3 == e.nodeType
          }
          var a = n(1687);
          e.exports = r
        },
        function (e, t) {
          'use strict';
          function n(e, t, n) {
            if (!e) return null;
            var a = {};
            for (var i in e) r.call(e, i) &&
            (a[i] = t.call(n, e[i], i, e));
            return a
          }
          var r = Object.prototype.hasOwnProperty;
          e.exports = n
        },
        function (e, t) {
          'use strict';
          function n(e) {
            var t = {};
            return function (n) {
              return t.hasOwnProperty(n) ||
              (t[n] = e.call(this, n)),
              t[n]
            }
          }
          e.exports = n
        },
        function (e, t, n) {
          'use strict';
          function r(e) {
            var t = e.length;
            if (
              Array.isArray(e) ||
              'object' != typeof e &&
              'function' != typeof e ? a(!1) : void 0,
              'number' != typeof t ? a(!1) : void 0,
              0 === t ||
              t - 1 in e ? void 0 : a(!1),
              e.hasOwnProperty
            ) try {
              return Array.prototype.slice.call(e)
            } catch (n) {
            }
            for (var r = Array(t), i = 0; t > i; i++) r[i] = e[i];
            return r
          }
          var a = n(5);
          e.exports = r
        },
        function (e, t) {
          !function (e) {
            function t(t, n) {
              var r = e.toString.call(t).charAt(8);
              return 'R' === r ? t.test(n) : 'F' === r ? t(n) : t == n
            }
            var n = /[\-\[\]{}()+?.,\\\^$|#\s]/g,
            r = /([:*])(\w+)/g;
            e.routeMatcher = function (e, a) {
              var i = {},
              o = [],
              s = e;
              return 'string' == typeof e ? (
                s = s.replace(n, '\\$&'),
                s = s.replace(r, function (e, t, n) {
                  return o.push(n),
                  ':' === t ? '([^/]*)' : '(.*)'
                }),
                s = new RegExp('^' + s + '$'),
                i.parse = function (e) {
                  var n,
                  r,
                  i = 0,
                  c = {},
                  l = e.match(s);
                  if (!l) return null;
                  for (; i < o.length; ) {
                    if (n = o[i++], r = l[i], a && n in a && !t(a[n], r)) return null;
                    c[n] = r
                  }
                  return c
                },
                i.stringify = function (t) {
                  var n,
                  a,
                  i = e;
                  for (n in t) a = new RegExp('[:*]' + n + '\\b'),
                  i = i.replace(a, t[n]);
                  return i.replace(r, '')
                }
              ) : (
                i.parse = function (e) {
                  var t = e.match(s);
                  return t &&
                  {
                    captures: t.slice(1)
                  }
                },
                i.stringify = function () {
                  return ''
                }
              ),
              i
            }
          }('object' == typeof t && t || this)
        },
        ,
        function (e, t, n) {
          function r(e, t) {
            for (var n = 0; n < e.length; n++) {
              var r = e[n],
              a = f[r.id];
              if (a) {
                a.refs++;
                for (var i = 0; i < a.parts.length; i++) a.parts[i](r.parts[i]);
                for (; i < r.parts.length; i++) a.parts.push(l(r.parts[i], t))
              } else {
                for (var o = [], i = 0; i < r.parts.length; i++) o.push(l(r.parts[i], t));
                f[r.id] = {
                  id: r.id,
                  refs: 1,
                  parts: o
                }
              }
            }
          }
          function a(e) {
            for (var t = [], n = {}, r = 0; r < e.length; r++) {
              var a = e[r],
              i = a[0],
              o = a[1],
              s = a[2],
              c = a[3],
              l = {
                css: o,
                media: s,
                sourceMap: c
              };
              n[i] ? n[i].parts.push(l) : t.push(n[i] = {
                id: i,
                parts: [
                  l
                ]
              })
            }
            return t
          }
          function i(e, t) {
            var n = _(),
            r = E[E.length - 1];
            if ('top' === e.insertAt) r ? r.nextSibling ? n.insertBefore(t, r.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild),
            E.push(t);
             else {
              if ('bottom' !== e.insertAt) throw new Error(
                'Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.'
              );
              n.appendChild(t)
            }
          }
          function o(e) {
            e.parentNode.removeChild(e);
            var t = E.indexOf(e);
            t >= 0 &&
            E.splice(t, 1)
          }
          function s(e) {
            var t = document.createElement('style');
            return t.type = 'text/css',
            i(e, t),
            t
          }
          function c(e) {
            var t = document.createElement('link');
            return t.rel = 'stylesheet',
            i(e, t),
            t
          }
          function l(e, t) {
            var n,
            r,
            a;
            if (t.singleton) {
              var i = v++;
              n = g ||
              (g = s(t)),
              r = u.bind(null, n, i, !1),
              a = u.bind(null, n, i, !0)
            } else e.sourceMap &&
            'function' == typeof URL &&
            'function' == typeof URL.createObjectURL &&
            'function' == typeof URL.revokeObjectURL &&
            'function' == typeof Blob &&
            'function' == typeof btoa ? (
              n = c(t),
              r = d.bind(null, n),
              a = function () {
                o(n),
                n.href &&
                URL.revokeObjectURL(n.href)
              }
            ) : (n = s(t), r = p.bind(null, n), a = function () {
              o(n)
            });
            return r(e),
            function (t) {
              if (t) {
                if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                r(e = t)
              } else a()
            }
          }
          function u(e, t, n, r) {
            var a = n ? '' : r.css;
            if (e.styleSheet) e.styleSheet.cssText = I(t, a);
             else {
              var i = document.createTextNode(a),
              o = e.childNodes;
              o[t] &&
              e.removeChild(o[t]),
              o.length ? e.insertBefore(i, o[t]) : e.appendChild(i)
            }
          }
          function p(e, t) {
            var n = t.css,
            r = t.media;
            if (r && e.setAttribute('media', r), e.styleSheet) e.styleSheet.cssText = n;
             else {
              for (; e.firstChild; ) e.removeChild(e.firstChild);
              e.appendChild(document.createTextNode(n))
            }
          }
          function d(e, t) {
            var n = t.css,
            r = t.sourceMap;
            r &&
            (
              n += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(r)))) + ' */'
            );
            var a = new Blob([n], {
              type: 'text/css'
            }),
            i = e.href;
            e.href = URL.createObjectURL(a),
            i &&
            URL.revokeObjectURL(i)
          }
          var f = {},
          m = function (e) {
            var t;
            return function () {
              return 'undefined' == typeof t &&
              (t = e.apply(this, arguments)),
              t
            }
          },
          h = m(
            function () {
              return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())
            }
          ),
          _ = m(
            function () {
              return document.head ||
              document.getElementsByTagName('head') [0]
            }
          ),
          g = null,
          v = 0,
          E = [];
          e.exports = function (e, t) {
            t = t ||
            {
            },
            'undefined' == typeof t.singleton &&
            (t.singleton = h()),
            'undefined' == typeof t.insertAt &&
            (t.insertAt = 'bottom');
            var n = a(e);
            return r(n, t),
            function (e) {
              for (var i = [], o = 0; o < n.length; o++) {
                var s = n[o],
                c = f[s.id];
                c.refs--,
                i.push(c)
              }
              if (e) {
                var l = a(e);
                r(l, t)
              }
              for (var o = 0; o < i.length; o++) {
                var c = i[o];
                if (0 === c.refs) {
                  for (var u = 0; u < c.parts.length; u++) c.parts[u]();
                  delete f[c.id]
                }
              }
            }
          };
          var I = function () {
            var e = [];
            return function (t, n) {
              return e[t] = n,
              e.filter(Boolean).join('\n')
            }
          }()
        },
        function (e, t, n) {
          function r() {
          }
          function a(e) {
            var t = {}.toString.call(e);
            switch (t) {
              case '[object File]':
              case '[object Blob]':
              case '[object FormData]':
                return !0;
              default:
                return !1
            }
          }
          function i() {
            if (
              g.XMLHttpRequest &&
              ('file:' != g.location.protocol || !g.ActiveXObject)
            ) return new XMLHttpRequest;
            try {
              return new ActiveXObject('Microsoft.XMLHTTP')
            } catch (e) {
            }
            try {
              return new ActiveXObject('Msxml2.XMLHTTP.6.0')
            } catch (e) {
            }
            try {
              return new ActiveXObject('Msxml2.XMLHTTP.3.0')
            } catch (e) {
            }
            try {
              return new ActiveXObject('Msxml2.XMLHTTP')
            } catch (e) {
            }
            return !1
          }
          function o(e) {
            return e === Object(e)
          }
          function s(e) {
            if (!o(e)) return e;
            var t = [];
            for (var n in e) null != e[n] &&
            t.push(encodeURIComponent(n) + '=' + encodeURIComponent(e[n]));
            return t.join('&')
          }
          function c(e) {
            for (var t, n, r = {}, a = e.split('&'), i = 0, o = a.length; o > i; ++i) n = a[i],
            t = n.split('='),
            r[decodeURIComponent(t[0])] = decodeURIComponent(t[1]);
            return r
          }
          function l(e) {
            var t,
            n,
            r,
            a,
            i = e.split(/\r?\n/),
            o = {};
            i.pop();
            for (var s = 0, c = i.length; c > s; ++s) n = i[s],
            t = n.indexOf(':'),
            r = n.slice(0, t).toLowerCase(),
            a = v(n.slice(t + 1)),
            o[r] = a;
            return o
          }
          function u(e) {
            return e.split(/ *; */).shift()
          }
          function p(e) {
            return _(
              e.split(/ *; */),
              function (e, t) {
                var n = t.split(/ *= */),
                r = n.shift(),
                a = n.shift();
                return r &&
                a &&
                (e[r] = a),
                e
              },
              {
              }
            )
          }
          function d(e, t) {
            t = t ||
            {
            },
            this.req = e,
            this.xhr = this.req.xhr,
            this.text = 'HEAD' != this.req.method ? this.xhr.responseText : null,
            this.setStatusProperties(this.xhr.status),
            this.header = this.headers = l(this.xhr.getAllResponseHeaders()),
            this.header['content-type'] = this.xhr.getResponseHeader('content-type'),
            this.setHeaderProperties(this.header),
            this.body = 'HEAD' != this.req.method ? this.parseBody(this.text) : null
          }
          function f(e, t) {
            var n = this;
            h.call(this),
            this._query = this._query ||
            [],
            this.method = e,
            this.url = t,
            this.header = {},
            this._header = {},
            this.on(
              'end',
              function () {
                var e = null,
                t = null;
                try {
                  t = new d(n)
                } catch (r) {
                  e = new Error('Parser is unable to parse the response'),
                  e.parse = !0,
                  e.original = r
                }
                n.callback(e, t)
              }
            )
          }
          function m(e, t) {
            return 'function' == typeof t ? new f('GET', e).end(t) : 1 == arguments.length ? new f('GET', e) : new f(e, t)
          }
          var h = n(1696),
          _ = n(1697),
          g = 'undefined' == typeof window ? this : window,
          v = ''.trim ? function (e) {
            return e.trim()
          }
           : function (e) {
            return e.replace(/(^\s*|\s*$)/g, '')
          };
          m.serializeObject = s,
          m.parseString = c,
          m.types = {
            html: 'text/html',
            json: 'application/json',
            xml: 'application/xml',
            urlencoded: 'application/x-www-form-urlencoded',
            form: 'application/x-www-form-urlencoded',
            'form-data': 'application/x-www-form-urlencoded'
          },
          m.serialize = {
            'application/x-www-form-urlencoded': s,
            'application/json': JSON.stringify
          },
          m.parse = {
            'application/x-www-form-urlencoded': c,
            'application/json': JSON.parse
          },
          d.prototype.get = function (e) {
            return this.header[e.toLowerCase()]
          },
          d.prototype.setHeaderProperties = function (e) {
            var t = this.header['content-type'] ||
            '';
            this.type = u(t);
            var n = p(t);
            for (var r in n) this[r] = n[r]
          },
          d.prototype.parseBody = function (e) {
            var t = m.parse[this.type];
            return t &&
            e &&
            e.length ? t(e) : null
          },
          d.prototype.setStatusProperties = function (e) {
            var t = e / 100 | 0;
            this.status = e,
            this.statusType = t,
            this.info = 1 == t,
            this.ok = 2 == t,
            this.clientError = 4 == t,
            this.serverError = 5 == t,
            this.error = 4 == t ||
            5 == t ? this.toError() : !1,
            this.accepted = 202 == e,
            this.noContent = 204 == e ||
            1223 == e,
            this.badRequest = 400 == e,
            this.unauthorized = 401 == e,
            this.notAcceptable = 406 == e,
            this.notFound = 404 == e,
            this.forbidden = 403 == e
          },
          d.prototype.toError = function () {
            var e = this.req,
            t = e.method,
            n = e.url,
            r = 'cannot ' + t + ' ' + n + ' (' + this.status + ')',
            a = new Error(r);
            return a.status = this.status,
            a.method = t,
            a.url = n,
            a
          },
          m.Response = d,
          h(f.prototype),
          f.prototype.use = function (e) {
            return e(this),
            this
          },
          f.prototype.timeout = function (e) {
            return this._timeout = e,
            this
          },
          f.prototype.clearTimeout = function () {
            return this._timeout = 0,
            clearTimeout(this._timer),
            this
          },
          f.prototype.abort = function () {
            return this.aborted ? void 0 : (
              this.aborted = !0,
              this.xhr.abort(),
              this.clearTimeout(),
              this.emit('abort'),
              this
            )
          },
          f.prototype.set = function (e, t) {
            if (o(e)) {
              for (var n in e) this.set(n, e[n]);
              return this
            }
            return this._header[e.toLowerCase()] = t,
            this.header[e] = t,
            this
          },
          f.prototype.unset = function (e) {
            return delete this._header[e.toLowerCase()],
            delete this.header[e],
            this
          },
          f.prototype.getHeader = function (e) {
            return this._header[e.toLowerCase()]
          },
          f.prototype.type = function (e) {
            return this.set('Content-Type', m.types[e] || e),
            this
          },
          f.prototype.accept = function (e) {
            return this.set('Accept', m.types[e] || e),
            this
          },
          f.prototype.auth = function (e, t) {
            var n = btoa(e + ':' + t);
            return this.set('Authorization', 'Basic ' + n),
            this
          },
          f.prototype.query = function (e) {
            return 'string' != typeof e &&
            (e = s(e)),
            e &&
            this._query.push(e),
            this
          },
          f.prototype.field = function (e, t) {
            return this._formData ||
            (this._formData = new FormData),
            this._formData.append(e, t),
            this
          },
          f.prototype.attach = function (e, t, n) {
            return this._formData ||
            (this._formData = new FormData),
            this._formData.append(e, t, n),
            this
          },
          f.prototype.send = function (e) {
            var t = o(e),
            n = this.getHeader('Content-Type');
            if (t && o(this._data)) for (var r in e) this._data[r] = e[r];
             else 'string' == typeof e ? (
              n ||
              this.type('form'),
              n = this.getHeader('Content-Type'),
              'application/x-www-form-urlencoded' == n ? this._data = this._data ? this._data + '&' + e : e : this._data = (this._data || '') + e
            ) : this._data = e;
            return t ? (n || this.type('json'), this) : this
          },
          f.prototype.callback = function (e, t) {
            var n = this._callback;
            return this.clearTimeout(),
            2 == n.length ? n(e, t) : e ? this.emit('error', e) : void n(t)
          },
          f.prototype.crossDomainError = function () {
            var e = new Error('Origin is not allowed by Access-Control-Allow-Origin');
            e.crossDomain = !0,
            this.callback(e)
          },
          f.prototype.timeoutError = function () {
            var e = this._timeout,
            t = new Error('timeout of ' + e + 'ms exceeded');
            t.timeout = e,
            this.callback(t)
          },
          f.prototype.withCredentials = function () {
            return this._withCredentials = !0,
            this
          },
          f.prototype.end = function (e) {
            var t = this,
            n = this.xhr = i(),
            o = this._query.join('&'),
            s = this._timeout,
            c = this._formData ||
            this._data;
            if (
              this._callback = e ||
              r,
              n.onreadystatechange = function () {
                return 4 == n.readyState ? 0 == n.status ? t.aborted ? t.timeoutError() : t.crossDomainError() : void t.emit('end') : void 0
              },
              n.upload &&
              (
                n.upload.onprogress = function (e) {
                  e.percent = e.loaded / e.total * 100,
                  t.emit('progress', e)
                }
              ),
              s &&
              !this._timer &&
              (this._timer = setTimeout(function () {
                t.abort()
              }, s)),
              o &&
              (
                o = m.serializeObject(o),
                this.url += ~this.url.indexOf('?') ? '&' + o : '?' + o
              ),
              n.open(this.method, this.url, !0),
              this._withCredentials &&
              (n.withCredentials = !0),
              'GET' != this.method &&
              'HEAD' != this.method &&
              'string' != typeof c &&
              !a(c)
            ) {
              var l = m.serialize[this.getHeader('Content-Type')];
              l &&
              (c = l(c))
            }
            for (var u in this.header) null != this.header[u] &&
            n.setRequestHeader(u, this.header[u]);
            return this.emit('request', this),
            n.send(c),
            this
          },
          m.Request = f,
          m.get = function (e, t, n) {
            var r = m('GET', e);
            return 'function' == typeof t &&
            (n = t, t = null),
            t &&
            r.query(t),
            n &&
            r.end(n),
            r
          },
          m.head = function (e, t, n) {
            var r = m('HEAD', e);
            return 'function' == typeof t &&
            (n = t, t = null),
            t &&
            r.send(t),
            n &&
            r.end(n),
            r
          },
          m.del = function (e, t) {
            var n = m('DELETE', e);
            return t &&
            n.end(t),
            n
          },
          m.patch = function (e, t, n) {
            var r = m('PATCH', e);
            return 'function' == typeof t &&
            (n = t, t = null),
            t &&
            r.send(t),
            n &&
            r.end(n),
            r
          },
          m.post = function (e, t, n) {
            var r = m('POST', e);
            return 'function' == typeof t &&
            (n = t, t = null),
            t &&
            r.send(t),
            n &&
            r.end(n),
            r
          },
          m.put = function (e, t, n) {
            var r = m('PUT', e);
            return 'function' == typeof t &&
            (n = t, t = null),
            t &&
            r.send(t),
            n &&
            r.end(n),
            r
          },
          e.exports = m
        },
        function (e, t) {
          function n(e) {
            return e ? r(e) : void 0
          }
          function r(e) {
            for (var t in n.prototype) e[t] = n.prototype[t];
            return e
          }
          e.exports = n,
          n.prototype.on = n.prototype.addEventListener = function (e, t) {
            return this._callbacks = this._callbacks ||
            {
            },
            (this._callbacks[e] = this._callbacks[e] || []).push(t),
            this
          },
          n.prototype.once = function (e, t) {
            function n() {
              r.off(e, n),
              t.apply(this, arguments)
            }
            var r = this;
            return this._callbacks = this._callbacks ||
            {
            },
            n.fn = t,
            this.on(e, n),
            this
          },
          n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function (e, t) {
            if (this._callbacks = this._callbacks || {
            }, 0 == arguments.length) return this._callbacks = {},
            this;
            var n = this._callbacks[e];
            if (!n) return this;
            if (1 == arguments.length) return delete this._callbacks[e],
            this;
            for (var r, a = 0; a < n.length; a++) if (r = n[a], r === t || r.fn === t) {
              n.splice(a, 1);
              break
            }
            return this
          },
          n.prototype.emit = function (e) {
            this._callbacks = this._callbacks ||
            {
            };
            var t = [].slice.call(arguments, 1),
            n = this._callbacks[e];
            if (n) {
              n = n.slice(0);
              for (var r = 0, a = n.length; a > r; ++r) n[r].apply(this, t)
            }
            return this
          },
          n.prototype.listeners = function (e) {
            return this._callbacks = this._callbacks ||
            {
            },
            this._callbacks[e] ||
            []
          },
          n.prototype.hasListeners = function (e) {
            return !!this.listeners(e).length
          }
        },
        function (e, t) {
          e.exports = function (e, t, n) {
            for (var r = 0, a = e.length, i = 3 == arguments.length ? n : e[r++]; a > r; ) i = t.call(null, i, e[r], ++r, e);
            return i
          }
        },
        function (e, t, n) {
          var r = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
          !function (e) {
            'use strict';
            function t(e) {
              var t = e.charCodeAt(0);
              return t === o ||
              t === p ? 62 : t === s ||
              t === d ? 63 : c > t ? - 1 : c + 10 > t ? t - c + 26 + 26 : u + 26 > t ? t - u : l + 26 > t ? t - l + 26 : void 0
            }
            function n(e) {
              function n(e) {
                l[p++] = e
              }
              var r,
              a,
              o,
              s,
              c,
              l;
              if (e.length % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');
              var u = e.length;
              c = '=' === e.charAt(u - 2) ? 2 : '=' === e.charAt(u - 1) ? 1 : 0,
              l = new i(3 * e.length / 4 - c),
              o = c > 0 ? e.length - 4 : e.length;
              var p = 0;
              for (r = 0, a = 0; o > r; r += 4, a += 3) s = t(e.charAt(r)) << 18 | t(e.charAt(r + 1)) << 12 | t(e.charAt(r + 2)) << 6 | t(e.charAt(r + 3)),
              n((16711680 & s) >> 16),
              n((65280 & s) >> 8),
              n(255 & s);
              return 2 === c ? (s = t(e.charAt(r)) << 2 | t(e.charAt(r + 1)) >> 4, n(255 & s)) : 1 === c &&
              (
                s = t(e.charAt(r)) << 10 | t(e.charAt(r + 1)) << 4 | t(e.charAt(r + 2)) >> 2,
                n(s >> 8 & 255),
                n(255 & s)
              ),
              l
            }
            function a(e) {
              function t(e) {
                return r.charAt(e)
              }
              function n(e) {
                return t(e >> 18 & 63) + t(e >> 12 & 63) + t(e >> 6 & 63) + t(63 & e)
              }
              var a,
              i,
              o,
              s = e.length % 3,
              c = '';
              for (a = 0, o = e.length - s; o > a; a += 3) i = (e[a] << 16) + (e[a + 1] << 8) + e[a + 2],
              c += n(i);
              switch (s) {
                case 1:
                  i = e[e.length - 1],
                  c += t(i >> 2),
                  c += t(i << 4 & 63),
                  c += '==';
                  break;
                case 2:
                  i = (e[e.length - 2] << 8) + e[e.length - 1],
                  c += t(i >> 10),
                  c += t(i >> 4 & 63),
                  c += t(i << 2 & 63),
                  c += '='
              }
              return c
            }
            var i = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
            o = '+'.charCodeAt(0),
            s = '/'.charCodeAt(0),
            c = '0'.charCodeAt(0),
            l = 'a'.charCodeAt(0),
            u = 'A'.charCodeAt(0),
            p = '-'.charCodeAt(0),
            d = '_'.charCodeAt(0);
            e.toByteArray = n,
            e.fromByteArray = a
          }(t)
        },
        function (e, t) {
          t.read = function (e, t, n, r, a) {
            var i,
            o,
            s = 8 * a - r - 1,
            c = (1 << s) - 1,
            l = c >> 1,
            u = - 7,
            p = n ? a - 1 : 0,
            d = n ? - 1 : 1,
            f = e[t + p];
            for (p += d, i = f & (1 << - u) - 1, f >>= - u, u += s; u > 0; i = 256 * i + e[t + p], p += d, u -= 8);
            for (o = i & (1 << - u) - 1, i >>= - u, u += r; u > 0; o = 256 * o + e[t + p], p += d, u -= 8);
            if (0 === i) i = 1 - l;
             else {
              if (i === c) return o ? NaN : (f ? - 1 : 1) * (1 / 0);
              o += Math.pow(2, r),
              i -= l
            }
            return (f ? - 1 : 1) * o * Math.pow(2, i - r)
          },
          t.write = function (e, t, n, r, a, i) {
            var o,
            s,
            c,
            l = 8 * i - a - 1,
            u = (1 << l) - 1,
            p = u >> 1,
            d = 23 === a ? Math.pow(2, - 24) - Math.pow(2, - 77) : 0,
            f = r ? 0 : i - 1,
            m = r ? 1 : - 1,
            h = 0 > t ||
            0 === t &&
            0 > 1 / t ? 1 : 0;
            for (
              t = Math.abs(t),
              isNaN(t) ||
              t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, o = u) : (
                o = Math.floor(Math.log(t) / Math.LN2),
                t * (c = Math.pow(2, - o)) < 1 &&
                (o--, c *= 2),
                t += o + p >= 1 ? d / c : d * Math.pow(2, 1 - p),
                t * c >= 2 &&
                (o++, c /= 2),
                o + p >= u ? (s = 0, o = u) : o + p >= 1 ? (s = (t * c - 1) * Math.pow(2, a), o += p) : (s = t * Math.pow(2, p - 1) * Math.pow(2, a), o = 0)
              );
              a >= 8;
              e[n + f] = 255 & s,
              f += m,
              s /= 256,
              a -= 8
            );
            for (o = o << a | s, l += a; l > 0; e[n + f] = 255 & o, f += m, o /= 256, l -= 8);
            e[n + f - m] |= 128 * h
          }
        },
        function (e, t) {
          var n = {}.toString;
          e.exports = Array.isArray ||
          function (e) {
            return '[object Array]' == n.call(e)
          }
        },
        function (e, t, n) {
          (
            function (t) {
              function r(e, n) {
                if (!(this instanceof r)) return new r(e, n);
                this._opad = c,
                this._alg = e;
                var o = 'sha512' === e ? 128 : 64;
                n = this._key = t.isBuffer(n) ? n : new t(n),
                n.length > o ? n = a(e).update(n).digest() : n.length < o &&
                (n = t.concat([n,
                i], o));
                for (var s = this._ipad = new t(o), c = this._opad = new t(o), l = 0; o > l; l++) s[l] = 54 ^ n[l],
                c[l] = 92 ^ n[l];
                this._hash = a(e).update(s)
              }
              var a = n(528),
              i = new t(128);
              i.fill(0),
              e.exports = r,
              r.prototype.update = function (e, t) {
                return this._hash.update(e, t),
                this
              },
              r.prototype.digest = function (e) {
                var t = this._hash.digest();
                return a(this._alg).update(this._opad).update(t).digest(e)
              }
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t, n) {
          (
            function (t) {
              function n(e, n) {
                if (e.length % i !== 0) {
                  var r = e.length + (i - e.length % i);
                  e = t.concat([e,
                  o], r)
                }
                for (var a = [], s = n ? e.readInt32BE : e.readInt32LE, c = 0; c < e.length; c += i) a.push(s.call(e, c));
                return a
              }
              function r(e, n, r) {
                for (
                  var a = new t(n),
                  i = r ? a.writeInt32BE : a.writeInt32LE,
                  o = 0;
                  o < e.length;
                  o++
                ) i.call(a, e[o], 4 * o, !0);
                return a
              }
              function a(e, a, i, o) {
                t.isBuffer(e) ||
                (e = new t(e));
                var c = a(n(e, o), e.length * s);
                return r(c, i, o)
              }
              var i = 4,
              o = new t(i);
              o.fill(0);
              var s = 8;
              e.exports = {
                hash: a
              }
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t, n) {
          (
            function (e) {
              function r() {
                var e = [].slice.call(arguments).join(' ');
                throw new Error(
                  [e,
                  'we accept pull requests',
                  'http://github.com/dominictarr/crypto-browserify'].join('\n')
                )
              }
              function a(e, t) {
                for (var n in e) t(e[n], n)
              }
              var i = n(1713);
              t.createHash = n(528),
              t.createHmac = n(1701),
              t.randomBytes = function (t, n) {
                if (!n || !n.call) return new e(i(t));
                try {
                  n.call(this, void 0, new e(i(t)))
                } catch (r) {
                  n(r)
                }
              },
              t.getHashes = function () {
                return ['sha1',
                'sha256',
                'sha512',
                'md5',
                'rmd160']
              };
              var o = n(1712) (t);
              t.pbkdf2 = o.pbkdf2,
              t.pbkdf2Sync = o.pbkdf2Sync,
              a(
                ['createCredentials',
                'createCipher',
                'createCipheriv',
                'createDecipher',
                'createDecipheriv',
                'createSign',
                'createVerify',
                'createDiffieHellman'],
                function (e) {
                  t[e] = function () {
                    r('sorry,', e, 'is not implemented yet')
                  }
                }
              )
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t, n) {
          function r(e, t) {
            e[t >> 5] |= 128 << t % 32,
            e[(t + 64 >>> 9 << 4) + 14] = t;
            for (
              var n = 1732584193,
              r = - 271733879,
              a = - 1732584194,
              u = 271733878,
              p = 0;
              p < e.length;
              p += 16
            ) {
              var d = n,
              f = r,
              m = a,
              h = u;
              n = i(n, r, a, u, e[p + 0], 7, - 680876936),
              u = i(u, n, r, a, e[p + 1], 12, - 389564586),
              a = i(a, u, n, r, e[p + 2], 17, 606105819),
              r = i(r, a, u, n, e[p + 3], 22, - 1044525330),
              n = i(n, r, a, u, e[p + 4], 7, - 176418897),
              u = i(u, n, r, a, e[p + 5], 12, 1200080426),
              a = i(a, u, n, r, e[p + 6], 17, - 1473231341),
              r = i(r, a, u, n, e[p + 7], 22, - 45705983),
              n = i(n, r, a, u, e[p + 8], 7, 1770035416),
              u = i(u, n, r, a, e[p + 9], 12, - 1958414417),
              a = i(a, u, n, r, e[p + 10], 17, - 42063),
              r = i(r, a, u, n, e[p + 11], 22, - 1990404162),
              n = i(n, r, a, u, e[p + 12], 7, 1804603682),
              u = i(u, n, r, a, e[p + 13], 12, - 40341101),
              a = i(a, u, n, r, e[p + 14], 17, - 1502002290),
              r = i(r, a, u, n, e[p + 15], 22, 1236535329),
              n = o(n, r, a, u, e[p + 1], 5, - 165796510),
              u = o(u, n, r, a, e[p + 6], 9, - 1069501632),
              a = o(a, u, n, r, e[p + 11], 14, 643717713),
              r = o(r, a, u, n, e[p + 0], 20, - 373897302),
              n = o(n, r, a, u, e[p + 5], 5, - 701558691),
              u = o(u, n, r, a, e[p + 10], 9, 38016083),
              a = o(a, u, n, r, e[p + 15], 14, - 660478335),
              r = o(r, a, u, n, e[p + 4], 20, - 405537848),
              n = o(n, r, a, u, e[p + 9], 5, 568446438),
              u = o(u, n, r, a, e[p + 14], 9, - 1019803690),
              a = o(a, u, n, r, e[p + 3], 14, - 187363961),
              r = o(r, a, u, n, e[p + 8], 20, 1163531501),
              n = o(n, r, a, u, e[p + 13], 5, - 1444681467),
              u = o(u, n, r, a, e[p + 2], 9, - 51403784),
              a = o(a, u, n, r, e[p + 7], 14, 1735328473),
              r = o(r, a, u, n, e[p + 12], 20, - 1926607734),
              n = s(n, r, a, u, e[p + 5], 4, - 378558),
              u = s(u, n, r, a, e[p + 8], 11, - 2022574463),
              a = s(a, u, n, r, e[p + 11], 16, 1839030562),
              r = s(r, a, u, n, e[p + 14], 23, - 35309556),
              n = s(n, r, a, u, e[p + 1], 4, - 1530992060),
              u = s(u, n, r, a, e[p + 4], 11, 1272893353),
              a = s(a, u, n, r, e[p + 7], 16, - 155497632),
              r = s(r, a, u, n, e[p + 10], 23, - 1094730640),
              n = s(n, r, a, u, e[p + 13], 4, 681279174),
              u = s(u, n, r, a, e[p + 0], 11, - 358537222),
              a = s(a, u, n, r, e[p + 3], 16, - 722521979),
              r = s(r, a, u, n, e[p + 6], 23, 76029189),
              n = s(n, r, a, u, e[p + 9], 4, - 640364487),
              u = s(u, n, r, a, e[p + 12], 11, - 421815835),
              a = s(a, u, n, r, e[p + 15], 16, 530742520),
              r = s(r, a, u, n, e[p + 2], 23, - 995338651),
              n = c(n, r, a, u, e[p + 0], 6, - 198630844),
              u = c(u, n, r, a, e[p + 7], 10, 1126891415),
              a = c(a, u, n, r, e[p + 14], 15, - 1416354905),
              r = c(r, a, u, n, e[p + 5], 21, - 57434055),
              n = c(n, r, a, u, e[p + 12], 6, 1700485571),
              u = c(u, n, r, a, e[p + 3], 10, - 1894986606),
              a = c(a, u, n, r, e[p + 10], 15, - 1051523),
              r = c(r, a, u, n, e[p + 1], 21, - 2054922799),
              n = c(n, r, a, u, e[p + 8], 6, 1873313359),
              u = c(u, n, r, a, e[p + 15], 10, - 30611744),
              a = c(a, u, n, r, e[p + 6], 15, - 1560198380),
              r = c(r, a, u, n, e[p + 13], 21, 1309151649),
              n = c(n, r, a, u, e[p + 4], 6, - 145523070),
              u = c(u, n, r, a, e[p + 11], 10, - 1120210379),
              a = c(a, u, n, r, e[p + 2], 15, 718787259),
              r = c(r, a, u, n, e[p + 9], 21, - 343485551),
              n = l(n, d),
              r = l(r, f),
              a = l(a, m),
              u = l(u, h)
            }
            return Array(n, r, a, u)
          }
          function a(e, t, n, r, a, i) {
            return l(u(l(l(t, e), l(r, i)), a), n)
          }
          function i(e, t, n, r, i, o, s) {
            return a(t & n | ~t & r, e, t, i, o, s)
          }
          function o(e, t, n, r, i, o, s) {
            return a(t & r | n & ~r, e, t, i, o, s)
          }
          function s(e, t, n, r, i, o, s) {
            return a(t ^ n ^ r, e, t, i, o, s)
          }
          function c(e, t, n, r, i, o, s) {
            return a(n ^ (t | ~r), e, t, i, o, s)
          }
          function l(e, t) {
            var n = (65535 & e) + (65535 & t),
            r = (e >> 16) + (t >> 16) + (n >> 16);
            return r << 16 | 65535 & n
          }
          function u(e, t) {
            return e << t | e >>> 32 - t
          }
          var p = n(1702);
          e.exports = function (e) {
            return p.hash(e, r, 16)
          }
        },
        function (e, t, n) {
          (
            function (t) {
              e.exports = function (e) {
                function n(e, t, n, a, i, o) {
                  if ('function' == typeof i && (o = i, i = void 0), 'function' != typeof o) throw new Error('No callback provided to pbkdf2');
                  setTimeout(
                    function () {
                      var s;
                      try {
                        s = r(e, t, n, a, i)
                      } catch (c) {
                        return o(c)
                      }
                      o(void 0, s)
                    }
                  )
                }
                function r(n, r, a, i, o) {
                  if ('number' != typeof a) throw new TypeError('Iterations not a number');
                  if (0 > a) throw new TypeError('Bad iterations');
                  if ('number' != typeof i) throw new TypeError('Key length not a number');
                  if (0 > i) throw new TypeError('Bad key length');
                  o = o ||
                  'sha1',
                  t.isBuffer(n) ||
                  (n = new t(n)),
                  t.isBuffer(r) ||
                  (r = new t(r));
                  var s,
                  c,
                  l,
                  u = 1,
                  p = new t(i),
                  d = new t(r.length + 4);
                  r.copy(d, 0, 0, r.length);
                  for (var f = 1; u >= f; f++) {
                    d.writeUInt32BE(f, r.length);
                    var m = e.createHmac(o, n).update(d).digest();
                    if (
                      !s &&
                      (
                        s = m.length,
                        l = new t(s),
                        u = Math.ceil(i / s),
                        c = i - (u - 1) * s,
                        i > (Math.pow(2, 32) - 1) * s
                      )
                    ) throw new TypeError('keylen exceeds maximum length');
                    m.copy(l, 0, 0, s);
                    for (var h = 1; a > h; h++) {
                      m = e.createHmac(o, n).update(m).digest();
                      for (var _ = 0; s > _; _++) l[_] ^= m[_]
                    }
                    var g = (f - 1) * s,
                    v = f == u ? c : s;
                    l.copy(p, g, 0, v)
                  }
                  return p
                }
                return {
                  pbkdf2: n,
                  pbkdf2Sync: r
                }
              }
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t, n) {
          (
            function (t) {
              function n(e, t, n) {
                return e ^ t ^ n
              }
              function r(e, t, n) {
                return e & t | ~e & n
              }
              function a(e, t, n) {
                return (e | ~t) ^ n
              }
              function i(e, t, n) {
                return e & n | t & ~n
              }
              function o(e, t, n) {
                return e ^ (t | ~n)
              }
              function s(e, t) {
                return e << t | e >>> 32 - t
              }
              function c(e) {
                var n = [
                  1732584193,
                  4023233417,
                  2562383102,
                  271733878,
                  3285377520
                ];
                'string' == typeof e &&
                (e = new t(e, 'utf8'));
                var r = h(e),
                a = 8 * e.length,
                i = 8 * e.length;
                r[a >>> 5] |= 128 << 24 - a % 32,
                r[(a + 64 >>> 9 << 4) + 14] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8);
                for (var o = 0; o < r.length; o += 16) g(n, r, o);
                for (var o = 0; 5 > o; o++) {
                  var s = n[o];
                  n[o] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8)
                }
                var c = _(n);
                return new t(c)
              }
              e.exports = c; /** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.
	
	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
	
	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
	
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
              var l = [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                7,
                4,
                13,
                1,
                10,
                6,
                15,
                3,
                12,
                0,
                9,
                5,
                2,
                14,
                11,
                8,
                3,
                10,
                14,
                4,
                9,
                15,
                8,
                1,
                2,
                7,
                0,
                6,
                13,
                11,
                5,
                12,
                1,
                9,
                11,
                10,
                0,
                8,
                12,
                4,
                13,
                3,
                7,
                15,
                14,
                5,
                6,
                2,
                4,
                0,
                5,
                9,
                7,
                12,
                2,
                10,
                14,
                1,
                3,
                8,
                11,
                6,
                15,
                13
              ],
              u = [
                5,
                14,
                7,
                0,
                9,
                2,
                11,
                4,
                13,
                6,
                15,
                8,
                1,
                10,
                3,
                12,
                6,
                11,
                3,
                7,
                0,
                13,
                5,
                10,
                14,
                15,
                8,
                12,
                4,
                9,
                1,
                2,
                15,
                5,
                1,
                3,
                7,
                14,
                6,
                9,
                11,
                8,
                12,
                2,
                10,
                0,
                4,
                13,
                8,
                6,
                4,
                1,
                3,
                11,
                15,
                0,
                5,
                12,
                2,
                13,
                9,
                7,
                10,
                14,
                12,
                15,
                10,
                4,
                1,
                5,
                8,
                7,
                6,
                2,
                13,
                14,
                0,
                3,
                9,
                11
              ],
              p = [
                11,
                14,
                15,
                12,
                5,
                8,
                7,
                9,
                11,
                13,
                14,
                15,
                6,
                7,
                9,
                8,
                7,
                6,
                8,
                13,
                11,
                9,
                7,
                15,
                7,
                12,
                15,
                9,
                11,
                7,
                13,
                12,
                11,
                13,
                6,
                7,
                14,
                9,
                13,
                15,
                14,
                8,
                13,
                6,
                5,
                12,
                7,
                5,
                11,
                12,
                14,
                15,
                14,
                15,
                9,
                8,
                9,
                14,
                5,
                6,
                8,
                6,
                5,
                12,
                9,
                15,
                5,
                11,
                6,
                8,
                13,
                12,
                5,
                12,
                13,
                14,
                11,
                8,
                5,
                6
              ],
              d = [
                8,
                9,
                9,
                11,
                13,
                15,
                15,
                5,
                7,
                7,
                8,
                11,
                14,
                14,
                12,
                6,
                9,
                13,
                15,
                7,
                12,
                8,
                9,
                11,
                7,
                7,
                12,
                7,
                6,
                15,
                13,
                11,
                9,
                7,
                15,
                11,
                8,
                6,
                6,
                14,
                12,
                13,
                5,
                14,
                13,
                13,
                7,
                5,
                15,
                5,
                8,
                11,
                14,
                14,
                6,
                14,
                6,
                9,
                12,
                9,
                12,
                5,
                15,
                8,
                8,
                5,
                12,
                9,
                12,
                5,
                14,
                6,
                8,
                13,
                6,
                5,
                15,
                13,
                11,
                11
              ],
              f = [
                0,
                1518500249,
                1859775393,
                2400959708,
                2840853838
              ],
              m = [
                1352829926,
                1548603684,
                1836072691,
                2053994217,
                0
              ],
              h = function (e) {
                for (var t = [], n = 0, r = 0; n < e.length; n++, r += 8) t[r >>> 5] |= e[n] << 24 - r % 32;
                return t
              },
              _ = function (e) {
                for (var t = [], n = 0; n < 32 * e.length; n += 8) t.push(e[n >>> 5] >>> 24 - n % 32 & 255);
                return t
              },
              g = function (e, t, c) {
                for (var h = 0; 16 > h; h++) {
                  var _ = c + h,
                  g = t[_];
                  t[_] = 16711935 & (g << 8 | g >>> 24) | 4278255360 & (g << 24 | g >>> 8)
                }
                var v,
                E,
                I,
                b,
                y,
                T,
                S,
                C,
                D,
                A;
                T = v = e[0],
                S = E = e[1],
                C = I = e[2],
                D = b = e[3],
                A = y = e[4];
                for (var O, h = 0; 80 > h; h += 1) O = v + t[c + l[h]] | 0,
                O += 16 > h ? n(E, I, b) + f[0] : 32 > h ? r(E, I, b) + f[1] : 48 > h ? a(E, I, b) + f[2] : 64 > h ? i(E, I, b) + f[3] : o(E, I, b) + f[4],
                O = 0 | O,
                O = s(O, p[h]),
                O = O + y | 0,
                v = y,
                y = b,
                b = s(I, 10),
                I = E,
                E = O,
                O = T + t[c + u[h]] | 0,
                O += 16 > h ? o(S, C, D) + m[0] : 32 > h ? i(S, C, D) + m[1] : 48 > h ? a(S, C, D) + m[2] : 64 > h ? r(S, C, D) + m[3] : n(S, C, D) + m[4],
                O = 0 | O,
                O = s(O, d[h]),
                O = O + A | 0,
                T = A,
                A = D,
                D = s(C, 10),
                C = S,
                S = O;
                O = e[1] + I + D | 0,
                e[1] = e[2] + b + A | 0,
                e[2] = e[3] + y + T | 0,
                e[3] = e[4] + v + S | 0,
                e[4] = e[0] + E + C | 0,
                e[0] = O
              }
            }
          ).call(t, n(43).Buffer)
        },
        function (e, t) {
          e.exports = function (e) {
            function t(t, n) {
              this._block = new e(t),
              this._finalSize = n,
              this._blockSize = t,
              this._len = 0,
              this._s = 0
            }
            return t.prototype.init = function () {
              this._s = 0,
              this._len = 0
            },
            t.prototype.update = function (t, n) {
              'string' == typeof t &&
              (n = n || 'utf8', t = new e(t, n));
              for (
                var r = this._len += t.length,
                a = this._s = this._s ||
                0,
                i = 0,
                o = this._block;
                r > a;
              ) {
                for (
                  var s = Math.min(t.length, i + this._blockSize - a % this._blockSize),
                  c = s - i,
                  l = 0;
                  c > l;
                  l++
                ) o[a % this._blockSize + l] = t[l + i];
                a += c,
                i += c,
                a % this._blockSize === 0 &&
                this._update(o)
              }
              return this._s = a,
              this
            },
            t.prototype.digest = function (e) {
              var t = 8 * this._len;
              this._block[this._len % this._blockSize] = 128,
              this._block.fill(0, this._len % this._blockSize + 1),
              t % (8 * this._blockSize) >= 8 * this._finalSize &&
              (this._update(this._block), this._block.fill(0)),
              this._block.writeInt32BE(t, this._blockSize - 4);
              var n = this._update(this._block) ||
              this._hash();
              return e ? n.toString(e) : n
            },
            t.prototype._update = function () {
              throw new Error('_update must be implemented by subclass')
            },
            t
          }
        },
        function (e, t, n) {
          var t = e.exports = function (e) {
            var n = t[e];
            if (!n) throw new Error(e + ' is not supported (we accept pull requests)');
            return new n
          },
          r = n(43).Buffer,
          a = n(1707) (r);
          t.sha1 = n(1709) (r, a),
          t.sha256 = n(1710) (r, a),
          t.sha512 = n(1711) (r, a)
        },
        function (e, t, n) {
          var r = n(307).inherits;
          e.exports = function (e, t) {
            function n() {
              return m.length ? m.pop().init() : this instanceof n ? (this._w = f, t.call(this, 64, 56), this._h = null, void this.init()) : new n
            }
            function a(e, t, n, r) {
              return 20 > e ? t & n | ~t & r : 40 > e ? t ^ n ^ r : 60 > e ? t & n | t & r | n & r : t ^ n ^ r
            }
            function i(e) {
              return 20 > e ? 1518500249 : 40 > e ? 1859775393 : 60 > e ? - 1894007588 : - 899497514
            }
            function o(e, t) {
              return e + t | 0
            }
            function s(e, t) {
              return e << t | e >>> 32 - t
            }
            var c = 0,
            l = 4,
            u = 8,
            p = 12,
            d = 16,
            f = new ('undefined' == typeof Int32Array ? Array : Int32Array) (80),
            m = [];
            return r(n, t),
            n.prototype.init = function () {
              return this._a = 1732584193,
              this._b = 4023233417,
              this._c = 2562383102,
              this._d = 271733878,
              this._e = 3285377520,
              t.prototype.init.call(this),
              this
            },
            n.prototype._POOL = m,
            n.prototype._update = function (e) {
              var t,
              n,
              r,
              c,
              l,
              u,
              p,
              d,
              f,
              m;
              t = u = this._a,
              n = p = this._b,
              r = d = this._c,
              c = f = this._d,
              l = m = this._e;
              for (var h = this._w, _ = 0; 80 > _; _++) {
                var g = h[_] = 16 > _ ? e.readInt32BE(4 * _) : s(h[_ - 3] ^ h[_ - 8] ^ h[_ - 14] ^ h[_ - 16], 1),
                v = o(o(s(t, 5), a(_, n, r, c)), o(o(l, g), i(_)));
                l = c,
                c = r,
                r = s(n, 30),
                n = t,
                t = v
              }
              this._a = o(t, u),
              this._b = o(n, p),
              this._c = o(r, d),
              this._d = o(c, f),
              this._e = o(l, m)
            },
            n.prototype._hash = function () {
              m.length < 100 &&
              m.push(this);
              var t = new e(20);
              return t.writeInt32BE(0 | this._a, c),
              t.writeInt32BE(0 | this._b, l),
              t.writeInt32BE(0 | this._c, u),
              t.writeInt32BE(0 | this._d, p),
              t.writeInt32BE(0 | this._e, d),
              t
            },
            n
          }
        },
        function (e, t, n) {
          var r = n(307).inherits;
          e.exports = function (e, t) {
            function n() {
              this.init(),
              this._w = f,
              t.call(this, 64, 56)
            }
            function a(e, t) {
              return e >>> t | e << 32 - t
            }
            function i(e, t) {
              return e >>> t
            }
            function o(e, t, n) {
              return e & t ^ ~e & n
            }
            function s(e, t, n) {
              return e & t ^ e & n ^ t & n
            }
            function c(e) {
              return a(e, 2) ^ a(e, 13) ^ a(e, 22)
            }
            function l(e) {
              return a(e, 6) ^ a(e, 11) ^ a(e, 25)
            }
            function u(e) {
              return a(e, 7) ^ a(e, 18) ^ i(e, 3)
            }
            function p(e) {
              return a(e, 17) ^ a(e, 19) ^ i(e, 10)
            }
            var d = [
              1116352408,
              1899447441,
              3049323471,
              3921009573,
              961987163,
              1508970993,
              2453635748,
              2870763221,
              3624381080,
              310598401,
              607225278,
              1426881987,
              1925078388,
              2162078206,
              2614888103,
              3248222580,
              3835390401,
              4022224774,
              264347078,
              604807628,
              770255983,
              1249150122,
              1555081692,
              1996064986,
              2554220882,
              2821834349,
              2952996808,
              3210313671,
              3336571891,
              3584528711,
              113926993,
              338241895,
              666307205,
              773529912,
              1294757372,
              1396182291,
              1695183700,
              1986661051,
              2177026350,
              2456956037,
              2730485921,
              2820302411,
              3259730800,
              3345764771,
              3516065817,
              3600352804,
              4094571909,
              275423344,
              430227734,
              506948616,
              659060556,
              883997877,
              958139571,
              1322822218,
              1537002063,
              1747873779,
              1955562222,
              2024104815,
              2227730452,
              2361852424,
              2428436474,
              2756734187,
              3204031479,
              3329325298
            ],
            f = new Array(64);
            return r(n, t),
            n.prototype.init = function () {
              return this._a = 1779033703,
              this._b = - 1150833019,
              this._c = 1013904242,
              this._d = - 1521486534,
              this._e = 1359893119,
              this._f = - 1694144372,
              this._g = 528734635,
              this._h = 1541459225,
              this._len = this._s = 0,
              this
            },
            n.prototype._update = function (e) {
              var t,
              n,
              r,
              a,
              i,
              f,
              m,
              h,
              _,
              g,
              v = this._w;
              t = 0 | this._a,
              n = 0 | this._b,
              r = 0 | this._c,
              a = 0 | this._d,
              i = 0 | this._e,
              f = 0 | this._f,
              m = 0 | this._g,
              h = 0 | this._h;
              for (var E = 0; 64 > E; E++) {
                var I = v[E] = 16 > E ? e.readInt32BE(4 * E) : p(v[E - 2]) + v[E - 7] + u(v[E - 15]) + v[E - 16];
                _ = h + l(i) + o(i, f, m) + d[E] + I,
                g = c(t) + s(t, n, r),
                h = m,
                m = f,
                f = i,
                i = a + _,
                a = r,
                r = n,
                n = t,
                t = _ + g
              }
              this._a = t + this._a | 0,
              this._b = n + this._b | 0,
              this._c = r + this._c | 0,
              this._d = a + this._d | 0,
              this._e = i + this._e | 0,
              this._f = f + this._f | 0,
              this._g = m + this._g | 0,
              this._h = h + this._h | 0
            },
            n.prototype._hash = function () {
              var t = new e(32);
              return t.writeInt32BE(this._a, 0),
              t.writeInt32BE(this._b, 4),
              t.writeInt32BE(this._c, 8),
              t.writeInt32BE(this._d, 12),
              t.writeInt32BE(this._e, 16),
              t.writeInt32BE(this._f, 20),
              t.writeInt32BE(this._g, 24),
              t.writeInt32BE(this._h, 28),
              t
            },
            n
          }
        },
        function (e, t, n) {
          var r = n(307).inherits;
          e.exports = function (e, t) {
            function n() {
              this.init(),
              this._w = c,
              t.call(this, 128, 112)
            }
            function a(e, t, n) {
              return e >>> n | t << 32 - n
            }
            function i(e, t, n) {
              return e & t ^ ~e & n
            }
            function o(e, t, n) {
              return e & t ^ e & n ^ t & n
            }
            var s = [
              1116352408,
              3609767458,
              1899447441,
              602891725,
              3049323471,
              3964484399,
              3921009573,
              2173295548,
              961987163,
              4081628472,
              1508970993,
              3053834265,
              2453635748,
              2937671579,
              2870763221,
              3664609560,
              3624381080,
              2734883394,
              310598401,
              1164996542,
              607225278,
              1323610764,
              1426881987,
              3590304994,
              1925078388,
              4068182383,
              2162078206,
              991336113,
              2614888103,
              633803317,
              3248222580,
              3479774868,
              3835390401,
              2666613458,
              4022224774,
              944711139,
              264347078,
              2341262773,
              604807628,
              2007800933,
              770255983,
              1495990901,
              1249150122,
              1856431235,
              1555081692,
              3175218132,
              1996064986,
              2198950837,
              2554220882,
              3999719339,
              2821834349,
              766784016,
              2952996808,
              2566594879,
              3210313671,
              3203337956,
              3336571891,
              1034457026,
              3584528711,
              2466948901,
              113926993,
              3758326383,
              338241895,
              168717936,
              666307205,
              1188179964,
              773529912,
              1546045734,
              1294757372,
              1522805485,
              1396182291,
              2643833823,
              1695183700,
              2343527390,
              1986661051,
              1014477480,
              2177026350,
              1206759142,
              2456956037,
              344077627,
              2730485921,
              1290863460,
              2820302411,
              3158454273,
              3259730800,
              3505952657,
              3345764771,
              106217008,
              3516065817,
              3606008344,
              3600352804,
              1432725776,
              4094571909,
              1467031594,
              275423344,
              851169720,
              430227734,
              3100823752,
              506948616,
              1363258195,
              659060556,
              3750685593,
              883997877,
              3785050280,
              958139571,
              3318307427,
              1322822218,
              3812723403,
              1537002063,
              2003034995,
              1747873779,
              3602036899,
              1955562222,
              1575990012,
              2024104815,
              1125592928,
              2227730452,
              2716904306,
              2361852424,
              442776044,
              2428436474,
              593698344,
              2756734187,
              3733110249,
              3204031479,
              2999351573,
              3329325298,
              3815920427,
              3391569614,
              3928383900,
              3515267271,
              566280711,
              3940187606,
              3454069534,
              4118630271,
              4000239992,
              116418474,
              1914138554,
              174292421,
              2731055270,
              289380356,
              3203993006,
              460393269,
              320620315,
              685471733,
              587496836,
              852142971,
              1086792851,
              1017036298,
              365543100,
              1126000580,
              2618297676,
              1288033470,
              3409855158,
              1501505948,
              4234509866,
              1607167915,
              987167468,
              1816402316,
              1246189591
            ],
            c = new Array(160);
            return r(n, t),
            n.prototype.init = function () {
              return this._a = 1779033703,
              this._b = - 1150833019,
              this._c = 1013904242,
              this._d = - 1521486534,
              this._e = 1359893119,
              this._f = - 1694144372,
              this._g = 528734635,
              this._h = 1541459225,
              this._al = - 205731576,
              this._bl = - 2067093701,
              this._cl = - 23791573,
              this._dl = 1595750129,
              this._el = - 1377402159,
              this._fl = 725511199,
              this._gl = - 79577749,
              this._hl = 327033209,
              this._len = this._s = 0,
              this
            },
            n.prototype._update = function (e) {
              var t,
              n,
              r,
              c,
              l,
              u,
              p,
              d,
              f,
              m,
              h,
              _,
              g,
              v,
              E,
              I,
              b = this._w;
              t = 0 | this._a,
              n = 0 | this._b,
              r = 0 | this._c,
              c = 0 | this._d,
              l = 0 | this._e,
              u = 0 | this._f,
              p = 0 | this._g,
              d = 0 | this._h,
              f = 0 | this._al,
              m = 0 | this._bl,
              h = 0 | this._cl,
              _ = 0 | this._dl,
              g = 0 | this._el,
              v = 0 | this._fl,
              E = 0 | this._gl,
              I = 0 | this._hl;
              for (var y = 0; 80 > y; y++) {
                var T,
                S,
                C = 2 * y;
                if (16 > y) T = b[C] = e.readInt32BE(4 * C),
                S = b[C + 1] = e.readInt32BE(4 * C + 4);
                 else {
                  var D = b[C - 30],
                  A = b[C - 30 + 1],
                  O = a(D, A, 1) ^ a(D, A, 8) ^ D >>> 7,
                  N = a(A, D, 1) ^ a(A, D, 8) ^ a(A, D, 7);
                  D = b[C - 4],
                  A = b[C - 4 + 1];
                  var w = a(D, A, 19) ^ a(A, D, 29) ^ D >>> 6,
                  x = a(A, D, 19) ^ a(D, A, 29) ^ a(A, D, 6),
                  R = b[C - 14],
                  L = b[C - 14 + 1],
                  P = b[C - 32],
                  M = b[C - 32 + 1];
                  S = N + L,
                  T = O + R + (N >>> 0 > S >>> 0 ? 1 : 0),
                  S += x,
                  T = T + w + (x >>> 0 > S >>> 0 ? 1 : 0),
                  S += M,
                  T = T + P + (M >>> 0 > S >>> 0 ? 1 : 0),
                  b[C] = T,
                  b[C + 1] = S
                }
                var k = o(t, n, r),
                B = o(f, m, h),
                V = a(t, f, 28) ^ a(f, t, 2) ^ a(f, t, 7),
                F = a(f, t, 28) ^ a(t, f, 2) ^ a(t, f, 7),
                W = a(l, g, 14) ^ a(l, g, 18) ^ a(g, l, 9),
                U = a(g, l, 14) ^ a(g, l, 18) ^ a(l, g, 9),
                j = s[C],
                G = s[C + 1],
                H = i(l, u, p),
                z = i(g, v, E),
                Q = I + U,
                Y = d + W + (I >>> 0 > Q >>> 0 ? 1 : 0);
                Q += z,
                Y = Y + H + (z >>> 0 > Q >>> 0 ? 1 : 0),
                Q += G,
                Y = Y + j + (G >>> 0 > Q >>> 0 ? 1 : 0),
                Q += S,
                Y = Y + T + (S >>> 0 > Q >>> 0 ? 1 : 0);
                var q = F + B,
                J = V + k + (F >>> 0 > q >>> 0 ? 1 : 0);
                d = p,
                I = E,
                p = u,
                E = v,
                u = l,
                v = g,
                g = _ + Q | 0,
                l = c + Y + (_ >>> 0 > g >>> 0 ? 1 : 0) | 0,
                c = r,
                _ = h,
                r = n,
                h = m,
                n = t,
                m = f,
                f = Q + q | 0,
                t = Y + J + (Q >>> 0 > f >>> 0 ? 1 : 0) | 0
              }
              this._al = this._al + f | 0,
              this._bl = this._bl + m | 0,
              this._cl = this._cl + h | 0,
              this._dl = this._dl + _ | 0,
              this._el = this._el + g | 0,
              this._fl = this._fl + v | 0,
              this._gl = this._gl + E | 0,
              this._hl = this._hl + I | 0,
              this._a = this._a + t + (this._al >>> 0 < f >>> 0 ? 1 : 0) | 0,
              this._b = this._b + n + (this._bl >>> 0 < m >>> 0 ? 1 : 0) | 0,
              this._c = this._c + r + (this._cl >>> 0 < h >>> 0 ? 1 : 0) | 0,
              this._d = this._d + c + (this._dl >>> 0 < _ >>> 0 ? 1 : 0) | 0,
              this._e = this._e + l + (this._el >>> 0 < g >>> 0 ? 1 : 0) | 0,
              this._f = this._f + u + (this._fl >>> 0 < v >>> 0 ? 1 : 0) | 0,
              this._g = this._g + p + (this._gl >>> 0 < E >>> 0 ? 1 : 0) | 0,
              this._h = this._h + d + (this._hl >>> 0 < I >>> 0 ? 1 : 0) | 0
            },
            n.prototype._hash = function () {
              function t(e, t, r) {
                n.writeInt32BE(e, r),
                n.writeInt32BE(t, r + 4)
              }
              var n = new e(64);
              return t(this._a, this._al, 0),
              t(this._b, this._bl, 8),
              t(this._c, this._cl, 16),
              t(this._d, this._dl, 24),
              t(this._e, this._el, 32),
              t(this._f, this._fl, 40),
              t(this._g, this._gl, 48),
              t(this._h, this._hl, 56),
              n
            },
            n
          }
        },
        function (e, t, n) {
          var r = n(1705);
          e.exports = function (e, t) {
            t = t ||
            {
            };
            var n = r(e);
            return t.pbkdf2 = n.pbkdf2,
            t.pbkdf2Sync = n.pbkdf2Sync,
            t
          }
        },
        function (e, t, n) {
          (
            function (t, r) {
              !function () {
                var a = ('undefined' == typeof window ? t : window) ||
                {
                };
                _crypto = a.crypto ||
                a.msCrypto ||
                n(1729),
                e.exports = function (e) {
                  if (_crypto.getRandomValues) {
                    var t = new r(e);
                    return _crypto.getRandomValues(t),
                    t
                  }
                  if (_crypto.randomBytes) return _crypto.randomBytes(e);
                  throw new Error(
                    'secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11'
                  )
                }
              }()
            }
          ).call(t, function () {
            return this
          }(), n(43).Buffer)
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
          }
          e.exports = function (e, t, a, i) {
            t = t ||
            '&',
            a = a ||
            '=';
            var o = {};
            if ('string' != typeof e || 0 === e.length) return o;
            var s = /\+/g;
            e = e.split(t);
            var c = 1000;
            i &&
            'number' == typeof i.maxKeys &&
            (c = i.maxKeys);
            var l = e.length;
            c > 0 &&
            l > c &&
            (l = c);
            for (var u = 0; l > u; ++u) {
              var p,
              d,
              f,
              m,
              h = e[u].replace(s, '%20'),
              _ = h.indexOf(a);
              _ >= 0 ? (p = h.substr(0, _), d = h.substr(_ + 1)) : (p = h, d = ''),
              f = decodeURIComponent(p),
              m = decodeURIComponent(d),
              n(o, f) ? r(o[f]) ? o[f].push(m) : o[f] = [
                o[f],
                m
              ] : o[f] = m
            }
            return o
          };
          var r = Array.isArray ||
          function (e) {
            return '[object Array]' === Object.prototype.toString.call(e)
          }
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            if (e.map) return e.map(t);
            for (var n = [], r = 0; r < e.length; r++) n.push(t(e[r], r));
            return n
          }
          var r = function (e) {
            switch (typeof e) {
              case 'string':
                return e;
              case 'boolean':
                return e ? 'true' : 'false';
              case 'number':
                return isFinite(e) ? e : '';
              default:
                return ''
            }
          };
          e.exports = function (e, t, o, s) {
            return t = t ||
            '&',
            o = o ||
            '=',
            null === e &&
            (e = void 0),
            'object' == typeof e ? n(
              i(e),
              function (i) {
                var s = encodeURIComponent(r(i)) + o;
                return a(e[i]) ? n(e[i], function (e) {
                  return s + encodeURIComponent(r(e))
                }).join(t) : s + encodeURIComponent(r(e[i]))
              }
            ).join(t) : s ? encodeURIComponent(r(s)) + o + encodeURIComponent(r(e)) : ''
          };
          var a = Array.isArray ||
          function (e) {
            return '[object Array]' === Object.prototype.toString.call(e)
          },
          i = Object.keys ||
          function (e) {
            var t = [];
            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) &&
            t.push(n);
            return t
          }
        },
        [
          1744,
          1714,
          1715
        ],
        function (e, t, n) {
          var r;
          (
            function (e, a) {
              !function (i) {
                function o(e) {
                  throw RangeError(R[e])
                }
                function s(e, t) {
                  for (var n = e.length, r = []; n--; ) r[n] = t(e[n]);
                  return r
                }
                function c(e, t) {
                  var n = e.split('@'),
                  r = '';
                  n.length > 1 &&
                  (r = n[0] + '@', e = n[1]),
                  e = e.replace(x, '.');
                  var a = e.split('.'),
                  i = s(a, t).join('.');
                  return r + i
                }
                function l(e) {
                  for (var t, n, r = [], a = 0, i = e.length; i > a; ) t = e.charCodeAt(a++),
                  t >= 55296 &&
                  56319 >= t &&
                  i > a ? (
                    n = e.charCodeAt(a++),
                    56320 == (64512 & n) ? r.push(((1023 & t) << 10) + (1023 & n) + 65536) : (r.push(t), a--)
                  ) : r.push(t);
                  return r
                }
                function u(e) {
                  return s(
                    e,
                    function (e) {
                      var t = '';
                      return e > 65535 &&
                      (e -= 65536, t += M(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e),
                      t += M(e)
                    }
                  ).join('')
                }
                function p(e) {
                  return 10 > e - 48 ? e - 22 : 26 > e - 65 ? e - 65 : 26 > e - 97 ? e - 97 : b
                }
                function d(e, t) {
                  return e + 22 + 75 * (26 > e) - ((0 != t) << 5)
                }
                function f(e, t, n) {
                  var r = 0;
                  for (e = n ? P(e / C) : e >> 1, e += P(e / t); e > L * T >> 1; r += b) e = P(e / L);
                  return P(r + (L + 1) * e / (e + S))
                }
                function m(e) {
                  var t,
                  n,
                  r,
                  a,
                  i,
                  s,
                  c,
                  l,
                  d,
                  m,
                  h = [],
                  _ = e.length,
                  g = 0,
                  v = A,
                  E = D;
                  for (n = e.lastIndexOf(O), 0 > n && (n = 0), r = 0; n > r; ++r) e.charCodeAt(r) >= 128 &&
                  o('not-basic'),
                  h.push(e.charCodeAt(r));
                  for (a = n > 0 ? n + 1 : 0; _ > a; ) {
                    for (
                      i = g,
                      s = 1,
                      c = b;
                      a >= _ &&
                      o('invalid-input'),
                      l = p(e.charCodeAt(a++)),
                      (l >= b || l > P((I - g) / s)) &&
                      o('overflow'),
                      g += l * s,
                      d = E >= c ? y : c >= E + T ? T : c - E,
                      !(d > l);
                      c += b
                    ) m = b - d,
                    s > P(I / m) &&
                    o('overflow'),
                    s *= m;
                    t = h.length + 1,
                    E = f(g - i, t, 0 == i),
                    P(g / t) > I - v &&
                    o('overflow'),
                    v += P(g / t),
                    g %= t,
                    h.splice(g++, 0, v)
                  }
                  return u(h)
                }
                function h(e) {
                  var t,
                  n,
                  r,
                  a,
                  i,
                  s,
                  c,
                  u,
                  p,
                  m,
                  h,
                  _,
                  g,
                  v,
                  E,
                  S = [];
                  for (e = l(e), _ = e.length, t = A, n = 0, i = D, s = 0; _ > s; ++s) h = e[s],
                  128 > h &&
                  S.push(M(h));
                  for (r = a = S.length, a && S.push(O); _ > r; ) {
                    for (c = I, s = 0; _ > s; ++s) h = e[s],
                    h >= t &&
                    c > h &&
                    (c = h);
                    for (
                      g = r + 1,
                      c - t > P((I - n) / g) &&
                      o('overflow'),
                      n += (c - t) * g,
                      t = c,
                      s = 0;
                      _ > s;
                      ++s
                    ) if (h = e[s], t > h && ++n > I && o('overflow'), h == t) {
                      for (u = n, p = b; m = i >= p ? y : p >= i + T ? T : p - i, !(m > u); p += b) E = u - m,
                      v = b - m,
                      S.push(M(d(m + E % v, 0))),
                      u = P(E / v);
                      S.push(M(d(u, 0))),
                      i = f(n, g, r == a),
                      n = 0,
                      ++r
                    }
                    ++n,
                    ++t
                  }
                  return S.join('')
                }
                function _(e) {
                  return c(e, function (e) {
                    return N.test(e) ? m(e.slice(4).toLowerCase()) : e
                  })
                }
                function g(e) {
                  return c(e, function (e) {
                    return w.test(e) ? 'xn--' + h(e) : e
                  })
                }
                var v = (
                  'object' == typeof t &&
                  t &&
                  !t.nodeType &&
                  t,
                  'object' == typeof e &&
                  e &&
                  !e.nodeType &&
                  e,
                  'object' == typeof a &&
                  a
                );
                v.global !== v &&
                v.window !== v &&
                v.self !== v ||
                (i = v);
                var E,
                I = 2147483647,
                b = 36,
                y = 1,
                T = 26,
                S = 38,
                C = 700,
                D = 72,
                A = 128,
                O = '-',
                N = /^xn--/,
                w = /[^\x20-\x7E]/,
                x = /[\x2E\u3002\uFF0E\uFF61]/g,
                R = {
                  overflow: 'Overflow: input needs wider integers to process',
                  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
                  'invalid-input': 'Invalid input'
                },
                L = b - y,
                P = Math.floor,
                M = String.fromCharCode;
                E = {
                  version: '1.3.2',
                  ucs2: {
                    decode: l,
                    encode: u
                  },
                  decode: m,
                  encode: h,
                  toASCII: g,
                  toUnicode: _
                },
                r = function () {
                  return E
                }.call(t, n, t, e),
                !(void 0 !== r && (e.exports = r))
              }(this)
            }
          ).call(t, n(42) (e), function () {
            return this
          }())
        },
        function (e, t) {
          'use strict';
          function n(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
          }
          e.exports = function (e, t, r, a) {
            t = t ||
            '&',
            r = r ||
            '=';
            var i = {};
            if ('string' != typeof e || 0 === e.length) return i;
            var o = /\+/g;
            e = e.split(t);
            var s = 1000;
            a &&
            'number' == typeof a.maxKeys &&
            (s = a.maxKeys);
            var c = e.length;
            s > 0 &&
            c > s &&
            (c = s);
            for (var l = 0; c > l; ++l) {
              var u,
              p,
              d,
              f,
              m = e[l].replace(o, '%20'),
              h = m.indexOf(r);
              h >= 0 ? (u = m.substr(0, h), p = m.substr(h + 1)) : (u = m, p = ''),
              d = decodeURIComponent(u),
              f = decodeURIComponent(p),
              n(i, d) ? Array.isArray(i[d]) ? i[d].push(f) : i[d] = [
                i[d],
                f
              ] : i[d] = f
            }
            return i
          }
        },
        function (e, t) {
          'use strict';
          var n = function (e) {
            switch (typeof e) {
              case 'string':
                return e;
              case 'boolean':
                return e ? 'true' : 'false';
              case 'number':
                return isFinite(e) ? e : '';
              default:
                return ''
            }
          };
          e.exports = function (e, t, r, a) {
            return t = t ||
            '&',
            r = r ||
            '=',
            null === e &&
            (e = void 0),
            'object' == typeof e ? Object.keys(e).map(
              function (a) {
                var i = encodeURIComponent(n(a)) + r;
                return Array.isArray(e[a]) ? e[a].map(function (e) {
                  return i + encodeURIComponent(n(e))
                }).join(t) : i + encodeURIComponent(n(e[a]))
              }
            ).join(t) : a ? encodeURIComponent(n(a)) + r + encodeURIComponent(n(e)) : ''
          }
        },
        [
          1744,
          1718,
          1719
        ],
        function (e, t) {
          'function' == typeof Object.create ? e.exports = function (e, t) {
            e.super_ = t,
            e.prototype = Object.create(
              t.prototype,
              {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0
                }
              }
            )
          }
           : e.exports = function (e, t) {
            e.super_ = t;
            var n = function () {
            };
            n.prototype = t.prototype,
            e.prototype = new n,
            e.prototype.constructor = e
          }
        },
        function (e, t) {
          e.exports = function (e) {
            return e &&
            'object' == typeof e &&
            'function' == typeof e.copy &&
            'function' == typeof e.fill &&
            'function' == typeof e.readUInt8
          }
        },
        ,
        ,
        function (e, t, n) {
          e.loaded = true
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './config.event.json': 1468,
            './config.integration.json': 1469,
            './config.loadtest.json': 1471,
            './config.production.json': 1472,
            './config.scert.json': 1473
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 1725
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './black-1.png': 1084,
            './black-2.png': 1085,
            './black-3.png': 1086,
            './black-4.png': 1087,
            './black-5.png': 1088,
            './glass-1.png': 1089,
            './glass-2.png': 1090,
            './glass-3.png': 1091,
            './glass-4.png': 1092,
            './glass-5.png': 1093,
            './red-1.png': 1094,
            './red-2.png': 1095,
            './red-3.png': 1096,
            './red-4.png': 1097,
            './red-5.png': 1098,
            './silver-1.png': 1099,
            './silver-2.png': 1100,
            './silver-3.png': 1101,
            './silver-4.png': 1102,
            './silver-5.png': 1103,
            './white-1.png': 1104,
            './white-2.png': 1105,
            './white-3.png': 1106,
            './white-4.png': 1107,
            './white-5.png': 357
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 1726
        },
        function (e, t, n) {
          function r(e) {
            return n(a(e))
          }
          function a(e) {
            return i[e] ||
            function () {
              throw new Error('Cannot find module \'' + e + '\'.')
            }()
          }
          var i = {
            './34x34/Anchor_01_District_focus.png': 152,
            './34x34/Anchor_01_District_outline.png': 153,
            './34x34/Anchor_02_Plastic_focus.png': 154,
            './34x34/Anchor_02_Plastic_outline.png': 155,
            './34x34/Anchor_03_AnansiEmporium_focus.png': 156,
            './34x34/Anchor_03_AnansiEmporium_outline.png': 157,
            './34x34/Anchor_04_CityAlert_focus.png': 158,
            './34x34/Anchor_04_CityAlert_outline.png': 159,
            './34x34/Anchor_05_AllCom_focus.png': 160,
            './34x34/Anchor_05_AllCom_outline.png': 161,
            './34x34/Anchor_GridLeaks_focus.png': 162,
            './34x34/Anchor_GridLeaks_outline.png': 163,
            './34x34/Anchor_GridNodes_focus.png': 164,
            './34x34/Anchor_GridNodes_outline.png': 165,
            './34x34/Anchor_ReflectionHubs_focus.png': 166,
            './34x34/Anchor_ReflectionHubs_outline.png': 167,
            './34x34/Downtown_01_District_focus.png': 168,
            './34x34/Downtown_01_District_outline.png': 169,
            './34x34/Downtown_02_RunnersLair_focus.png': 170,
            './34x34/Downtown_02_RunnersLair_outline.png': 171,
            './34x34/Downtown_03_TheRunners_focus.png': 172,
            './34x34/Downtown_03_TheRunners_outline.png': 173,
            './34x34/Downtown_04_Dashes_focus.png': 174,
            './34x34/Downtown_04_Dashes_outline.png': 175,
            './34x34/Downtown_05_ElysiumBuilding_focus.png': 176,
            './34x34/Downtown_05_ElysiumBuilding_outline.png': 177,
            './34x34/Downtown_BeatLE_focus.png': 178,
            './34x34/Downtown_BeatLE_outline.png': 179,
            './34x34/Downtown_BillboardHacking_focus.png': 180,
            './34x34/Downtown_BillboardHacking_outline.png': 181,
            './34x34/Downtown_TimeTrials_focus.png': 182,
            './34x34/Downtown_TimeTrials_outline.png': 183,
            './34x34/OmnistatTunnels_01_BlackNovember_focus.png': 184,
            './34x34/OmnistatTunnels_01_BlackNovember_outline.png': 185,
            './34x34/OmnistatTunnels_02_Rebecca_focus.png': 186,
            './34x34/OmnistatTunnels_02_Rebecca_outline.png': 187,
            './34x34/OmnistatTunnels_03_SentryTurretsSniper_focus.png': 188,
            './34x34/OmnistatTunnels_03_SentryTurretsSniper_outline.png': 189,
            './34x34/OmnistatTunnels_04_OmnistatAgent_focus.png': 190,
            './34x34/OmnistatTunnels_04_OmnistatAgent_outline.png': 191,
            './34x34/OmnistatTunnels_05_HistoryLesson_focus.png': 192,
            './34x34/OmnistatTunnels_05_HistoryLesson_outline.png': 193,
            './34x34/Rezoning_01_District_focus.png': 194,
            './34x34/Rezoning_01_District_outline.png': 195,
            './34x34/Rezoning_02_CallahanConstruction_focus.png': 196,
            './34x34/Rezoning_02_CallahanConstruction_outline.png': 197,
            './34x34/Rezoning_03_Enforcer_focus.png': 198,
            './34x34/Rezoning_03_Enforcer_outline.png': 199,
            './34x34/Rezoning_04_ShockProtector_focus.png': 200,
            './34x34/Rezoning_04_ShockProtector_outline.png': 201,
            './34x34/Rezoning_05_Protector_focus.png': 202,
            './34x34/Rezoning_05_Protector_outline.png': 203,
            './34x34/billboardHack.png': 204,
            './34x34/billboardHack_focus.png': 205,
            './34x34/billboardHack_outline.png': 206,
            './34x34/delivery.png': 207,
            './34x34/delivery_focus.png': 208,
            './34x34/delivery_outline.png': 209,
            './34x34/diversion.png': 210,
            './34x34/diversion_focus.png': 211,
            './34x34/diversion_outline.png': 212,
            './34x34/gridNode.png': 213,
            './34x34/gridNode_focus.png': 214,
            './34x34/gridNode_outline.png': 215,
            './34x34/missionMain.png': 216,
            './34x34/missionMain_focus.png': 217,
            './34x34/missionMain_outline.png': 218,
            './34x34/missionMain_unselected.png': 219,
            './34x34/missionSide.png': 220,
            './34x34/missionSide_focus.png': 221,
            './34x34/missionSide_outline.png': 222,
            './34x34/player.png': 223,
            './34x34/reachThis.png': 224,
            './34x34/reachThis_focus.png': 225,
            './34x34/reachThis_outline.png': 226,
            './34x34/runnerKit.png': 227,
            './34x34/runnerKit_focus.png': 228,
            './34x34/runnerKit_outline.png': 229,
            './34x34/runnersRoute.png': 230,
            './34x34/runnersRoute_focus.png': 231,
            './34x34/runnersRoute_focus1.png': 232,
            './34x34/runnersRoute_focus2.png': 233,
            './34x34/runnersRoute_focus3.png': 234,
            './34x34/runnersRoute_outline.png': 235,
            './34x34/runnersRoute_outline1.png': 236,
            './34x34/runnersRoute_outline2.png': 237,
            './34x34/runnersRoute_outline3.png': 238,
            './34x34/safeHouse.png': 239,
            './34x34/safeHouse_focus.png': 240,
            './34x34/safeHouse_outline.png': 241,
            './34x34/securityHub.png': 242,
            './34x34/securityHub_focus.png': 243,
            './34x34/securityHub_outline.png': 244,
            './34x34/thebeat.png': 245,
            './34x34/thebeat_outline.png': 246,
            './34x34/timeTrial.png': 247,
            './34x34/timeTrialCheckpoint.png': 248,
            './34x34/timeTrialFinish.png': 249,
            './34x34/timeTrial_focus.png': 250,
            './34x34/timeTrial_outline.png': 251,
            './34x34/underground-down.png': 252,
            './34x34/underground-down_focus.png': 253,
            './34x34/underground-down_outline.png': 254,
            './34x34/underground-up.png': 255,
            './34x34/underground-up_focus.png': 256,
            './34x34/underground-up_outline.png': 257,
            './Anchor_01_District_focus.png': 359,
            './Anchor_01_District_outline.png': 360,
            './Anchor_02_Plastic_focus.png': 361,
            './Anchor_02_Plastic_outline.png': 362,
            './Anchor_03_AnansiEmporium_focus.png': 363,
            './Anchor_03_AnansiEmporium_outline.png': 364,
            './Anchor_04_CityAlert_focus.png': 365,
            './Anchor_04_CityAlert_outline.png': 366,
            './Anchor_05_AllCom_focus.png': 367,
            './Anchor_05_AllCom_outline.png': 368,
            './Anchor_GridLeaks_focus.png': 369,
            './Anchor_GridLeaks_outline.png': 370,
            './Anchor_GridNodes_focus.png': 371,
            './Anchor_GridNodes_outline.png': 372,
            './Anchor_ReflectionHubs_focus.png': 373,
            './Anchor_ReflectionHubs_outline.png': 374,
            './Downtown_01_District_focus.png': 375,
            './Downtown_01_District_outline.png': 376,
            './Downtown_02_RunnersLair_focus.png': 377,
            './Downtown_02_RunnersLair_outline.png': 378,
            './Downtown_03_TheRunners_focus.png': 379,
            './Downtown_03_TheRunners_outline.png': 380,
            './Downtown_04_Dashes_focus.png': 381,
            './Downtown_04_Dashes_outline.png': 382,
            './Downtown_05_ElysiumBuilding_focus.png': 383,
            './Downtown_05_ElysiumBuilding_outline.png': 384,
            './Downtown_BeatLE_focus.png': 385,
            './Downtown_BeatLE_outline.png': 386,
            './Downtown_BillboardHacking_focus.png': 387,
            './Downtown_BillboardHacking_outline.png': 388,
            './Downtown_TimeTrials_focus.png': 389,
            './Downtown_TimeTrials_outline.png': 390,
            './OmnistatTunnels_01_BlackNovember_focus.png': 391,
            './OmnistatTunnels_01_BlackNovember_outline.png': 392,
            './OmnistatTunnels_02_Rebecca_focus.png': 393,
            './OmnistatTunnels_02_Rebecca_outline.png': 394,
            './OmnistatTunnels_03_SentryTurretsSniper_focus.png': 395,
            './OmnistatTunnels_03_SentryTurretsSniper_outline.png': 396,
            './OmnistatTunnels_04_OmnistatAgent_focus.png': 397,
            './OmnistatTunnels_04_OmnistatAgent_outline.png': 398,
            './OmnistatTunnels_05_HistoryLesson_focus.png': 399,
            './OmnistatTunnels_05_HistoryLesson_outline.png': 400,
            './Rezoning_01_District_focus.png': 401,
            './Rezoning_01_District_outline.png': 402,
            './Rezoning_02_CallahanConstruction_focus.png': 403,
            './Rezoning_02_CallahanConstruction_outline.png': 404,
            './Rezoning_03_Enforcer_focus.png': 405,
            './Rezoning_03_Enforcer_outline.png': 406,
            './Rezoning_04_ShockProtector_focus.png': 407,
            './Rezoning_04_ShockProtector_outline.png': 408,
            './Rezoning_05_Protector_focus.png': 409,
            './Rezoning_05_Protector_outline.png': 410,
            './billboardHack.png': 411,
            './billboardHack_focus.png': 412,
            './billboardHack_outline.png': 258,
            './delivery.png': 413,
            './delivery_focus.png': 414,
            './delivery_outline.png': 259,
            './diversion.png': 415,
            './diversion_focus.png': 416,
            './diversion_outline.png': 260,
            './gridNode.png': 417,
            './gridNode_focus.png': 418,
            './gridNode_outline.png': 261,
            './missionMain.png': 419,
            './missionMain_focus.png': 420,
            './missionMain_outline.png': 262,
            './missionMain_unselected.png': 421,
            './missionSide.png': 422,
            './missionSide_focus.png': 423,
            './missionSide_outline.png': 263,
            './player.png': 99,
            './reachThis.png': 424,
            './reachThis_focus.png': 425,
            './reachThis_outline.png': 264,
            './runnerKit.png': 426,
            './runnerKit_focus.png': 427,
            './runnerKit_outline.png': 265,
            './runnersRoute.png': 428,
            './runnersRoute_focus.png': 429,
            './runnersRoute_focus1.png': 430,
            './runnersRoute_focus2.png': 431,
            './runnersRoute_focus3.png': 432,
            './runnersRoute_outline.png': 266,
            './runnersRoute_outline1.png': 433,
            './runnersRoute_outline2.png': 434,
            './runnersRoute_outline3.png': 435,
            './safeHouse.png': 436,
            './safeHouse_focus.png': 437,
            './safeHouse_outline.png': 267,
            './securityHub.png': 438,
            './securityHub_focus.png': 439,
            './securityHub_outline.png': 268,
            './thebeat.png': 440,
            './thebeat_outline.png': 441,
            './timeTrial.png': 442,
            './timeTrialCheckpoint.png': 443,
            './timeTrialFinish.png': 444,
            './timeTrial_focus.png': 445,
            './timeTrial_outline.png': 269,
            './underground-down.png': 446,
            './underground-down_focus.png': 447,
            './underground-down_outline.png': 270,
            './underground-up.png': 448,
            './underground-up_focus.png': 449,
            './underground-up_outline.png': 450
          };
          r.keys = function () {
            return Object.keys(i)
          },
          r.resolve = a,
          e.exports = r,
          r.id = 1727
        },
        ,
        function (e, t) {
        },
        function (e, t, n, r, a, i, o, s, c, l) {
          var u = n(r),
          p = n(a),
          d = n(i),
          f = n(o),
          m = n(s),
          h = (n(c), n(l)),
          _ = Array.prototype.slice,
          g = /\s+/,
          v = {
            on: function (e, t, n) {
              if (!E(this, 'on', e, [
                t,
                n
              ]) || !t) return this;
              this._events ||
              (this._events = {});
              var r = this._events[e] ||
              (this._events[e] = []);
              return r.push({
                callback: t,
                context: n,
                ctx: n ||
                this
              }),
              this
            },
            once: function (e, t, n) {
              if (!E(this, 'once', e, [
                t,
                n
              ]) || !t) return this;
              var r = this,
              a = u(function () {
                r.off(e, a),
                t.apply(this, arguments)
              });
              return a._callback = t,
              this.on(e, a, n)
            },
            off: function (e, t, n) {
              var r,
              a,
              i,
              o,
              s,
              c,
              l,
              u;
              if (!this._events || !E(this, 'off', e, [
                t,
                n
              ])) return this;
              if (!e && !t && !n) return this._events = void 0,
              this;
              for (o = e ? [
                e
              ] : d(this._events), s = 0, c = o.length; c > s; s++) if (e = o[s], i = this._events[e]) {
                if (this._events[e] = r = [], t || n) for (l = 0, u = i.length; u > l; l++) a = i[l],
                (
                  t &&
                  t !== a.callback &&
                  t !== a.callback._callback ||
                  n &&
                  n !== a.context
                ) &&
                r.push(a);
                r.length ||
                delete this._events[e]
              }
              return this
            },
            trigger: function (e) {
              if (!this._events) return this;
              var t = _.call(arguments, 1);
              if (!E(this, 'trigger', e, t)) return this;
              var n = this._events[e],
              r = this._events.all;
              return n &&
              I(n, t),
              r &&
              I(r, arguments),
              this
            },
            stopListening: function (e, t, n) {
              var r = this._listeningTo;
              if (!r) return this;
              var a = !t &&
              !n;
              n ||
              'object' != typeof t ||
              (n = this),
              e &&
              ((r = {}) [e._listenId] = e);
              for (var i in r) e = r[i],
              e.off(t, n, this),
              (a || f(e._events)) &&
              delete this._listeningTo[i];
              return this
            },
            createEmitter: function (e) {
              return h(e || {
              }, v)
            }
          };
          v.bind = v.on,
          v.unbind = v.off;
          var E = function (e, t, n, r) {
            if (!n) return !0;
            if ('object' == typeof n) {
              for (var a in n) e[t].apply(e, [
                a,
                n[a]
              ].concat(r));
              return !1
            }
            if (g.test(n)) {
              for (var i = n.split(g), o = 0, s = i.length; s > o; o++) e[t].apply(e, [
                i[o]
              ].concat(r));
              return !1
            }
            return !0
          },
          I = function (e, t) {
            var n,
            r = - 1,
            a = e.length,
            i = t[0],
            o = t[1],
            s = t[2];
            switch (t.length) {
              case 0:
                for (; ++r < a; ) (n = e[r]).callback.call(n.ctx);
                return;
              case 1:
                for (; ++r < a; ) (n = e[r]).callback.call(n.ctx, i);
                return;
              case 2:
                for (; ++r < a; ) (n = e[r]).callback.call(n.ctx, i, o);
                return;
              case 3:
                for (; ++r < a; ) (n = e[r]).callback.call(n.ctx, i, o, s);
                return;
              default:
                for (; ++r < a; ) (n = e[r]).callback.apply(n.ctx, t);
                return
            }
          },
          b = {
            listenTo: 'on',
            listenToOnce: 'once'
          };
          m(
            b,
            function (e, t) {
              v[t] = function (t, n, r, a) {
                var i = this._listeningTo ||
                (this._listeningTo = {}),
                o = t._listenId ||
                (t._listenId = p('l'));
                return i[o] = t,
                r ||
                'object' != typeof n ||
                (r = this),
                t[e](n, r, this),
                this
              }
            }
          ),
          v.listenToAndRun = function (e, t, n) {
            return v.listenTo.apply(this, arguments),
            n ||
            'object' != typeof t ||
            (n = this),
            n.apply(this),
            this
          },
          e.exports = v
        },
        function (e, t, n, r, a, i, o) {
          function s(e, t) {
            return function (n, r, a) {
              return 'function' == typeof r &&
              void 0 === a &&
              p(n) ? e(n, r) : t(n, u(r, a, 3))
            }
          }
          var c = n(r),
          l = n(a),
          u = n(i),
          p = n(o),
          d = s(c, l);
          e.exports = d
        },
        function (e, t, n, r) {
          function a(e, t) {
            return m(e, t, p)
          }
          function i(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function o(e, t) {
            return function (n, r) {
              var a = n ? h(n) : 0;
              if (!c(a)) return e(n, r);
              for (var i = t ? a : - 1, o = l(n); (t ? i-- : ++i < a) && r(o[i], i, o) !== !1; );
              return n
            }
          }
          function s(e) {
            return function (t, n, r) {
              for (var a = l(t), i = r(t), o = i.length, s = e ? o : - 1; e ? s-- : ++s < o; ) {
                var c = i[s];
                if (n(a[c], c, a) === !1) break
              }
              return t
            }
          }
          function c(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            d >= e
          }
          function l(e) {
            return u(e) ? e : Object(e)
          }
          function u(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          var p = n(r),
          d = 9007199254740991,
          f = o(a),
          m = s(),
          h = i('length');
          e.exports = f
        },
        function (e, t, n, r, a, i, o, s) {
          function c(e) {
            return !!e &&
            'object' == typeof e
          }
          function l(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function u(e) {
            return null != e &&
            p(E(e))
          }
          function p(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            v >= e
          }
          function d(e) {
            return null == e ? !0 : u(e) &&
            (m(e) || _(e) || f(e) || c(e) && h(e.splice)) ? !e.length : !g(e).length
          }
          var f = n(r),
          m = n(a),
          h = n(i),
          _ = n(o),
          g = n(s),
          v = 9007199254740991,
          E = l('length');
          e.exports = d
        },
        function (e, t, n, r, a, i) {
          function o(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function s(e) {
            return null != e &&
            l(b(e))
          }
          function c(e, t) {
            return e = 'number' == typeof e ||
            _.test(e) ? + e : - 1,
            t = null == t ? I : t,
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          function l(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            I >= e
          }
          function u(e) {
            for (
              var t = d(e),
              n = t.length,
              r = n &&
              e.length,
              a = !!r &&
              l(r) &&
              (h(e) || m(e)),
              i = - 1,
              o = [];
              ++i < n;
            ) {
              var s = t[i];
              (a && c(s, r) || v.call(e, s)) &&
              o.push(s)
            }
            return o
          }
          function p(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function d(e) {
            if (null == e) return [];
            p(e) ||
            (e = Object(e));
            var t = e.length;
            t = t &&
            l(t) &&
            (h(e) || m(e)) &&
            t ||
            0;
            for (
              var n = e.constructor,
              r = - 1,
              a = 'function' == typeof n &&
              n.prototype === e,
              i = Array(t),
              o = t > 0;
              ++r < t;
            ) i[r] = r + '';
            for (var s in e) o &&
            c(s, t) ||
            'constructor' == s &&
            (a || !v.call(e, s)) ||
            i.push(s);
            return i
          }
          var f = n(r),
          m = n(a),
          h = n(i),
          _ = /^\d+$/,
          g = Object.prototype,
          v = g.hasOwnProperty,
          E = f(Object, 'keys'),
          I = 9007199254740991,
          b = o('length'),
          y = E ? function (e) {
            var t = null == e ? void 0 : e.constructor;
            return 'function' == typeof t &&
            t.prototype === e ||
            'function' != typeof e &&
            s(e) ? u(e) : p(e) ? E(e) : []
          }
           : u;
          e.exports = y
        },
        function (e, t, n, r) {
          function a(e) {
            return i(2, e)
          }
          var i = n(r);
          e.exports = a
        },
        function (e, t, n, r) {
          function a(e) {
            return !!e &&
            'object' == typeof e
          }
          function i(e) {
            return 'symbol' == typeof e ||
            a(e) &&
            f.call(e) == u
          }
          function o(e) {
            if ('string' == typeof e) return e;
            if (null == e) return '';
            if (i(e)) return m ? _.call(e) : '';
            var t = e + '';
            return '0' == t &&
            1 / e == - l ? '-0' : t
          }
          function s(e) {
            var t = ++d;
            return o(e) + t
          }
          var c = n(r),
          l = 1 / 0,
          u = '[object Symbol]',
          p = Object.prototype,
          d = 0,
          f = p.toString,
          m = c.Symbol,
          h = m ? m.prototype : void 0,
          _ = m ? h.toString : void 0;
          e.exports = s
        },
        function (e, t, n, r, a, i) {
          function o(e, t, n) {
            for (var r = - 1, a = l(t), i = a.length; ++r < i; ) {
              var o = a[r],
              s = e[o],
              c = n(s, t[o], o, e, t);
              (c === c ? c === s : s !== s) &&
              (void 0 !== s || o in e) ||
              (e[o] = c)
            }
            return e
          }
          var s = n(r),
          c = n(a),
          l = n(i),
          u = c(function (e, t, n) {
            return n ? o(e, t, n) : s(e, t)
          });
          e.exports = u
        },
        function (e, t, n, r, a) {
          function i(e, t) {
            return null == t ? e : o(t, s(t), e)
          }
          var o = n(r),
          s = n(a);
          e.exports = i
        },
        function (e, t, n, r, a, i) {
          function o(e) {
            return l(
              function (t, n) {
                var r = - 1,
                a = null == t ? 0 : n.length,
                i = a > 2 ? n[a - 2] : void 0,
                o = a > 2 ? n[2] : void 0,
                l = a > 1 ? n[a - 1] : void 0;
                for (
                  'function' == typeof i ? (i = s(i, l, 5), a -= 2) : (i = 'function' == typeof l ? l : void 0, a -= i ? 1 : 0),
                  o &&
                  c(n[0], n[1], o) &&
                  (i = 3 > a ? void 0 : i, a = 1);
                  ++r < a;
                ) {
                  var u = n[r];
                  u &&
                  e(t, u, i)
                }
                return t
              }
            )
          }
          var s = n(r),
          c = n(a),
          l = n(i);
          e.exports = o
        },
        function (e, t, n, r, a, i) {
          var o = n(r),
          s = n(a),
          c = n(i),
          l = 1,
          u = 32,
          p = c(
            function (e, t, n) {
              var r = l;
              if (n.length) {
                var a = s(n, p.placeholder);
                r |= u
              }
              return o(e, r, t, n, a)
            }
          );
          p.placeholder = {},
          e.exports = p
        },
        function (e, t, n, r) {
          function a(e, t, n) {
            var r = n.length;
            switch (r) {
              case 0:
                return e.call(t);
              case 1:
                return e.call(t, n[0]);
              case 2:
                return e.call(t, n[0], n[1]);
              case 3:
                return e.call(t, n[0], n[1], n[2])
            }
            return e.apply(t, n)
          }
          function i(e, t) {
            return e = 'number' == typeof e ||
            H.test(e) ? + e : - 1,
            t = null == t ? P : t,
            e > - 1 &&
            e % 1 == 0 &&
            t > e
          }
          function o(e, t) {
            for (var n = - 1, r = e.length, a = - 1, i = []; ++n < r; ) e[n] === t &&
            (e[n] = B, i[++a] = n);
            return i
          }
          function s(e, t, n) {
            for (
              var r = n.length,
              a = - 1,
              i = q(e.length - r, 0),
              o = - 1,
              s = t.length,
              c = Array(s + i);
              ++o < s;
            ) c[o] = t[o];
            for (; ++a < r; ) c[n[a]] = e[a];
            for (; i--; ) c[o++] = e[a++];
            return c
          }
          function c(e, t, n) {
            for (
              var r = - 1,
              a = n.length,
              i = - 1,
              o = q(e.length - a, 0),
              s = - 1,
              c = t.length,
              l = Array(o + c);
              ++i < o;
            ) l[i] = e[i];
            for (var u = i; ++s < c; ) l[u + s] = t[s];
            for (; ++r < a; ) l[u + n[r]] = e[i++];
            return l
          }
          function l(e, t) {
            var n = - 1,
            r = e.length;
            for (t || (t = Array(r)); ++n < r; ) t[n] = e[n];
            return t
          }
          function u(e, t, n) {
            function r() {
              var t = this &&
              this !== y &&
              this instanceof r ? i : e;
              return t.apply(a ? n : this, arguments)
            }
            var a = t & T,
            i = p(e);
            return r
          }
          function p(e) {
            return function () {
              var t = arguments;
              switch (t.length) {
                case 0:
                  return new e;
                case 1:
                  return new e(t[0]);
                case 2:
                  return new e(t[0], t[1]);
                case 3:
                  return new e(t[0], t[1], t[2]);
                case 4:
                  return new e(t[0], t[1], t[2], t[3]);
                case 5:
                  return new e(t[0], t[1], t[2], t[3], t[4]);
                case 6:
                  return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
                case 7:
                  return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
              }
              var n = K(e.prototype),
              r = e.apply(n, t);
              return E(r) ? r : n
            }
          }
          function d(e, t, n) {
            function r() {
              for (
                var s = arguments.length,
                c = s,
                l = Array(s),
                u = this &&
                this !== y &&
                this instanceof r ? i : e,
                p = r.placeholder;
                c--;
              ) l[c] = arguments[c];
              var d = 3 > s &&
              l[0] !== p &&
              l[s - 1] !== p ? [] : o(l, p);
              return s -= d.length,
              n > s ? h(e, t, f, p, void 0, l, d, void 0, void 0, n - s) : a(u, this, l)
            }
            var i = p(e);
            return r
          }
          function f(e, t, n, r, a, i, l, u, d, m) {
            function _() {
              for (var T = arguments.length, S = T, D = Array(T); S--; ) D[S] = arguments[S];
              if (r && (D = s(D, r, a)), i && (D = c(D, i, l)), b || C) {
                var A = _.placeholder,
                w = o(D, A);
                if (T -= w.length, m > T) return h(e, t, f, A, n, D, w, u, d, m - T)
              }
              var x = E ? n : this,
              R = I ? x[e] : e;
              return u ? D = g(D, u) : O &&
              D.length > 1 &&
              D.reverse(),
              v &&
              d < D.length &&
              (D.length = d),
              this &&
              this !== y &&
              this instanceof _ &&
              (R = N || p(R)),
              R.apply(x, D)
            }
            var v = t & w,
            E = t & T,
            I = t & S,
            b = t & D,
            C = t & A,
            O = t & x,
            N = I ? void 0 : p(e);
            return _
          }
          function m(e, t, n, r) {
            function i() {
              for (
                var t = - 1,
                c = arguments.length,
                l = - 1,
                u = r.length,
                p = Array(u + c),
                d = this &&
                this !== y &&
                this instanceof i ? s : e;
                ++l < u;
              ) p[l] = r[l];
              for (; c--; ) p[l++] = arguments[++t];
              return a(d, o ? n : this, p)
            }
            var o = t & T,
            s = p(e);
            return i
          }
          function h(e, t, n, r, a, i, o, s, c, u) {
            var p = t & D,
            d = s ? l(s) : void 0,
            f = p ? o : void 0,
            m = p ? void 0 : o,
            h = p ? i : void 0,
            _ = p ? void 0 : i;
            t |= p ? O : N,
            t &= ~(p ? N : O),
            t & C ||
            (t &= ~(T | S));
            var g = n(e, t, a, h, f, _, m, d, c, u);
            return g.placeholder = r,
            g
          }
          function _(e, t, n, r, a, i, o, s) {
            var c = t & S;
            if (!c && 'function' != typeof e) throw new TypeError(R);
            var l = r ? r.length : 0;
            if (
              l ||
              (t &= ~(O | N), r = a = void 0),
              o = void 0 === o ? o : q(I(o), 0),
              s = void 0 === s ? s : I(s),
              l -= a ? a.length : 0,
              t & N
            ) {
              var p = r,
              h = a;
              r = a = void 0
            }
            var _ = [
              e,
              t,
              n,
              r,
              a,
              p,
              h,
              i,
              o,
              s
            ];
            if (
              e = _[0],
              t = _[1],
              n = _[2],
              r = _[3],
              a = _[4],
              s = _[9] = null == _[9] ? c ? 0 : e.length : q(_[9] - l, 0),
              !s &&
              t & (D | A) &&
              (t &= ~(D | A)),
              t &&
              t != T
            ) g = t == D ||
            t == A ? d(e, t, s) : t != O &&
            t != (T | O) ||
            a.length ? f.apply(void 0, _) : m(e, t, n, r);
             else var g = u(e, t, n);
            return g
          }
          function g(e, t) {
            for (var n = e.length, r = J(t.length, n), a = l(e); r--; ) {
              var o = t[r];
              e[r] = i(o, n) ? a[o] : void 0
            }
            return e
          }
          function v(e) {
            var t = E(e) ? Y.call(e) : '';
            return t == V ||
            t == F
          }
          function E(e) {
            var t = typeof e;
            return !!e &&
            ('object' == t || 'function' == t)
          }
          function I(e) {
            if (!e) return 0 === e ? e : 0;
            if (e = b(e), e === L || e === - L) {
              var t = 0 > e ? - 1 : 1;
              return t * M
            }
            var n = e % 1;
            return e === e ? n ? e - n : e : 0
          }
          function b(e) {
            if (E(e)) {
              var t = v(e.valueOf) ? e.valueOf() : e;
              e = E(t) ? t + '' : t
            }
            if ('string' != typeof e) return 0 === e ? e : + e;
            e = e.replace(W, '');
            var n = j.test(e);
            return n ||
            G.test(e) ? z(e.slice(2), n ? 2 : 8) : U.test(e) ? k : + e
          }
          var y = n(r),
          T = 1,
          S = 2,
          C = 4,
          D = 8,
          A = 16,
          O = 32,
          N = 64,
          w = 128,
          x = 512,
          R = 'Expected a function',
          L = 1 / 0,
          P = 9007199254740991,
          M = 1.7976931348623157e+308,
          k = NaN,
          B = '__lodash_placeholder__',
          V = '[object Function]',
          F = '[object GeneratorFunction]',
          W = /^\s+|\s+$/g,
          U = /^[-+]0x[0-9a-f]+$/i,
          j = /^0b[01]+$/i,
          G = /^0o[0-7]+$/i,
          H = /^(?:0|[1-9]\d*)$/,
          z = parseInt,
          Q = Object.prototype,
          Y = Q.toString,
          q = Math.max,
          J = Math.min,
          K = function () {
            function e() {
            }
            return function (t) {
              if (E(t)) {
                e.prototype = t;
                var n = new e;
                e.prototype = void 0
              }
              return n ||
              {
              }
            }
          }();
          e.exports = _
        },
        function (e, t, n, r) {
          (
            function (t) {
              function a(e) {
                var t = e ? e.length : 0;
                for (this.data = {
                  hash: u(null),
                  set: new l
                }; t--; ) this.push(e[t])
              }
              function i(e) {
                var t = this.data;
                'string' == typeof e ||
                s(e) ? t.set.add(e) : t.hash[e] = !0
              }
              function o(e) {
                return u &&
                l ? new a(e) : null
              }
              function s(e) {
                var t = typeof e;
                return !!e &&
                ('object' == t || 'function' == t)
              }
              var c = n(r),
              l = c(t, 'Set'),
              u = c(Object, 'create');
              a.prototype.push = i,
              e.exports = o
            }
          ).call(t, function () {
            return this
          }())
        },
        function (e, t, n, r) {
          function a(e) {
            return !!e &&
            'object' == typeof e
          }
          function i(e, t) {
            for (var n = - 1, r = t.length, a = e.length; ++n < r; ) e[a + n] = t[n];
            return e
          }
          function o(e, t, n, r) {
            r ||
            (r = []);
            for (var s = - 1, l = e.length; ++s < l; ) {
              var d = e[s];
              a(d) &&
              c(d) &&
              (n || p(d) || u(d)) ? t ? o(d, t, n, r) : i(r, d) : n ||
              (r[r.length] = d)
            }
            return r
          }
          function s(e) {
            return function (t) {
              return null == t ? void 0 : t[e]
            }
          }
          function c(e) {
            return null != e &&
            l(f(e))
          }
          function l(e) {
            return 'number' == typeof e &&
            e > - 1 &&
            e % 1 == 0 &&
            d >= e
          }
          var u = n(r),
          p = n(21),
          d = 9007199254740991,
          f = s('length');
          e.exports = o
        },
        function (e, t, n, r, a) {
          'use strict';
          t.decode = t.parse = n(r),
          t.encode = t.stringify = n(a)
        }
        ]
      )
    )
  }
);
